/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["App"] = factory();
	else
		root["App"] = factory();
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/Modules/AccordionModule.js":
/*!*************************************************!*\
  !*** ./resources/js/Modules/AccordionModule.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAccordionObject\": () => (/* binding */ getAccordionObject),\n/* harmony export */   \"getOpenBar\": () => (/* binding */ getOpenBar),\n/* harmony export */   \"insertNewCategoryBar\": () => (/* binding */ insertNewCategoryBar),\n/* harmony export */   \"deleteCategoryBar\": () => (/* binding */ deleteCategoryBar)\n/* harmony export */ });\n/**\r\n * DEPENDENCIES\r\n */\n\n/**\r\n * This Module contains code responsible for managing accordions\r\n */\nvar accordions = [];\n/**\r\n * This \"class\" represents a application specific displayed HTML accordion element and enables a detailed control over it\r\n * @param accordion {HTMLElement} The respective HTML element this object represents\r\n * @constructor\r\n */\n\nvar Accordion = function Accordion(accordion) {\n  var This = this;\n  this.accordionElement = accordion;\n  this.accordionBars = this.accordionElement.querySelectorAll(\".accordion-bar\");\n  this.openBar = undefined;\n  this.sliding = false; // This boolean is true if the bar should stay open, e.g. when clicked on a tool\n\n  this.stayOpen = false;\n  /**\r\n   * This function adds an additional accordion bar to the accordion\r\n   * @param nextBarSibling {HTMLElement} The next html element sibling which the new bar should be inserted before\r\n   * @param heading {string | HTMLElement} The heading of the new bar. Can be either a simple string or an HTML element for more complex usages\r\n   * @param content {HTMLElement} The content of the new bar\r\n   * @return {HTMLElement}\r\n   */\n\n  this.addAccordionBar = function (nextBarSibling, heading, content) {\n    var newBar = GeneralModule.generateElement(\"DIV\", [\"accordion-bar\", \"clearfix\"]);\n    var newHeader = GeneralModule.generateElement(\"DIV\", [\"bar-header\", \"clearfix\"]);\n    var barIcon = GeneralModule.generateElement(\"I\", [\"material-icons\", \"open-indicator\"], \"keyboard_arrow_down\");\n    newHeader.appendChild(barIcon);\n\n    if (typeof heading === \"string\") {\n      var barHeaderContent = GeneralModule.generateElement(\"h4\", [\"heading\"], heading);\n    } else {\n      newHeader.appendChild(heading);\n    }\n\n    newBar.appendChild(newHeader);\n    var newContent = GeneralModule.generateElement(\"DIV\", [\"bar-content\"]);\n    newContent.appendChild(content);\n    newBar.appendChild(newContent);\n    This.accordionElement.insertBefore(newBar, nextBarSibling);\n    This.accordionBars = This.accordionElement.querySelectorAll(\".accordion-bar\");\n    return newBar;\n  };\n  /**\r\n   * This function manages clicks on the accordion element and controls its behavior\r\n   */\n\n\n  this.accordionElement.addEventListener(\"click\", function (e) {\n    var target = e.target;\n    e.preventDefault();\n\n    while (target.nodeName !== \"BODY\" && !target.classList.contains(\"bar-header\")) {\n      target = target.parentNode;\n    } // the bar header is clicked\n\n\n    if (target.classList.contains(\"bar-header\")) {\n      // This timeout enables other modules to individually set the stayOpen property e.g. and to have it a real effect\n      window.setTimeout(function () {\n        // if the clicked bar is NOT open and NO other bars should stay open and any possible frontend sliding animations are done\n        if (!target.parentElement.classList.contains(\"open\") && !This.stayOpen && !This.sliding) {\n          This.hideAllExcept(This, target.parentElement);\n          This.show(target.parentElement);\n        } else {\n          if (!This.stayOpen && !This.sliding) {\n            This.hide(target.parentElement);\n          }\n        }\n      }, 20);\n      return;\n    }\n  });\n  /**\r\n   * This function deletes a given accordion bar\r\n   * @param accordionBar {HTMLElement} This bar will be deleted\r\n   */\n\n  this.deleteAccordionBar = function (accordionBar) {\n    if (accordionBar.classList.contains(\"accordion-bar\")) {\n      accordionBar.remove();\n      This.accordionBars = This.accordionElement.querySelectorAll(\".accordion-bar\");\n    }\n  };\n};\n/**\r\n * This function handles the behavior of showing an accordion bar\r\n * @param accordionBar {HTMLElement} This given accordion bar will be shown\r\n */\n\n\nAccordion.prototype.show = function (accordionBar) {\n  var This = this;\n  this.openBar = accordionBar;\n  this.sliding = true;\n  accordionBar.classList.add(\"open\");\n  var content = accordionBar.querySelector(\"div.bar-content\");\n\n  var getHeight = function getHeight() {\n    content.style.display = \"block\";\n    return content.scrollHeight;\n  };\n\n  content.style.height = getHeight() + \"px\";\n  document.getElementsByTagName(\"BODY\")[0].classList.add(\"open-accordion\");\n  window.setTimeout(function () {\n    This.sliding = false;\n  }, 500);\n};\n/**\r\n * This function handles the behaviour of hiding an accordion bar\r\n * @param accordionBar {HTMLElement} This given bar will be hidden\r\n */\n\n\nAccordion.prototype.hide = function (accordionBar) {\n  var This = this;\n  this.openBar = undefined;\n  this.sliding = true;\n  accordionBar.classList.remove(\"open\");\n  var content = accordionBar.querySelector(\"div.bar-content\");\n  content.style.height = \"0\";\n  document.getElementsByTagName(\"BODY\")[0].classList.remove(\"open-accordion\");\n  window.setTimeout(function () {\n    content.style.display = \"none\";\n    This.sliding = false;\n  }, 500);\n};\n/**\r\n * This function will hide all accordion bars except the given one\r\n * @param accordion {object} The containing accordion object\r\n * @param accordionBar {HTMLElement} The accordion bar which should stay open\r\n */\n\n\nAccordion.prototype.hideAllExcept = function (accordion, accordionBar) {\n  if (accordion.accordionElement.classList.contains(\"accordion\") && accordionBar.classList.contains(\"accordion-bar\")) {\n    var openBars = document.querySelectorAll(\".open\");\n    openBars.forEach(function (bar) {\n      if (bar !== accordionBar) {\n        bar.classList.remove(\"open\");\n        accordion.hide(bar);\n      }\n    });\n  }\n};\n/**\r\n * This function returns the currently open bar\r\n * @return {Element}\r\n */\n\n\nfunction getOpenBar() {\n  var openBar = document.querySelector(\"div.accordion-bar.open\");\n  return openBar;\n}\n/**\r\n * This api function returns the respective accordion object to a given accordion html element\r\n * @param accordionElement {HTMLElement} The respective html element to which the responsible accordion object should be found\r\n * @return {object}\r\n */\n\n\nfunction getAccordionObject(accordionElement) {\n  if (accordionElement.classList.contains(\"accordion\")) {\n    var wantedAccordion = undefined;\n    accordions.forEach(function (accordion) {\n      if (accordion.accordionElement === accordionElement) {\n        wantedAccordion = accordion;\n      }\n    });\n    return wantedAccordion;\n  }\n}\n/**\r\n * This function inserts a new accordion bar on a given accordion html element\r\n * @param accordionElement {HTMLElement} The accordion on which the new bar should be inserted\r\n * @param nextBarSibling {HTMLElement} The next html element sibling which the new bar should be inserted before\r\n * @param heading {string | HTMLElement} The heading of the new bar. Can be either a simple string or an HTML element for more complex usages\r\n * @param content {HTMLElement} The content of the new bar\r\n */\n\n\nfunction insertNewCategoryBar(accordionElement, nextBarSibling, heading, content) {\n  if (accordionElement.classList.contains(\"accordion\")) {\n    accordions.forEach(function (acc) {\n      if (acc.accordionElement === accordionElement) {\n        acc.addAccordionBar(nextBarSibling, heading, content);\n      }\n    });\n  }\n}\n/**\r\n * This function deletes a given accordion bar from a given accordion html element\r\n * @param accordionElement {HTMLElement} The html accordion element from which the bar should be deleted\r\n * @param accordionBar {HTMLElement} The bar that should be deleted\r\n */\n\n\nfunction deleteCategoryBar(accordionElement, accordionBar) {\n  accordions.forEach(function (acc) {\n    if (acc.accordionElement === accordionElement) {\n      acc.deleteAccordionBar(accordionBar);\n    }\n  });\n}\n/**\r\n* This block initializes the static accordion elements on an application page\r\n*/\n\n\nvar accordionElements = document.querySelectorAll(\"div.accordion\");\naccordionElements.forEach(function (accordion) {\n  accordions.push(new Accordion(accordion));\n});\n/**\r\n * API:\r\n */\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/AccordionModule.js?");

/***/ }),

/***/ "./resources/js/Modules/AdministrationModule.js":
/*!******************************************************!*\
  !*** ./resources/js/Modules/AdministrationModule.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAdminTableObject\": () => (/* binding */ getAdminTableObject)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/* harmony import */ var _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MaterialInputsModule */ \"./resources/js/Modules/MaterialInputsModule.js\");\n/* harmony import */ var _ModalModule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModalModule */ \"./resources/js/Modules/ModalModule.js\");\n/* harmony import */ var _FormModule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FormModule */ \"./resources/js/Modules/FormModule.js\");\n/* harmony import */ var _SendRequestModule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SendRequestModule */ \"./resources/js/Modules/SendRequestModule.js\");\n/* harmony import */ var _TranslationModule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TranslationModule */ \"./resources/js/Modules/TranslationModule.js\");\n/* harmony import */ var _TooltipModule__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TooltipModule */ \"./resources/js/Modules/TooltipModule.js\");\n/**\n * Dependencies\n */\n\n\n\n\n\n\n\n/**\n * Module contains code concerning admin table\n */\n\nvar adminTable = undefined; // Table Object\n\nvar AdminTable = function AdminTable(table) {\n  var _this2 = this;\n\n  var This = this;\n  this.tableElement = table;\n  this.tableHeader = table.querySelector(\"thead\");\n  this.tableBody = table.querySelector(\"tbody\");\n  this.tableFooter = table.querySelector(\"tfoot\") ? table.querySelector(\"tfoot\") : undefined;\n  this.ths = this.tableHeader.querySelectorAll(\"th\");\n\n  var Row = function Row(tr, tableObject) {\n    var This = this;\n    this.tr = tr;\n    this.containingTable = tableObject;\n    this.tds = this.tr.querySelectorAll(\"td\");\n    this.editMode = false;\n    this.editUrl = this.tr.querySelector(\"a.primary-button.edit\") ? this.tr.querySelector(\"a.primary-button.edit\").getAttribute(\"href\") : undefined;\n    this.rights = {}; // Read td elements of row (tr element) into property of this object and simultaneously create filter object\n\n    this.updateValues = function () {\n      var _this = this;\n\n      This.tds.forEach(function (td) {\n        if (td.getAttribute(\"data-privilege\")) {\n          var hasRight = td.querySelector(\"i\").innerText === \"done\";\n          var right = td.getAttribute(\"data-privilege\");\n\n          if (right && right !== \"\") {\n            _this.rights[right] = hasRight;\n          }\n        }\n      });\n    };\n\n    this.updateValues();\n\n    this.startEditRow = function () {\n      This.editMode = true;\n      This.tr.classList.add(\"edit-mode\");\n      This.tr.addEventListener(\"click\", editRow); // Change edit icon to save icon\n\n      var editIcon = This.tr.querySelector(\"a.edit\");\n      editIcon.querySelector(\"i\").innerHTML = \"save\";\n      editIcon.querySelector(\"p\").innerHTML = \"Speichern\"; //change delete icon to cancel (the edit) icon\n\n      var deleteIcon = This.tr.querySelector(\"a.delete\");\n      deleteIcon.querySelector(\"i\").innerHTML = \"close\";\n      deleteIcon.querySelector(\"p\").innerHTML = \"Abbrechen\";\n      switchTdContent(true, false);\n    };\n    /**\n     * This functions switches the content of the particular td element to either inputs or just icons depending on the parameter\n     * @param switchToInputs Boolean that determines the content to switch to\n     * @param saved Boolean that determines if to use old values since editing might have been canceled\n     */\n\n\n    function switchTdContent(switchToInputs, saved) {\n      This.tds.forEach(function (td) {\n        if (td.getAttribute(\"data-privilege\")) {\n          if (switchToInputs) {\n            if (td.classList.contains(\"privileged\")) {\n              td.innerHTML = \"\";\n              td.appendChild(createSwitch(true, td.getAttribute(\"data-privilege\")));\n            } else {\n              td.innerHTML = \"\";\n              td.appendChild(createSwitch(false, td.getAttribute(\"data-privilege\")));\n            }\n\n            td.classList.remove(\"privileged\");\n          } else {\n            // editing has been saved so convert switches to icons\n            if (saved) {\n              if (td.querySelector(\"input\").checked) {\n                td.classList.add(\"privileged\");\n                td.innerHTML = \"\";\n                td.appendChild(createIcon(true));\n              } else {\n                td.innerHTML = \"\";\n                td.appendChild(createIcon(false));\n              } // editing has been canceled -> so restore the old privileges\n\n            } else {\n              if (This.rights[td.getAttribute(\"data-privilege\")]) {\n                td.classList.add(\"privileged\");\n                td.innerHTML = \"\";\n                td.appendChild(createIcon(true));\n              } else {\n                td.innerHTML = \"\";\n                td.appendChild(createIcon(false));\n              }\n            }\n          }\n        }\n      });\n    }\n\n    function createSwitch(checked, privilegeName) {\n      var switchInput = (0,_MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.createInput)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.inputTypes.SWITCH, [], undefined, privilegeName, undefined, privilegeName, checked, undefined);\n      return switchInput.inputContainer;\n    }\n\n    function createIcon(hasRight) {\n      var icon;\n\n      if (hasRight) {\n        icon = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\"], \"done\");\n      } else {\n        icon = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\"], \"close\");\n      }\n\n      return icon;\n    }\n\n    function endEditRow(saved) {\n      switchTdContent(false, saved);\n      This.editMode = false;\n      This.tr.removeEventListener(\"click\", editRow);\n      This.tr.classList.remove(\"edit-mode\");\n      This.containingTable.editMode = false; // change save icon back to edit icon\n\n      var saveIcon = This.tr.querySelector(\"a.edit\");\n      saveIcon.querySelector(\"i\").innerHTML = \"create\";\n      saveIcon.querySelector(\"p\").innerHTML = \"Bearbeiten\"; // change cancel icon back to delete icon\n\n      var cancelIcon = This.tr.querySelector(\"a.delete\");\n      cancelIcon.querySelector(\"i\").innerHTML = \"delete\";\n      cancelIcon.querySelector(\"p\").innerHTML = \"Löschen\";\n      This.updateValues();\n    }\n\n    function editRow(e) {\n      e.stopImmediatePropagation();\n      var target = e.target;\n\n      while (target.nodeName !== \"BODY\" && !target.classList.contains(\"edit\") && !target.classList.contains(\"delete\")) {\n        target = target.parentElement;\n      }\n\n      if (target.nodeName === \"BODY\") {\n        return;\n      }\n\n      if (target.classList.contains(\"edit\")) {\n        e.preventDefault();\n        var data = _TranslationModule__WEBPACK_IMPORTED_MODULE_5__.translateInputsToObject(This.tr);\n        (0,_SendRequestModule__WEBPACK_IMPORTED_MODULE_4__.sendRequest)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.requests.PUT, This.editUrl, function () {\n          endEditRow(true);\n        }, data, true);\n        return;\n      }\n\n      if (target.classList.contains(\"delete\")) {\n        e.preventDefault();\n        endEditRow(false);\n        return;\n      }\n    }\n  }; // collection of tr elements of table body\n\n\n  this.trs = this.tableBody.querySelectorAll(\"tr\"); // array for the row objects\n\n  this.rows = []; // keeps track of the current (active) mode: editMode enables the current user to change privileges of the selected row\n\n  this.editMode = false; //Responsible add button for this table\n\n  this.addElementBtn = undefined;\n\n  if (this.tableElement.getAttribute(\"data-add\")) {\n    var addElementBtnSelector = this.tableElement.getAttribute(\"data-add\");\n    this.addElementBtn = document.querySelector(\"#\" + addElementBtnSelector);\n  } // Iterate over all available rows in table body and read them into objects\n\n\n  this.trs.forEach(function (tr) {\n    _this2.rows.push(new Row(tr, This));\n  }); // Eventhandler for clicks in table element\n\n  this.tableElement.addEventListener(\"click\", function (e) {\n    if (This.editMode) {\n      return;\n    }\n\n    e.preventDefault();\n    var target = e.target;\n\n    while (target.nodeName !== \"BODY\" && !target.classList.contains(\"edit\") && !target.classList.contains(\"delete\")) {\n      target = target.parentNode;\n    }\n\n    if (target.nodeName === \"BODY\") {\n      return;\n    } // Edit a table row\n\n\n    if (target.classList.contains(\"edit\")) {\n      This.editMode = true;\n\n      while (target.nodeName !== \"TR\") {\n        target = target.parentNode;\n      }\n\n      var row = This.getRowObject(target);\n      row.startEditRow(e);\n      return;\n    } // Delete a table row\n\n\n    if (target.classList.contains(\"delete\")) {\n      var url = target.getAttribute(\"href\");\n\n      while (target.nodeName !== \"TR\") {\n        target = target.parentNode;\n      }\n\n      var _row = This.getRowObject(target);\n\n      This.deleteRow(target, _row, url);\n      return;\n    }\n  });\n  /**\n   * This function initializes the addition of a new entity/element to the table which is a new admin. New admins can be registered by inviting them via an e-mail address. Then they can register themselves on a custom landing page for them.\n   */\n\n  this.addingEntity = function () {\n    var mailInput = (0,_MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.createInput)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.inputTypes.TEXT, [\"mail\", \"required\"], undefined, \"new-admin-mail\", \"E-Mail-Adresse\", undefined, undefined, undefined);\n    var ModalWindow = _ModalModule__WEBPACK_IMPORTED_MODULE_2__.confirmModal(\"Neuen Administrator hinzufügen (einladen)\", mailInput.inputContainer, undefined, undefined, function () {\n      if (!(0,_FormModule__WEBPACK_IMPORTED_MODULE_3__.checkInput)(mailInput.inputContainer, true)) {\n        return false;\n      } else {\n        var data = {\n          email: mailInput.getValue()\n        };\n        (0,_SendRequestModule__WEBPACK_IMPORTED_MODULE_4__.sendRequest)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.requests.POST, \"/admin/registration/invitation\", function () {\n          ModalWindow.closeModal();\n        }, data, true);\n      }\n    });\n  }; // Return row object corresponding to given tr element\n\n\n  this.getRowObject = function (tr) {\n    var r = undefined;\n    This.rows.forEach(function (row) {\n      if (row.tr === tr) {\n        r = row;\n      }\n    });\n    return r;\n  }; // Delete a table row\n\n\n  this.deleteRow = function (tr, rowObject, url) {\n    var adminName = tr.querySelector(\"td:first-child\").innerText;\n    var ModalWindow = App.ModalModule.deleteModal(\"Admin löschen\", \"Willst du den Admin \" + adminName + \" wirklich löschen?\", function () {\n      App.SendRequestModule.sendRequest(App.GeneralModule.generalVariables.requests.DELETE, url, function () {\n        This.rows.splice(This.rows.indexOf(rowObject), 1);\n        tr.remove();\n      }, undefined, true);\n    }, undefined, undefined);\n  };\n}; // if there is an admin table then initialize it\n\n\nif (document.querySelector(\"table.admin-table\")) {\n  var adminTableElement = document.querySelector(\"table.admin-table\");\n  adminTable = new AdminTable(adminTableElement); // initialize the tooltips\n\n  var permissionDiv = document.querySelector(\"div.permissions\");\n  var permissionSpans = permissionDiv.querySelectorAll(\"div.permission\");\n  var ths = adminTable.tableHeader.querySelectorAll(\"th\");\n  permissionSpans.forEach(function (permissionSpan) {\n    var permissionName = permissionSpan.querySelector(\"span.name\").innerText;\n    var permissionDescription = permissionSpan.querySelector(\"span.description\").innerText;\n    ths.forEach(function (th) {\n      if (th.innerText.includes(permissionName)) {\n        var ttTrigger = th.querySelector(\"span.tt-trigger\");\n        var identifier = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.createUniqueRandomIdentifier();\n        ttTrigger.classList.add(identifier);\n        _TooltipModule__WEBPACK_IMPORTED_MODULE_6__.createTooltip(\".\" + identifier, permissionDescription);\n      }\n    });\n  });\n}\n\nfunction getAdminTableObject(adminTableElement) {\n  if (adminTableElement.classList.contains(\"admin-table\")) {\n    if (adminTableElement === adminTable.tableElement) {\n      return adminTable;\n    }\n  }\n}\n/**\n * API:\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/AdministrationModule.js?");

/***/ }),

/***/ "./resources/js/Modules/CarouselModule.js":
/*!************************************************!*\
  !*** ./resources/js/Modules/CarouselModule.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSlideByContent\": () => (/* binding */ getSlideByContent),\n/* harmony export */   \"enableAllSlides\": () => (/* binding */ enableAllSlides),\n/* harmony export */   \"enableSlide\": () => (/* binding */ enableSlide),\n/* harmony export */   \"disableSlide\": () => (/* binding */ disableSlide),\n/* harmony export */   \"activateCarousel\": () => (/* binding */ activateCarousel),\n/* harmony export */   \"deactivateCarousel\": () => (/* binding */ deactivateCarousel),\n/* harmony export */   \"registerCallback\": () => (/* binding */ registerCallback),\n/* harmony export */   \"removeCallback\": () => (/* binding */ removeCallback)\n/* harmony export */ });\n/* harmony import */ var _PrimaryButtonModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PrimaryButtonModule */ \"./resources/js/Modules/PrimaryButtonModule.js\");\n/* harmony import */ var _SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SecondaryButtonModule */ \"./resources/js/Modules/SecondaryButtonModule.js\");\n/* harmony import */ var _ModalModule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModalModule */ \"./resources/js/Modules/ModalModule.js\");\n/**\r\n * DEPENDENCIES\r\n */\n\n\n\n/**\r\n * This Module contains code responsible for managing carousels\r\n */\n\nvar carousels = [];\n/**\r\n * This \"class\" represents a displayed HTML carousel element and enables a detailed control over it\r\n * @param carouselContainer {HTMLElement} The respective HTML element this object represents\r\n * @constructor\r\n */\n\nvar Carousel = function Carousel(carouselContainer) {\n  var This = this;\n  this.carouselElement = carouselContainer;\n  this.slideWrapper = carouselContainer.querySelector(\"div.page-wrapper\");\n  this.slides = carouselContainer.querySelectorAll(\"div.page\");\n  this.carouselDeactivationButton = (0,_PrimaryButtonModule__WEBPACK_IMPORTED_MODULE_0__.createPrimaryButton)([\"close\", \"carousel-close\"], undefined, \"close\", \"Karussel schließen\");\n  this.slideCount = this.slides.length;\n  this.angleDistance = 360 / this.slideCount;\n  this.active = true;\n  /**\r\n   * This object contains options concerning the display of the carousel\r\n   * @type {{distanceZ: number}}\r\n   */\n\n  this.options = {\n    distanceZ: 15\n  };\n  /**\r\n   * This object contains current properties of the carousel\r\n   * @type {{startAngle: number, xStart: number, rotationSpeed: number, lastAngle: number, currentAngle: number}}\r\n   */\n\n  this.properties = {\n    rotationSpeed: 1,\n    xStart: 0,\n    startAngle: 0,\n    currentAngle: 0,\n    lastAngle: 0\n  };\n  /**\r\n   * This function handles the rotation of the carousel (by rotating each slide individually)\r\n   * @param rotation\r\n   */\n\n  this.rotateSlides = function (rotation) {\n    var counter = 0;\n    This.slides.forEach(function (slide) {\n      var rotate = This.angleDistance * counter + rotation;\n      slide.style.transform = \"rotateY(\" + rotate + \"deg) translateZ(\" + This.options.distanceZ + \"rem) rotateY(\" + rotate * -1 + \"deg)\";\n\n      if (Math.abs(rotate % 360) < 110 || Math.abs(rotate % 360) > 250) {\n        slide.style.visibility = \"visible\";\n      } else {\n        slide.style.visibility = \"hidden\";\n      }\n\n      counter++;\n    });\n  };\n  /**\r\n   * This function initializes a carousel element\r\n   */\n\n\n  this.init = function () {\n    This.rotateSlides(0);\n  };\n\n  this.init();\n  /**\r\n   * These functions handle the starting event for the carousel to listen for (mousedown and touchstart)\r\n   */\n\n  This.carouselElement.addEventListener(\"mousedown\", function (e) {\n    if (This.active) {\n      This.downHandler(e);\n    }\n  });\n  This.carouselElement.addEventListener(\"touchstart\", function (e) {\n    if (This.active) {\n      This.downHandler(e);\n    }\n  });\n  /**\r\n   * This function handles the starting event for the carousel\r\n   * @param e {Event} The event object\r\n   */\n\n  this.downHandler = function (e) {\n    e.preventDefault();\n    window.cancelAnimationFrame(fadeAnimation);\n\n    if (e.touches) {\n      This.properties.xStart = e.touches[0].pageX;\n    } else {\n      This.properties.xStart = e.pageX;\n    }\n\n    document.addEventListener(\"mousemove\", This.moveHandler);\n    document.addEventListener(\"touchmove\", This.moveHandler);\n    document.addEventListener(\"mouseup\", This.upHandler);\n    document.addEventListener(\"touchend\", This.upHandler);\n  };\n  /**\r\n   * This variable is necessary to determine the rotation speed after disengaging the carousel and contains the starting time\r\n   */\n\n\n  var then;\n  /**\r\n   * This function rotates the carousel on a moving user interaction\r\n   * @param e {Event} The event object\r\n   */\n\n  this.moveHandler = function (e) {\n    if (then === undefined) {\n      then = Date.now();\n    }\n\n    e.preventDefault();\n    var xCoords;\n\n    if (e.touches) {\n      xCoords = e.touches[0].pageX;\n    } else {\n      xCoords = e.pageX;\n    }\n\n    var xDist = xCoords - This.properties.xStart;\n    var angle = This.calculateAngle(xDist);\n    var rotation = This.properties.startAngle + angle;\n    This.rotateSlides(rotation);\n    This.properties.currentAngle = rotation;\n    var now = Date.now();\n    This.calculateRPS(now, then);\n    This.properties.lastAngle = rotation;\n    then = now;\n  };\n  /**\r\n   * This variable stores the requestAnimationFrame reference\r\n   */\n\n\n  var fadeAnimation;\n  /**\r\n   * This variable handles the user disengagement of the carousel\r\n   * @param e {Event} The event object\r\n   */\n\n  this.upHandler = function (e) {\n    document.removeEventListener(\"mousemove\", This.moveHandler);\n    document.removeEventListener(\"touchmove\", This.moveHandler);\n    document.removeEventListener(\"mouseup\", This.upHandler);\n    document.removeEventListener(\"touchend\", This.upHandler);\n    This.properties.startAngle = This.properties.lastAngle;\n    fadeAnimation = window.requestAnimationFrame(function () {\n      This.turnCarousel();\n    });\n  };\n  /**\r\n   * This function calculates the turn angle\r\n   * @param xDist {Number} The horizontal distance of the user interaction\r\n   * @return {number}\r\n   */\n\n\n  this.calculateAngle = function (xDist) {\n    var oppositeLeg = xDist;\n    var adjacentLeg = This.options.distanceZ * 16;\n    var tanAlpha = oppositeLeg / adjacentLeg;\n    var radians = Math.atan(tanAlpha);\n    var alpha = radians * (180 / Math.PI);\n    var factor = 1.25;\n    return alpha * factor;\n  };\n  /**\r\n   * This function calculates the rotation speed (RPS = Rotations per Second)\r\n   * @param then {Date} Starting time\r\n   * @param now {Date} Current time\r\n   */\n\n\n  this.calculateRPS = function (then, now) {\n    var time = then - now;\n    var distance = This.properties.currentAngle - This.properties.lastAngle;\n    var speed = distance / time;\n    This.properties.rotationSpeed = speed * 10;\n  };\n  /**\r\n   * This function handles the carousel turning animation after the user interaction stopped\r\n   */\n\n\n  this.turnCarousel = function () {\n    var rotation = This.properties.startAngle + This.properties.rotationSpeed;\n    This.rotateSlides(rotation);\n    This.properties.startAngle = rotation;\n    var relativeRotation = This.properties.startAngle % 360;\n    var position = Math.round(relativeRotation / This.angleDistance);\n    var wantedAngle = position * This.angleDistance;\n    /*if (Math.abs(relativeRotation - wantedAngle) < 10) {\r\n      This.properties.rotationSpeed *= 0.85;\r\n    } else {\r\n      This.properties.rotationSpeed *= 0.95;\r\n    }\r\n    */\n\n    This.properties.rotationSpeed *= 0.95; //console.log(wantedAngle);\n\n    if (Math.abs(This.properties.rotationSpeed) < 0.05 || isNaN(This.properties.rotationSpeed)) {\n      window.cancelAnimationFrame(fadeAnimation);\n    } else {\n      fadeAnimation = window.requestAnimationFrame(function () {\n        This.turnCarousel();\n      });\n    }\n  };\n  /**\r\n   * This function returns a specific page of the carousel given a specific element selector and a search query (this is case insensitive!)\r\n   * @param elementSelector {string} The element of the page that should be checked for its content\r\n   * @param searchQuery {string} The string to check the content of the element of the page against\r\n   * @return {HTMLElement}\r\n   */\n\n\n  this.getSlideByContent = function (elementSelector, searchQuery) {\n    var wantedSlide = undefined;\n    This.slides.forEach(function (slide) {\n      var searchElementContent = slide.querySelector(elementSelector).innerText;\n\n      if (searchElementContent.toLowerCase() === searchQuery.toLowerCase()) {\n        wantedSlide = slide;\n      }\n    });\n    return wantedSlide;\n  };\n  /**\r\n   * This function disables a given slide/page\r\n   * @param slide {HTMLElement} The slide/page that should be disabled\r\n   */\n\n\n  this.disableSlide = function (slide) {\n    if (slide.classList.contains(\"page\")) {\n      slide.classList.add(\"inactive\");\n      slide.querySelector(\".secondary-button\").classList.add(\"disabled\");\n    }\n  };\n  /**\r\n   * This function enables a given slide/page\r\n   * @param slide {HTMLElement} The slide/page that should be enabled\r\n   */\n\n\n  this.enableSlide = function (slide) {\n    if (slide.classList.contains(\"page\")) {\n      slide.classList.remove(\"inactive\");\n      slide.querySelector(\".secondary-button\").classList.remove(\"disabled\");\n    }\n  };\n  /**\r\n   * This function enables all the slides in this carousel\r\n   */\n\n\n  this.enableAllSlides = function () {\n    This.slides.forEach(function (slide) {\n      slide.classList.remove(\"inactive\");\n      (0,_SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_1__.enableSecondaryButton)(slide.querySelector(\".secondary-button\"));\n    });\n  };\n  /**\r\n   * This function activates this carousel (user interaction possible)\r\n   */\n\n\n  this.activateCarousel = function () {\n    This.active = true;\n    This.carouselElement.classList.add(\"active\");\n    This.carouselDeactivationButton.addEventListener(\"click\", This.deactivateCarousel);\n    This.carouselElement.parentElement.appendChild(this.carouselDeactivationButton);\n  };\n  /**\r\n   * This function deactivates this carousel (user interaction not possible)\r\n   */\n\n\n  this.deactivateCarousel = function () {\n    This.active = false;\n    This.carouselElement.classList.remove(\"active\");\n\n    if (This.carouselElement.parentElement.querySelector(\".primary-button.carousel-close\")) {\n      This.carouselDeactivationButton.removeEventListener(\"click\", This.deactivateCarousel);\n      This.carouselElement.parentElement.removeChild(This.carouselDeactivationButton);\n\n      if (document.querySelector(\".just-overlay\")) {\n        (0,_ModalModule__WEBPACK_IMPORTED_MODULE_2__.removeOverlay)();\n      }\n    }\n  };\n  /**\r\n   * This object saves the callbacks that get registered on carousel pages/slides\r\n   * @type {{string:function}}\r\n   */\n\n\n  this.callbacks = {};\n  /**\r\n   * This function registers a callback on this carousel (element)\r\n   * @param callback {function} The function reference that should be called after clicking on a carousel button\r\n   */\n\n  this.registerCallback = function (callback) {\n    This.carouselElement.addEventListener(\"click\", handleClick);\n    This.callbacks[callback.toString()] = handleClick;\n\n    function handleClick(e) {\n      var target = e.target;\n\n      while (target.nodeName !== \"BODY\" && !target.classList.contains(\"secondary-button\")) {\n        target = target.parentElement;\n      }\n\n      if (target.classList.contains(\"secondary-button\")) {\n        e.stopImmediatePropagation();\n        callback(target);\n      }\n    }\n  };\n  /**\r\n   * This function removes registered callbacks from this carousel (element)\r\n   * @param callback\r\n   */\n\n\n  this.removeCallback = function (callback) {\n    var listener = this.callbacks[callback.toString()];\n    This.carouselElement.removeEventListener(\"click\", listener);\n    delete this.callbacks[callback.toString()];\n  };\n};\n/**\r\n * This block initializes the (static) carousel elements on an application page\r\n */\n\n\nvar carouselContainers = document.querySelectorAll(\"div.carousel-container\");\ncarouselContainers.forEach(function (cc) {\n  carousels.push(new Carousel(cc));\n});\n/**\r\n * This function returns a page/slide filtered by specific content of an element contained in the carousel\r\n * @param carouselElement {HTMLElement} The carousel which contains the slide\r\n * @param elementSelector {string} The element of the page that should be checked for its content\r\n * @param searchQuery {string} The string to check the content of the element of the page against\r\n * @return {HTMLElement}\r\n */\n\nfunction getSlideByContent(carouselElement, elementSelector, searchQuery) {\n  if (carouselElement.classList.contains(\"carousel-container\")) {\n    var slide = undefined;\n    carousels.forEach(function (carousel) {\n      if (carousel.carouselElement === carouselElement) {\n        slide = carousel.getSlideByContent(elementSelector, searchQuery);\n      }\n    });\n    return slide;\n  }\n}\n/**\r\n * This function enables all pages/slides in a given carousel\r\n * @param carouselElement {HTMLElement} The carousel element in which all pages/slides should be enabled\r\n */\n\n\nfunction enableAllSlides(carouselElement) {\n  if (carouselElement.classList.contains(\"carousel-container\")) {\n    carousels.forEach(function (carousel) {\n      if (carousel.carouselElement === carouselElement) {\n        return carousel.enableAllSlides();\n      }\n    });\n  }\n}\n/**\r\n * This function enables a given slide/page\r\n * @param slide {HTMLElement} The slide/page that should be enabled\r\n */\n\n\nfunction enableSlide(slide) {\n  if (typeof slide !== \"undefined\" && slide.classList.contains(\"page\")) {\n    slide.classList.remove(\"inactive\");\n    (0,_SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_1__.enableSecondaryButton)(slide.querySelector(\".secondary-button\"));\n  }\n}\n/**\r\n * This function disables a given slide/page\r\n * @param slide {HTMLElement} The slide/page that should be disabled\r\n */\n\n\nfunction disableSlide(slide) {\n  if (typeof slide !== \"undefined\" && slide.classList.contains(\"page\")) {\n    slide.classList.add(\"inactive\");\n    (0,_SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_1__.disableSecondaryButton)(slide.querySelector(\".secondary-button\"));\n  }\n}\n/**\r\n * This function activates a given carousel\r\n * @param carouselElement {HTMLElement} The carousel that should be activated\r\n */\n\n\nfunction activateCarousel(carouselElement) {\n  if (carouselElement.classList.contains(\"carousel-container\")) {\n    carousels.forEach(function (carousel) {\n      if (carousel.carouselElement === carouselElement) {\n        carousel.activateCarousel();\n      }\n    });\n  }\n}\n/**\r\n * This function deactivates a given carousel\r\n * @param carouselElement {HTMLElement} The carousel that should be deactivated\r\n */\n\n\nfunction deactivateCarousel(carouselElement) {\n  if (carouselElement.classList.contains(\"carousel-container\")) {\n    carousels.forEach(function (carousel) {\n      if (carousel.carouselElement === carouselElement) {\n        carousel.deactivateCarousel();\n      }\n    });\n  }\n}\n/**\r\n * This function registers a callback on a given carousel\r\n * @param carouselElement {HTMLElement} The carousel element that should have the given callback\r\n * @param callback {function} The function reference that should be called when the user clicks a button in the carousel\r\n */\n\n\nfunction registerCallback(carouselElement, callback) {\n  if (carouselElement.classList.contains(\"carousel-container\")) {\n    carousels.forEach(function (carousel) {\n      if (carousel.carouselElement === carouselElement) {\n        carousel.registerCallback(callback);\n      }\n    });\n  }\n}\n/**\r\n * This function removes a callback from the given carousel\r\n * @param carouselElement {HTMLElement} The carousel element from which the callback should be removed\r\n * @param callback {function} The function reference to be removed\r\n */\n\n\nfunction removeCallback(carouselElement, callback) {\n  if (carouselElement.classList.contains(\"carousel-container\")) {\n    carousels.forEach(function (carousel) {\n      if (carousel.carouselElement === carouselElement) {\n        carousel.removeCallback(callback);\n      }\n    });\n  }\n}\n/**\r\n * API:\r\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/CarouselModule.js?");

/***/ }),

/***/ "./resources/js/Modules/CategoryModule.js":
/*!************************************************!*\
  !*** ./resources/js/Modules/CategoryModule.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getCategoryByName\": () => (/* binding */ getCategoryByName),\n/* harmony export */   \"createCategory\": () => (/* binding */ createCategory),\n/* harmony export */   \"deleteCategory\": () => (/* binding */ deleteCategory)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/**\r\n * DEPENDENCIES\r\n */\n\n/**\r\n * This Module contains code responsible for managing categories\r\n */\n\nvar fightingSystemTypes = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.fightingSystemTypes;\nvar categoryStatuus = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.categoryStatuus;\nvar categories = [];\n/**\r\n * This \"class\" represents an application specific (fighting) category (only present in a tournament context)\r\n * @param categoryName {string} A unique name which works as an universal identifier\r\n * @constructor\r\n */\n\nvar Category = function Category(categoryName) {\n  var This = this;\n  this.name = categoryName;\n  this.fightingSystemType = undefined;\n  this.members = [];\n  this.numberMembers = 0;\n  this.fightingSystem = undefined;\n  this.prepared = false;\n  this.editable = true;\n  this.examinationType = undefined;\n  this.categoryStatus = categoryStatuus[0];\n  this.referees = [];\n  this.helper = [];\n  /**\r\n   * This function adds a new member to the members list of this category\r\n   * @param member {Fighter} The member to be added\r\n   */\n\n  this.addMember = function (member) {\n    this.members.push(member);\n    this.numberMembers++;\n\n    if (this.fightingSystem) {\n      this.fightingSystem.addFighter(member);\n    }\n  };\n  /**\r\n   * This function removes a member from the members list of this category\r\n   * @param firstName {string}\r\n   * @param lastName {string}\r\n   */\n\n\n  this.removeMember = function (firstName, lastName) {\n    var toBeRemoved;\n    this.members.forEach(function (member) {\n      if (member.firstName === firstName && member.lastName === lastName) {\n        toBeRemoved = member;\n      }\n    });\n\n    if (this.fightingSystem) {\n      this.fightingSystem.removeFighter(toBeRemoved);\n    }\n\n    this.members.splice(this.members.indexOf(toBeRemoved), 1);\n    this.numberMembers--;\n  };\n  /**\r\n   * This function sets a (new) fighting system for this category\r\n   * @param fightingSystem {string}\r\n   */\n\n\n  this.setFightingSystem = function (fightingSystem) {\n    if (Object.values(fightingSystemTypes).includes(fightingSystem)) {\n      this.fightingSystemType = fightingSystem;\n      this.fightingSystem = FightingSystemModule.createFightingSystemApi(fightingSystem, this.members);\n      this.prepared = true;\n    }\n  };\n\n  this.changeFightingSystemConfiguration = function () {\n    if (this.editable) {\n      this.fightingSystem.change();\n    } else {\n      ModalModule.infoModalApi(\"Änderungen nicht mehr möglich\", \"Die Kategorie ist nicht mehr editierbar, da diese Kategorie schon am Wettkampf teilnimmt oder teilgenommen hat.\");\n    }\n  };\n  /**\r\n   * This function retrieves a configuration of a fighting system from the backend. If none is set (yet) then undefined is returned.\r\n   * @param categoryName {string} This parameter serves as an identifier and determines which fighting system configuration to get\r\n   * @return {Category}\r\n   */\n\n\n  this.getCategoryConfiguration = function (categoryName) {// TODO: Send get request to backend and retrieve json string and build objects (persons (actually only fighter/starter),\n\n    /**\r\n     * JSON String should be build like so:\r\n     * {\r\n     *     fighters: [{firstname: firstname1, lastname: lastname1, club: club1, sex: sex1, ...}, ...],\r\n     *     fightingSystem: \"KO-System\",\r\n     *     configuration: {\r\n     *         option1: configuration1,\r\n     *         option2: configuration2,\r\n     *         option3: {},\r\n     *         option4: [],\r\n     *         ...\r\n     *     }\r\n     * }\r\n     */\n  };\n};\n/**\r\n * This function returns a category object on the basis of the given category name (the identifier)\r\n * @param categoryName {string} The name of the category (mostly a number or combination of a number and a string)\r\n * @return {*}\r\n */\n\n\nfunction getCategoryByName(categoryName) {\n  var wantedCategory = undefined;\n  categories.forEach(function (category) {\n    if (category.name === categoryName) {\n      wantedCategory = category;\n    }\n  });\n  return wantedCategory;\n}\n/**\r\n * This function creates a new category object and returns it\r\n * @param categoryName {string} The name of the category (mostly a number or combination of a number and a string)\r\n * @return {Category}\r\n */\n\n\nfunction createCategory(categoryName) {\n  var newCategory = new Category(categoryName);\n  categories.push(newCategory);\n  return newCategory;\n}\n/**\r\n * This function deletes a category object on the basis ot the given category name\r\n * @param categoryName {string} The name of the category (which works as an identifier) to be deleted\r\n */\n\n\nfunction deleteCategory(categoryName) {\n  var deleteCategory;\n  categories.forEach(function (category) {\n    if (category.name === categoryName) {\n      deleteCategory = category;\n    }\n  });\n\n  if (deleteCategory) {\n    categories.splice(categories.indexOf(deleteCategory), 1);\n    deleteCategory = undefined;\n  }\n}\n/**\r\n * API:\r\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/CategoryModule.js?");

/***/ }),

/***/ "./resources/js/Modules/ContextMenuModule.js":
/*!***************************************************!*\
  !*** ./resources/js/Modules/ContextMenuModule.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"registerNewContextMenu\": () => (/* binding */ registerNewContextMenu),\n/* harmony export */   \"removeContextMenu\": () => (/* binding */ removeContextMenu)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/**\r\n * DEPENDENCIES\r\n */\n\n/**\r\n * This Module contains code responsible for managing application specific context menus\r\n */\n\nvar contextMenus = [];\n/**\r\n * Collection of relevant class names\r\n * @type {string}\r\n */\n\nvar contextMenuClassName = \"context-menu\";\nvar contextMenuItemsClassName = \"context-menu-items\";\nvar contextMenuItemClassName = \"context-menu__item\";\nvar contextMenuAClassName = \"context-menu__option\";\nvar contextMenuActiveClassName = \"context-menu--active\";\nvar body = document.querySelector(\"body\");\n/**\r\n * This \"class\" represents a displayed context menu element and enables a detailed control over it\r\n * @param contextElement {HTMLElement} The responsible element that triggered the context menu\r\n * @param optionsObject {Object} This object contains the options the context menu should display. Each key represents the textual option and the responsible value contains the callback function that is being called when an option is chosen\r\n * @param triggerSelector {String} An optional string that contains the selector of the element that actually triggers the element (Use case: only specific child elements in a container element should trigger a context menu but not the container element itself)\r\n * @constructor\r\n */\n\nvar ContextMenu = function ContextMenu(contextElement, optionsObject, triggerSelector) {\n  var This = this;\n  this.contextParentElement = contextElement;\n  this.clickedContextElement = undefined;\n  this.triggerElements = undefined;\n  this.contextMenuElement = ContextMenu.createContextMenu(Object.keys(optionsObject));\n  this.contextOptions = optionsObject;\n  this.active = false;\n  this.id = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.createUniqueRandomIdentifier();\n  this.contextMenuElement.id = this.id;\n\n  this.init = function () {\n    body.appendChild(This.contextMenuElement);\n    This.contextParentElement.addEventListener(\"click\", This.triggerHandler);\n\n    if (triggerSelector) {\n      This.triggerElements = Array.from(This.contextParentElement.querySelectorAll(triggerSelector));\n    }\n  };\n\n  this.triggerHandler = function (e) {\n    e.stopImmediatePropagation();\n    closeAllContextMenusExcept(This);\n    var target = e.target;\n\n    if (This.triggerElements) {\n      while (target !== This.contextParentElement && !This.triggerElements.includes(target)) {\n        target = target.parentElement;\n      }\n\n      if (target === This.contextParentElement) {\n        closeAllContextMenusExcept();\n        return;\n      }\n    }\n\n    This.clickedContextElement = e.target;\n    This.contextMenuElement.addEventListener(\"click\", This.clickHandler);\n    var coords = {\n      x: e.pageX,\n      y: e.pageY\n    };\n    This.positionContextMenu(coords); // This little \"break\" ensures that it animates its position only when it has been active\n\n    window.setTimeout(This.showContextMenu, 5);\n  };\n\n  this.clickHandler = function (e) {\n    var target = e.target;\n\n    while (target.nodeName !== \"BODY\" && !target.classList.contains(contextMenuAClassName)) {\n      target = target.parentElement;\n    }\n\n    if (target.classList.contains(contextMenuAClassName)) {\n      var chosenOption = target.innerText;\n      var callback = This.contextOptions[chosenOption];\n\n      if (callback) {\n        callback(This.clickedContextElement);\n      }\n\n      This.closeContextMenu();\n    } else {\n      This.closeContextMenu();\n    }\n  };\n\n  this.closeContextMenu = function () {\n    if (This.active) {\n      This.clickedContextElement = undefined;\n      This.contextMenuElement.classList.remove(contextMenuActiveClassName);\n      This.active = false;\n      This.contextMenuElement.removeEventListener(\"click\", This.clickHandler);\n    }\n  };\n\n  this.showContextMenu = function () {\n    This.contextMenuElement.classList.add(contextMenuActiveClassName);\n    This.active = true;\n  };\n\n  this.positionContextMenu = function (coords) {\n    var menuWidth = This.contextMenuElement.offsetWidth;\n    var menuHeight = This.contextMenuElement.offsetHeight;\n    var windowWidth = window.innerWidth;\n    var windowHeight = window.innerHeight;\n    var x = coords.x;\n    var y = coords.y;\n\n    if (windowWidth - x < menuWidth) {\n      This.contextMenuElement.style.left = windowWidth - menuWidth + \"px\";\n    } else {\n      This.contextMenuElement.style.left = x + \"px\";\n    }\n\n    if (windowHeight - y < menuHeight) {\n      This.contextMenuElement.style.top = windowHeight - menuHeight + \"px\";\n    } else {\n      This.contextMenuElement.style.top = y + \"px\";\n    }\n  };\n\n  this.removeContextMenu = function () {\n    This.contextParentElement.removeEventListener(\"click\", This.triggerHandler);\n  };\n\n  this.init();\n};\n/**\r\n * This function creates a context menu HTML element\r\n * @param options {String[]} An array of string containing the different options the content menu should display\r\n */\n\n\nContextMenu.createContextMenu = function (options) {\n  var menu = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"nav\", [contextMenuClassName]);\n  var ul = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"ul\", [contextMenuItemsClassName]);\n  options.forEach(function (option) {\n    var li = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"li\", [contextMenuItemClassName]);\n    var a = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"a\", [contextMenuAClassName], option);\n    li.appendChild(a);\n    menu.appendChild(li);\n  });\n  menu.appendChild(ul);\n  return menu;\n};\n\nfunction closeAllContextMenusExcept(exception) {\n  if (contextMenus.length > 0) {\n    contextMenus.forEach(function (contextMenu) {\n      if (contextMenu !== exception) {\n        contextMenu.closeContextMenu();\n      }\n    });\n  }\n} // close all open context menus\n\n\ndocument.addEventListener(\"click\", function (e) {\n  closeAllContextMenusExcept(undefined);\n});\n/**\r\n * This function enables other modules to trigger custom context menus on given context elements\r\n * @param contextElement {HTMLElement} The responsible element that triggered the context menu\r\n * @param optionsObject {Object} This object contains the options the context menu should display. Each key represents the textual option and the responsible value contains the callback function that is being called when an option is chosen\r\n * @param triggerSelector {String} An optional string that contains the selector of the element that actually triggers the element (Use case: only specific child elements in a container element should trigger a context menu but not the container element itself)\r\n */\n\nfunction registerNewContextMenu(contextElement, optionsObject, triggerSelector) {\n  contextMenus.forEach(function (contextMenu) {\n    if (contextMenu.contextParentElement === contextElement) {\n      removeContextMenu(contextElement);\n    }\n  });\n  contextMenus.push(new ContextMenu(contextElement, optionsObject, triggerSelector));\n}\n/**\r\n * This function removes a prior registered context menu on a context element\r\n * @param contextElement {HTMLElement} The element that has a custom context menu that should be removes\r\n */\n\n\nfunction removeContextMenu(contextElement) {\n  contextMenus.forEach(function (contextMenu) {\n    if (contextMenu.contextParentElement === contextElement) {\n      contextMenu.removeContextMenu();\n      contextMenus.splice(contextMenus.indexOf(contextMenu), 1);\n      contextMenu = undefined;\n    }\n  });\n}\n/**\r\n * API:\r\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/ContextMenuModule.js?");

/***/ }),

/***/ "./resources/js/Modules/FightingSystemModule.js":
/*!******************************************************!*\
  !*** ./resources/js/Modules/FightingSystemModule.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFightingSystemFactory\": () => (/* binding */ createFightingSystemFactory),\n/* harmony export */   \"createBinaryFightTree_debug\": () => (/* binding */ createBinaryFightTree_debug)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/* harmony import */ var _ModalModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ModalModule */ \"./resources/js/Modules/ModalModule.js\");\n/* harmony import */ var _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MaterialInputsModule */ \"./resources/js/Modules/MaterialInputsModule.js\");\n/* harmony import */ var _FormModule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FormModule */ \"./resources/js/Modules/FormModule.js\");\n/* harmony import */ var _PrimaryButtonModule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PrimaryButtonModule */ \"./resources/js/Modules/PrimaryButtonModule.js\");\n/* harmony import */ var _PersonModule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./PersonModule */ \"./resources/js/Modules/PersonModule.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * DEPENDENCIES\n */\n\n\n\n\n\n\n/**\n * This Module contains code responsible for managing all the different fighting systems and specific behaviour\n */\n\nvar fightingSystemTypes = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.fightingSystemTypes;\n/**\n * This function creates and shows and handles a custom modal window to change the ko-system and dog-eat-dog starting configuration\n * @param heading {string} The informative heading of the modal\n * @param content {HTMLElement} The resemblance of the starting configuration of the fighting system\n * @param abortCallback {function} The function that should be called back when aborting the modal window\n * @param confirmCallback {function} The function that should be called back when confirming the changes done\n */\n\nfunction customChangeFightingSystemModal(heading, content, abortCallback, confirmCallback) {\n  var container = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"container\"]);\n  var h2 = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"h2\", undefined, heading);\n  h2.style.margin = \"0.5em 0 2em 0\";\n  container.appendChild(h2);\n  container.appendChild(content);\n  var abortButton = (0,_PrimaryButtonModule__WEBPACK_IMPORTED_MODULE_4__.createPrimaryButton)([\"close\"], undefined, \"close\", \"Abbrechen\");\n  var confirmButton = (0,_PrimaryButtonModule__WEBPACK_IMPORTED_MODULE_4__.createPrimaryButton)([\"apply-changes\"], undefined, \"done\", \"Änderungen anwenden\");\n  container.appendChild(abortButton);\n  container.appendChild(confirmButton);\n  var ModalWindow = _ModalModule__WEBPACK_IMPORTED_MODULE_1__.customModal(container, abortCallback);\n  abortButton.addEventListener(\"click\", function () {\n    if (abortCallback) {\n      abortCallback();\n    }\n\n    var overlay = container;\n\n    while (overlay.nodeName !== \"BODY\" && !overlay.classList.contains(\"overlay\")) {\n      overlay = overlay.parentElement;\n    }\n\n    ModalWindow.closeModal();\n  });\n  confirmButton.addEventListener(\"click\", function () {\n    if (confirmCallback) {\n      confirmCallback();\n    }\n\n    var overlay = container;\n\n    while (overlay.nodeName !== \"BODY\" && !overlay.classList.contains(\"overlay\")) {\n      overlay = overlay.parentElement;\n    }\n\n    ModalWindow.closeModal();\n  });\n}\n/**\n * This class represents a generic fighting system and offers individual methods for handling it\n */\n\n\nvar FightingSystem = /*#__PURE__*/function () {\n  function FightingSystem(fighters) {\n    _classCallCheck(this, FightingSystem);\n\n    this.fighters = fighters;\n    this.fightingSystemType = undefined;\n    this.winner = undefined;\n    this.second = undefined;\n    this.third = undefined;\n  }\n\n  _createClass(FightingSystem, [{\n    key: \"addFighter\",\n    value: function addFighter(newFighter) {\n      this.fighters.push(newFighter);\n      this.changeFighters();\n    }\n  }, {\n    key: \"removeFighter\",\n    value: function removeFighter(fighter) {\n      this.fighters.splice(this.fighters.indexOf(fighter), 1);\n      this.changeFighters();\n    }\n  }, {\n    key: \"changeFighters\",\n    value: function changeFighters() {}\n  }, {\n    key: \"toElement\",\n    value: function toElement() {}\n  }, {\n    key: \"change\",\n    value: function change() {}\n  }, {\n    key: \"toJsonString\",\n    value: function toJsonString() {}\n  }]);\n\n  return FightingSystem;\n}();\n\nvar FightTable = /*#__PURE__*/function () {\n  function FightTable(fighters, numberReferees) {\n    _classCallCheck(this, FightTable);\n\n    this.fighters = fighters;\n    this.numberReferees = numberReferees;\n    this.stats = {};\n\n    if (this.fighters.length > 0) {\n      this.initializeStats();\n    }\n  }\n\n  _createClass(FightTable, [{\n    key: \"addFighter\",\n    value: function addFighter(fighter) {\n      this.fighters.push(fighter);\n      this.addStat(fighter);\n    }\n  }, {\n    key: \"removeFighter\",\n    value: function removeFighter(fighter) {\n      this.fighters.splice(this.fighters.indexOf(fighter), 1);\n      this.removeStat(fighter);\n    }\n  }, {\n    key: \"initializeStats\",\n    value: function initializeStats() {\n      var _this = this;\n\n      this.fighters.forEach(function (fighter) {\n        _this.addStat(fighter);\n      });\n    }\n  }, {\n    key: \"addStat\",\n    value: function addStat(fighter) {\n      var pointArray = [];\n\n      for (var i = 0; i < this.numberReferees; i++) {\n        var inputElement = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"input\", [\"points-input\"], \"0\", {\n          \"type\": \"text\"\n        });\n        pointArray.push({\n          points: 0,\n          canceled: false,\n          pointInputElement: inputElement\n        });\n      }\n\n      var totalPointsTd = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"td\", [\"points\"]);\n      var positionTd = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"td\", [\"points\"]);\n      this.stats[fighter.id] = {\n        \"points\": pointArray,\n        \"totalPoints\": 0,\n        \"totalPointsTd\": totalPointsTd,\n        \"position\": null,\n        \"positionTd\": positionTd\n      };\n    }\n    /**\n     * This function updates the (whole) statistic of a fighter\n     * @param fighter {Object} The fighter of which the statistic should be updated\n     * @param statObject {Object} This object contains the new points for the fighter\n     */\n\n  }, {\n    key: \"updateStatForFighter\",\n    value: function updateStatForFighter(fighter, statObject) {\n      var _this2 = this;\n\n      if (this.stats[fighter.id]) {\n        if (statObject[\"points\"].length === this.numberReferees) {\n          var fighterStat = this.stats[fighter.id];\n          fighterStat[\"sum\"] = statObject[\"sum\"];\n          fighterStat[\"sumTd\"].innerHTML = statObject[\"sum\"] + \"\";\n\n          if (statObject[\"position\"]) {\n            fighterStat[\"position\"] = statObject[\"position\"];\n            fighterStat[\"positionTd\"].innerHTML = statObject[\"position\"] + \"\";\n          }\n\n          var newPointsArray = statObject[\"points\"];\n          var i = 0;\n          newPointsArray.forEach(function (pointObject) {\n            _this2.changeStatBySystem(fighter, i++, pointObject[\"points\"], pointObject[\"canceled\"]);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"removeStat\",\n    value: function removeStat(fighter) {\n      delete this.stats[fighter.id];\n    }\n  }, {\n    key: \"changeReferees\",\n    value: function changeReferees(newNumberReferees) {\n      if (this.numberReferees > newNumberReferees) {\n        for (var fighterStat in this.stats) {\n          if (this.stats.hasOwnProperty(fighterStat)) {\n            fighterStat[\"points\"] = fighterStat[\"points\"].slice(0, this.numberReferees);\n          }\n        }\n      } else {\n        for (var _fighterStat in this.stats) {\n          if (this.stats.hasOwnProperty(_fighterStat)) {\n            var diffNumberReferees = newNumberReferees - this.numberReferees; // append the \"missing\" number of referees to each fighter\n\n            for (var i = 0; i < diffNumberReferees; i++) {\n              var inputElement = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"input\", [\"points-input\"], \"0\", {\n                \"type\": \"text\"\n              });\n\n              _fighterStat[\"points\"].push({\n                points: 0,\n                canceled: false,\n                pointInputElement: inputElement\n              });\n            }\n          }\n        }\n      }\n\n      this.numberReferees = newNumberReferees;\n    }\n    /**\n     * This function changes a fighters statistic after it has been manually changed by a user\n     * @param changedInputElement {HTMLElement} The respective td element that has been changed\n     */\n\n  }, {\n    key: \"changeStatByUser\",\n    value: function changeStatByUser(changedInputElement) {\n      var _this3 = this;\n\n      if (changedInputElement.classList.contains(\"points-input\")) {\n        (function () {\n          var newPoints = parseInt(changedInputElement.value);\n          var fighter; // iterate over all the fighter statistics in the statistics object\n\n          for (var fighterStat in _this3.stats) {\n            if (_this3.stats.hasOwnProperty(fighterStat)) {\n              // get the point array\n              var pointsArray = fighterStat[\"points\"]; // iterate over the point array\n\n              pointsArray.forEach(function (pointsObject) {\n                if (pointsObject.pointInputElement === changedInputElement) {\n                  pointsObject.points = newPoints;\n                }\n              });\n            }\n          }\n\n          _this3.calculateTotalPoints();\n        })();\n      }\n    }\n    /**\n     * This function changes the points of a fighter (the change on this particular frontend-device was not initiated by the user)\n     * @param fighter {Object} The fighter of which the statistics have to be updated\n     * @param pointObjectIndex {Number} The index of the point object in the point array that is being changed\n     * @param newPoints {Number} The new points\n     * @param canceled {Boolean} This parameter determines if the new points are canceled (which means that they are not counted to the total points)\n     */\n\n  }, {\n    key: \"changeStatBySystem\",\n    value: function changeStatBySystem(fighter, pointObjectIndex, newPoints, canceled) {\n      if (this.stats[fighter.id] !== undefined) {\n        var fighterStat = this.stats[fighter.id]; // get the point array\n\n        var pointsArray = fighterStat[\"points\"];\n        pointsArray[pointObjectIndex].points = newPoints;\n        pointsArray[pointObjectIndex].inputElement.innerHTML = newPoints + \"\";\n      }\n    }\n    /**\n     * This function automatically cancels points from fighters statistics\n     * @param fighter {Object} The fighter where points are canceled\n     * @param cancelIndex {Number} The index of the respective points in the points array which should be canceled\n     */\n\n  }, {\n    key: \"cancelPoints\",\n    value: function cancelPoints(fighter, cancelIndex) {\n      if (this.stats[fighter.id] !== undefined) {\n        var fighterStat = this.stats[fighter.id]; // get the point array\n\n        var pointsArray = fighterStat[\"points\"];\n        pointsArray[cancelIndex].canceled = true;\n        pointsArray[cancelIndex].inputElement.classList.add(\"canceled\");\n      }\n    }\n    /**\n     * This function calculates the current total points of a given fighter\n     * @param fighter {Object}\n     */\n\n  }, {\n    key: \"calculateTotalPoints\",\n    value: function calculateTotalPoints(fighter) {\n      if (this.stats[fighter.id] !== undefined) {\n        var fighterStat = this.stats[fighter.id];\n        var totalPoints = 0; // get the point array\n\n        var pointsArray = fighterStat[\"points\"];\n        pointsArray.forEach(function (pointObject) {\n          if (!pointObject.canceled) {\n            totalPoints += pointObject.points;\n          }\n        });\n        fighterStat.totalPoints = totalPoints;\n        fighterStat.totalPointsTd.innerHTML = totalPoints + \"\";\n      }\n    }\n  }]);\n\n  return FightTable;\n}();\n\nvar Tables = /*#__PURE__*/function (_FightingSystem) {\n  _inherits(Tables, _FightingSystem);\n\n  var _super = _createSuper(Tables);\n\n  function Tables(fighters) {\n    var _this4;\n\n    _classCallCheck(this, Tables);\n\n    _this4 = _super.call(this, fighters);\n    _this4.fightingSystemType = fightingSystemTypes.TABLES;\n    _this4.numberReferees = 7;\n    _this4.rounds = 1;\n\n    if (_this4.fighters.length > 4) {\n      _this4.rounds = 2;\n    }\n\n    if (_this4.fighters.length > 12) {\n      _this4.rounds = 3;\n    }\n\n    _this4.tables = [];\n\n    _this4.tables.push(new FightTable(_this4.fighters, _this4.numberReferees));\n\n    if (_this4.fighters.length > 12) {\n      _this4.tables.push(new FightTable([].length = 12), _this4.numberReferees);\n    }\n\n    if (_this4.fighters.length > 4) {\n      _this4.tables.push(new FightTable([].length = 4, _this4.numberReferees));\n    }\n\n    return _this4;\n  }\n\n  _createClass(Tables, [{\n    key: \"change\",\n    value: function change() {\n      var numberRefereeInput = (0,_MaterialInputsModule__WEBPACK_IMPORTED_MODULE_2__.createInput)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.inputTypes.RANGE, undefined, undefined, \"number-referees\", \"Anzahl Kampfrichter\", this.numberReferees, undefined, undefined);\n      numberRefereeInput.setMin(3);\n      numberRefereeInput.setMax(15);\n      _ModalModule__WEBPACK_IMPORTED_MODULE_1__.confirmModal(\"Tafelsystem anpassen\", numberRefereeInput.inputContainer, function () {\n        this.numberReferees = numberRefereeInput.getValue();\n        this.tables.forEach(function (table) {\n          table.initializeTable();\n        });\n      }.bind(this), undefined, undefined);\n    }\n  }, {\n    key: \"toElement\",\n    value: function toElement() {\n      var _this5 = this;\n\n      var container = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"tafeln\"], undefined, undefined);\n      this.tables.forEach(function (table) {\n        var tableElement = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"table\", [\"tafel\"], undefined, undefined);\n        var thead = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"thead\", undefined, undefined, undefined);\n        var tr = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"tr\");\n        tr.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"th\", undefined, \"Teilnehmer\"));\n\n        for (var i = 1; i < _this5.numberReferees; i++) {\n          tr.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"th\", [\"points\"], i + \"\"));\n        }\n\n        tr.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"th\", [\"points\"], \"Gesamt\"));\n        tr.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"th\", undefined, \"Platzierung\"));\n        thead.appendChild(tr);\n        tableElement.appendChild(thead);\n        var tbody = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"tbody\");\n        table.fighters.forEach(function (fighter) {\n          var tr = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"tr\");\n\n          if (typeof fighter !== \"undefined\") {\n            tr.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"td\", undefined, fighter.firstName + \" \" + fighter.lastName));\n          } else {\n            tr.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"td\", undefined));\n          }\n\n          for (var _i = 0; _i < _this5.numberReferees - 1; _i++) {\n            var pointTd = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"td\", [\"points\"]);\n            var points = table.points[fighter.id][\"refereePoints\"][_i];\n            pointTd.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"input\", undefined, points, {\n              \"type\": \"text\"\n            }));\n            tr.appendChild(pointTd);\n          }\n\n          var sumPoints = table.points[fighter.id][\"sum\"];\n          tr.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"td\", undefined, sumPoints));\n          var position = table.points[fighter.id][\"position\"];\n\n          if (typeof position !== \"undefined\") {\n            tr.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"td\", undefined, position));\n          } else {\n            tr.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"td\", undefined, \"\"));\n          }\n\n          tbody.appendChild(tr);\n        });\n        container.appendChild(tableElement);\n        return container;\n      });\n    }\n  }]);\n\n  return Tables;\n}(FightingSystem);\n\nvar Fight = /*#__PURE__*/function () {\n  function Fight(fighter1, fighter2, number) {\n    _classCallCheck(this, Fight);\n\n    this.fighter1 = fighter1;\n    this.fighter2 = fighter2;\n    this.winner = undefined;\n    this.loser = undefined;\n    this.number = number; // these two properties are only necessary for the binary fight tree\n\n    this.left = undefined;\n    this.right = undefined;\n  }\n\n  _createClass(Fight, [{\n    key: \"setWinner\",\n    value: function setWinner(winner) {\n      if (this.fighter1 === winner) {\n        this.winner = this.fighter1;\n        this.loser = this.fighter2;\n      } else {\n        this.winner = this.fighter2;\n        this.loser = this.fighter1;\n      }\n    }\n  }]);\n\n  return Fight;\n}();\n\nvar DogEatDog = /*#__PURE__*/function (_FightingSystem2) {\n  _inherits(DogEatDog, _FightingSystem2);\n\n  var _super2 = _createSuper(DogEatDog);\n\n  function DogEatDog(fighters) {\n    var _this6;\n\n    _classCallCheck(this, DogEatDog);\n\n    _this6 = _super2.call(this, fighters);\n    _this6.fightingSystemType = fightingSystemTypes.DOGEATDOG;\n    _this6.fights = [];\n    _this6.points = {};\n\n    _this6.fighters.forEach(function (fighter) {\n      _this6.points[fighter.id] = {\n        \"wins\": 0,\n        \"losses\": 0,\n        \"position\": 0\n      };\n    });\n\n    _this6.calculateFights();\n\n    return _this6;\n  }\n\n  _createClass(DogEatDog, [{\n    key: \"changeFighters\",\n    value: function changeFighters() {\n      this.calculateFights();\n    }\n  }, {\n    key: \"calculateFights\",\n    value: function calculateFights() {\n      var fights = []; // calculate all fights (so that each fighter fights all the others once)\n\n      for (var i = 0; i < this.fighters.length - 1; i++) {\n        for (var j = i + 1; j < this.fighters.length; j++) {\n          var newFight = new Fight(this.fighters[i], this.fighters[j]);\n          fights.push(newFight);\n        }\n      }\n\n      var fightNumber = 1; // mix the calculated fights up to enable some breaks for the fighters\n\n      var iterations = fights.length;\n\n      for (var _i2 = 0; _i2 < iterations; _i2++) {\n        var fight = void 0;\n\n        if (_i2 % 2 === 0) {\n          fight = fights.shift();\n        } else {\n          fight = fights.pop();\n        }\n\n        fight.number = fightNumber++;\n        this.fights.push(fight);\n      }\n    }\n  }, {\n    key: \"getFightWithNumber\",\n    value: function getFightWithNumber(number) {\n      var wantedFight = undefined;\n\n      if (typeof number === \"number\") {\n        this.fights.forEach(function (fight) {\n          if (fight.number === number) {\n            wantedFight = fight;\n          }\n        });\n      }\n\n      return wantedFight;\n    }\n  }, {\n    key: \"change\",\n    value: function change() {\n      var newOrder = this.fights.slice();\n      var This = this;\n      var dogEatDogContainer = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"dog-eat-dog\"]);\n      dogEatDogContainer.appendChild(this.fightsToElement());\n      dogEatDogContainer.addEventListener(\"mousedown\", handlePick);\n\n      function handlePick(e) {\n        var target = e.target;\n\n        while (target.nodeName !== \"BODY\" && !target.classList.contains(\"fight\")) {\n          target = target.parentElement;\n        }\n\n        if (target.classList.contains(\"fight\")) {\n          var pickedFightNumber = parseInt(target.querySelector(\"span.number\").textContent.trim());\n          var fight = This.getFightWithNumber(pickedFightNumber);\n          var allOtherFightNumbers = [];\n          newOrder.forEach(function (fight) {\n            if (fight.number !== pickedFightNumber) {\n              allOtherFightNumbers.push(fight.number);\n            }\n          });\n          var radioOptions = [];\n          allOtherFightNumbers.forEach(function (fightNumber) {\n            var option = {};\n            option[\"text\"] = \"Kampf Nr. \" + fightNumber;\n            option[\"value\"] = fightNumber;\n            option[\"checked\"] = false;\n            radioOptions.push(option);\n          });\n          var radioInput = (0,_MaterialInputsModule__WEBPACK_IMPORTED_MODULE_2__.createInput)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.inputTypes.RADIO, [\"required\"], undefined, \"change-fight\", undefined, undefined, undefined, radioOptions);\n          radioInput.inputContainer.querySelectorAll(\"label.radio-input-container\").forEach(function (radioLabel) {\n            radioLabel.style.display = \"block\";\n          });\n          _ModalModule__WEBPACK_IMPORTED_MODULE_1__.confirmModal(\"Kampf tauschen mit Kampf Nummer...\", radioInput.inputContainer, function () {\n            var chosenFightNumber = parseInt(radioInput.getValue());\n            var fightToChange = This.getFightWithNumber(chosenFightNumber);\n            var fightToChangeElement = target.parentElement.firstChild;\n\n            while (fightToChangeElement && parseInt(fightToChangeElement.querySelector(\"span.number\").innerText.trim()) !== chosenFightNumber) {\n              fightToChangeElement = fightToChangeElement.nextElementSibling;\n            }\n\n            var fightIndex = newOrder.indexOf(fight);\n            var fightToChangeIndex = newOrder.indexOf(fightToChange); // renumber fights in object properties\n\n            var aux1 = fight.number;\n            fight.number = fightToChange.number;\n            fightToChange.number = aux1; // swap fights in array\n\n            var aux2 = newOrder[fightIndex];\n            newOrder[fightIndex] = fightToChange;\n            newOrder[fightToChangeIndex] = aux2; // swap fights in element container\n\n            var parent = target.parentElement;\n            var nextTargetElement = target.nextElementSibling;\n\n            if (nextTargetElement !== fightToChangeElement) {\n              console.log(\"hi\");\n              parent.insertBefore(target, fightToChangeElement);\n\n              if (nextTargetElement) {\n                parent.insertBefore(fightToChangeElement, nextTargetElement);\n              } else {\n                parent.appendChild(fightToChangeElement);\n              }\n            } else {\n              parent.insertBefore(fightToChangeElement, target);\n            } // renumber elements\n\n\n            target.querySelector(\"span.number\").innerHTML = fight.number;\n            fightToChangeElement.querySelector(\"span.number\").innerHTML = fightToChange.number;\n          }, undefined, function () {\n            return (0,_FormModule__WEBPACK_IMPORTED_MODULE_3__.checkInput)(radioInput.inputContainer, true);\n          });\n        }\n      }\n\n      function abortion() {\n        // revoke renumbering\n        for (var i = 0; i < This.fights.length - 1; i++) {\n          This.fights[i].number = i + 1;\n        }\n      }\n\n      function applyChanges() {\n        this.fights = newOrder;\n      }\n\n      customChangeFightingSystemModal(\"Kampfreihenfolge Jeder-Gegen-Jeden anpassen\", dogEatDogContainer, abortion, applyChanges);\n    }\n  }, {\n    key: \"toElement\",\n    value: function toElement() {\n      var _this7 = this;\n\n      var container = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"dog-eat-dog\", \"clearfix\"]);\n      var winLoseTable = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"table\", [\"win-lose-table\", \"participants\"]);\n      var thead = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"thead\");\n      var theadTr = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"tr\");\n      theadTr.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"th\", undefined, \"Teilnehmer\"));\n      theadTr.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"th\", undefined, \"Gewonnen\"));\n      theadTr.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"th\", undefined, \"Verloren\"));\n      thead.appendChild(theadTr);\n      winLoseTable.appendChild(thead);\n      var tbody = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"tbody\");\n      this.fighters.forEach(function (fighter) {\n        var tr = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"tr\");\n        tr.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"td\", undefined, fighter.firstName + \" \" + fighter.lastName));\n        var winsTd = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"td\", [\"points\"], fighter.firstName + \" \" + fighter.lastName);\n        var wins = _this7.points[fighter.id][\"wins\"];\n        winsTd.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"input\", undefined, wins + \"\", {\n          \"type\": \"text\"\n        }));\n        tr.appendChild(winsTd);\n        var lossesTd = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"td\", [\"points\"], fighter.firstName + \" \" + fighter.lastName);\n        var losses = _this7.points[fighter.id][\"losses\"];\n        lossesTd.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"input\", undefined, losses + \"\", {\n          \"type\": \"text\"\n        }));\n        tr.appendChild(lossesTd);\n        tbody.appendChild(tr);\n      });\n      winLoseTable.appendChild(tbody);\n      container.appendChild(winLoseTable);\n      container.appendChild(this.fightsToElement());\n      return container;\n    }\n  }, {\n    key: \"fightsToElement\",\n    value: function fightsToElement() {\n      var fightOrderElement = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"fight-order\"]);\n      this.fights.forEach(function (fight) {\n        var fightElement = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"fight\"]);\n        fightElement.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"fighter\", \"fighter1\"], fight.fighter1.firstName + \" \" + fight.fighter1.lastName));\n        fightElement.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"number\"], fight.number));\n        fightElement.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"fighter\", \"fighter2\"], fight.fighter2.firstName + \" \" + fight.fighter2.lastName));\n        fightOrderElement.appendChild(fightElement);\n      });\n      return fightOrderElement;\n    }\n  }]);\n\n  return DogEatDog;\n}(FightingSystem); // This class represents the binary fight tree that is necessary for every fighting system based on the KO System. A binary fight tree can always be imagined like the soccer world cup match order.\n\n\nvar BinaryFightTree = /*#__PURE__*/function () {\n  function BinaryFightTree(fighters, isConsolation, startNumber) {\n    _classCallCheck(this, BinaryFightTree);\n\n    this.lastFight = undefined;\n    this.fighters = fighters;\n    this.startNumber = startNumber;\n    this.fights = []; // This property determines if this tree is a consolation tree (for the fighters who lost in the first place)\n\n    this.isConsolation = isConsolation;\n    this.numberFighters = this.fighters.length; // This property holds the number of all fights in this tree\n\n    this.numberFights = this.fighters.length - 1; // This property holds the number of \"levels\" in this tree\n\n    this.numberLevels = Math.floor(Math.log(this.numberFighters) / Math.log(2)); // This property holds the number of \"pre-fights\" in this tree. A pre-fight is basically a regular fight but it doesn't fit on the lowest level anymore and needs to open a new \"pre-level\"\n\n    this.numberPreFights = this.numberFighters % Math.pow(2, this.numberLevels);\n  }\n\n  _createClass(BinaryFightTree, [{\n    key: \"buildTree\",\n    value: function buildTree() {\n      var numberFights;\n      var lowerLimit;\n\n      if (this.startNumber) {\n        numberFights = this.numberFights + this.startNumber;\n        lowerLimit = this.startNumber;\n      } else {\n        numberFights = this.numberFights;\n        lowerLimit = 0;\n      }\n\n      var newNodes = [];\n      this.lastFight = new Fight(undefined, undefined, numberFights--);\n      newNodes.push(this.lastFight);\n      this.fights.push(this.lastFight);\n\n      for (numberFights; numberFights > lowerLimit; numberFights--) {\n        var currentNode = newNodes.shift();\n        var newFight = new Fight(undefined, undefined, numberFights);\n        this.fights.unshift(newFight);\n        newNodes.push(newFight);\n\n        if (typeof currentNode.left === \"undefined\") {\n          currentNode.left = newFight;\n          newNodes.unshift(currentNode);\n        } else {\n          currentNode.right = newFight;\n        }\n      }\n\n      if (this.isConsolation) {\n        this.fighters = [];\n      } else {\n        this.assignFighters(newNodes);\n      }\n    }\n  }, {\n    key: \"assignFighters\",\n    value: function assignFighters(leafNodes) {\n      var fighters = this.fighters.slice();\n      leafNodes.forEach(function (leafNode) {\n        leafNode.fighter1 = fighters.shift();\n\n        if (typeof leafNode.left === \"undefined\") {\n          leafNode.fighter2 = fighters.shift();\n        }\n      });\n    }\n  }, {\n    key: \"findAllLeafNodes\",\n    value: function findAllLeafNodes() {\n      var leafNodes = {\n        \"level1LeafNodes\": [],\n        \"level2LeafNodes\": []\n      };\n      var numberLeafNodes = Math.ceil(this.numberFighters / 2);\n\n      for (var i = 0; i < this.numberPreFights; i++) {\n        leafNodes[\"level1LeafNodes\"].push(this.fights[i]);\n      }\n\n      for (var j = this.numberPreFights; j < numberLeafNodes; j++) {\n        leafNodes[\"level2LeafNodes\"].push(this.fights[j]);\n      }\n\n      return leafNodes;\n    }\n  }, {\n    key: \"leavesToElement\",\n    value: function leavesToElement() {\n      var leafNodes = this.findAllLeafNodes();\n      var tree = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"tree\", \"clearfix\"]); // Just add this column, if there are so-called pre-fights\n\n      if (leafNodes[\"level1LeafNodes\"].length > 0) {\n        var column1 = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"column\"]);\n        leafNodes[\"level1LeafNodes\"].forEach(function (leafNode) {\n          var fightElement = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"fight\"]);\n          fightElement.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"fighter\", \"fighter1\"], leafNode.fighter1.firstName + \" \" + leafNode.fighter1.lastName));\n          fightElement.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"fighter\", \"fighter2\"], leafNode.fighter2.firstName + \" \" + leafNode.fighter2.lastName));\n          fightElement.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"fight-number\"], leafNode.number));\n          column1.appendChild(fightElement);\n        });\n        tree.appendChild(column1);\n      }\n\n      var column2 = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"column\"]);\n      leafNodes[\"level2LeafNodes\"].forEach(function (leafNode) {\n        var fightElement = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"fight\"]);\n        fightElement.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"fighter\", \"fighter1\"], leafNode.fighter1.firstName + \" \" + leafNode.fighter1.lastName));\n\n        if (typeof leafNode.fighter2 !== \"undefined\") {\n          fightElement.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"fighter\", \"fighter2\"], leafNode.fighter2.firstName + \" \" + leafNode.fighter2.lastName));\n        } else {\n          fightElement.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"fighter\", \"fighter2\"]));\n        }\n\n        fightElement.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"fight-number\"], leafNode.number));\n        column2.appendChild(fightElement);\n      }); // check if to fill second column up with \"empty\" fight elements (just for nicer look)\n\n      if (leafNodes[\"level1LeafNodes\"].length > 1) {\n        var numberEmptyFightElements = Math.floor(this.numberPreFights / 2);\n        var numbering = leafNodes[\"level2LeafNodes\"][leafNodes[\"level2LeafNodes\"].length - 1].number + 1;\n\n        for (var i = 0; i < numberEmptyFightElements; i++) {\n          var fightElement = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"fight\"]);\n          fightElement.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"fighter\", \"fighter1\"]));\n          fightElement.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"fighter\", \"fighter2\"]));\n          fightElement.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"fight-number\"], numbering++));\n          column2.appendChild(fightElement);\n        }\n      }\n\n      tree.appendChild(column2);\n      return tree;\n    }\n  }, {\n    key: \"toElement\",\n    value: function toElement() {\n      var tree = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"tree\", \"clearfix\"]);\n      return tree;\n    }\n  }]);\n\n  return BinaryFightTree;\n}();\n\nvar KO = /*#__PURE__*/function (_FightingSystem3) {\n  _inherits(KO, _FightingSystem3);\n\n  var _super3 = _createSuper(KO);\n\n  function KO(fighters) {\n    var _this8;\n\n    _classCallCheck(this, KO);\n\n    _this8 = _super3.call(this, fighters);\n    _this8.fightingSystemType = fightingSystemTypes.KO;\n    _this8.binaryFightTree = new BinaryFightTree(_this8.fighters, false);\n\n    _this8.binaryFightTree.buildTree();\n\n    _this8.binaryFightTree.lastFight.number++;\n    _this8.winner = _this8.binaryFightTree.lastFight.winner;\n    _this8.second = _this8.binaryFightTree.lastFight.loser;\n    _this8.fightForThird = new Fight(undefined, undefined, _this8.binaryFightTree.lastFight.number - 1);\n    _this8.third = _this8.fightForThird.winner;\n    return _this8;\n  }\n\n  _createClass(KO, [{\n    key: \"change\",\n    value: function change() {\n      var This = this;\n      var koSystemContainer = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"ko-system-tree-container\"]);\n      koSystemContainer.appendChild(this.binaryFightTree.leavesToElement());\n\n      if (this.binaryFightTree.numberPreFights > 0) {\n        var marginTop1Unit = 8;\n        var numberMarginUnits = this.fighters.length - this.binaryFightTree.numberPreFights * 2;\n        koSystemContainer.querySelector(\"div.column div.fight\").style.marginTop = marginTop1Unit * numberMarginUnits + \"em\";\n      }\n\n      var changes = [];\n      koSystemContainer.addEventListener(\"click\", handlePick);\n\n      function handlePick(e) {\n        var target = e.target;\n\n        while (target.nodeName !== \"BDOY\" && !target.classList.contains(\"fighter\")) {\n          target = target.parentElement;\n        }\n\n        if (target.classList.contains(\"fighter\")) {\n          var chosenFighterName = target.innerText;\n          var changeFighterOptions = [];\n          var leafNodes = This.binaryFightTree.findAllLeafNodes();\n          var allLeafNodes = [];\n          allLeafNodes = allLeafNodes.concat(leafNodes[\"level1LeafNodes\"]);\n          allLeafNodes = allLeafNodes.concat(leafNodes[\"level2LeafNodes\"]);\n          allLeafNodes.forEach(function (fight) {\n            if (fight.fighter1 && fight.fighter1.fullName !== chosenFighterName) {\n              changeFighterOptions.push({\n                \"text\": fight.fighter1.fullName + \" aus Kampf Nr. \" + fight.number,\n                \"value\": fight.fighter1.id,\n                \"checked\": false\n              });\n            }\n\n            if (fight.fighter2 && fight.fighter2.fullName !== chosenFighterName) {\n              changeFighterOptions.push({\n                \"text\": fight.fighter2.fullName + \" aus Kampf Nr. \" + fight.number,\n                \"value\": fight.fighter2.id,\n                \"checked\": false\n              });\n            }\n          });\n          var radioInput = (0,_MaterialInputsModule__WEBPACK_IMPORTED_MODULE_2__.createInput)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.inputTypes.RADIO, undefined, undefined, \"change-ko-fighter\", undefined, undefined, undefined, changeFighterOptions);\n          radioInput.inputContainer.querySelectorAll(\"label.radio-input-container\").forEach(function (radioLabel) {\n            radioLabel.style.display = \"block\";\n          });\n          _ModalModule__WEBPACK_IMPORTED_MODULE_1__.confirmModal(\"\\\"\" + chosenFighterName + \"\\\" tauschen mit Kämpfer...\", radioInput.inputContainer, function () {\n            // change the displaying of the names in the HTML\n            var changeFighterId = radioInput.getValue();\n            var changeFighter = (0,_PersonModule__WEBPACK_IMPORTED_MODULE_5__.getPersonById)(changeFighterId);\n            var fighterElements = koSystemContainer.querySelectorAll(\"span.fighter\");\n            fighterElements.forEach(function (fighterElement) {\n              if (fighterElement.innerText.trim() === changeFighter.fullName) {\n                fighterElement.innerHTML = chosenFighterName;\n              }\n            });\n            target.innerHTML = changeFighter.fullName; // change the representing objects\n\n            var targetNumber = parseInt(target.parentElement.querySelector(\"span.fight-number\").innerText);\n            var targetFight;\n            var changeFight;\n            allLeafNodes.forEach(function (fight) {\n              if (fight.number === targetNumber) {\n                targetFight = fight;\n              }\n\n              if (fight.fighter1 && fight.fighter1.id === changeFighterId) {\n                changeFight = fight;\n                changeFighter = \"fighter1\";\n              }\n\n              if (fight.fighter2 && fight.fighter2.id === changeFighterId) {\n                changeFight = fight;\n                changeFighter = \"fighter2\";\n              }\n            });\n            var targetFighter;\n\n            if (targetFight) {\n              if (targetFight.fighter1.fullName === chosenFighterName) {\n                targetFighter = \"fighter1\";\n              } else {\n                targetFighter = \"fighter2\";\n              }\n            }\n\n            changes.push([{\n              \"fight\": targetFight,\n              \"fighter\": targetFighter\n            }, {\n              \"fight\": changeFight,\n              \"fighter\": changeFighter\n            }]);\n          }, undefined, function () {\n            return (0,_FormModule__WEBPACK_IMPORTED_MODULE_3__.checkInput)(radioInput.inputContainer, true);\n          });\n        }\n      }\n\n      function abortion() {\n        console.log(\"Abort\");\n      }\n\n      function applyChanges() {\n        changes.forEach(function (change) {\n          var aux = change[0][\"fight\"][change[0][\"fighter\"]];\n          change[0][\"fight\"][change[0][\"fighter\"]] = change[1][\"fight\"][change[1][\"fighter\"]];\n          change[1][\"fight\"][change[1][\"fighter\"]] = aux;\n        });\n      }\n\n      customChangeFightingSystemModal(\"Startkonfiguration des KO-Systems anpassen\", koSystemContainer, abortion, applyChanges);\n    }\n  }]);\n\n  return KO;\n}(FightingSystem);\n\nvar DoubleKO = /*#__PURE__*/function (_FightingSystem4) {\n  _inherits(DoubleKO, _FightingSystem4);\n\n  var _super4 = _createSuper(DoubleKO);\n\n  function DoubleKO(fighters) {\n    var _this9;\n\n    _classCallCheck(this, DoubleKO);\n\n    _this9 = _super4.call(this);\n    _this9.fightingSystemType = fightingSystemTypes.DOUBLEKO;\n    _this9.binaryFightTree = new BinaryFightTree(_this9.fighters, false);\n\n    var auxiliaryFighters = _this9.fighters.slice();\n\n    auxiliaryFighters.length = auxiliaryFighters.length - 2;\n    _this9.consolationBinaryFightTree = new BinaryFightTree(auxiliaryFighters, true, _this9.binaryFightTree.lastFight.number);\n    _this9.binaryFightTree.lastFight.number = _this9.consolationBinaryFightTree.lastFight.number + 1;\n    _this9.fightForSecond = new Fight(undefined, undefined, _this9.binaryFightTree.lastFight.number + 1);\n    _this9.second = _this9.fightForSecond.winner;\n    _this9.third = _this9.fightForSecond.loser;\n    return _this9;\n  }\n\n  return DoubleKO;\n}(FightingSystem);\n\nvar KOWithTables = /*#__PURE__*/function (_KO) {\n  _inherits(KOWithTables, _KO);\n\n  var _super5 = _createSuper(KOWithTables);\n\n  function KOWithTables(fighters) {\n    var _this10;\n\n    _classCallCheck(this, KOWithTables);\n\n    _this10 = _super5.call(this, fighters);\n    _this10.fightingSystemType = fightingSystemTypes.KOWITHTABLES;\n    _this10.winner1 = _this10.binaryFightTree.lastFight.left.fighter1;\n    _this10.winner2 = _this10.binaryFightTree.lastFight.left.fighter2;\n    _this10.winner3 = _this10.binaryFightTree.lastFight.right.fighter1;\n    _this10.winner4 = _this10.binaryFightTree.lastFight.right.fighter2;\n    _this10.table = new Tables([_this10.winner1, _this10.winner2, _this10.winner3, _this10.winner4]);\n    return _this10;\n  }\n\n  return KOWithTables;\n}(KO);\n\nvar DoubleKOWithTables = /*#__PURE__*/function (_DoubleKO) {\n  _inherits(DoubleKOWithTables, _DoubleKO);\n\n  var _super6 = _createSuper(DoubleKOWithTables);\n\n  function DoubleKOWithTables(fighters) {\n    var _this11;\n\n    _classCallCheck(this, DoubleKOWithTables);\n\n    _this11 = _super6.call(this, fighters);\n    _this11.fightingSystemType = fightingSystemTypes.DOUBLEKOWITHTABLES;\n    _this11.winner1 = _this11.binaryFightTree.lastFight.fighter1;\n    _this11.winner2 = _this11.binaryFightTree.lastFight.fighter2;\n    _this11.winner3 = _this11.consolationBinaryFightTree.lastFight.fighter1;\n    _this11.winner4 = _this11.consolationBinaryFightTree.lastFight.fighter2;\n    _this11.table = new Tables([_this11.winner1, _this11.winner2, _this11.winner3, _this11.winner4]);\n    return _this11;\n  }\n\n  return DoubleKOWithTables;\n}(DoubleKO);\n\nvar BrazilianKO = /*#__PURE__*/function (_KO2) {\n  _inherits(BrazilianKO, _KO2);\n\n  var _super7 = _createSuper(BrazilianKO);\n\n  function BrazilianKO(fighters) {\n    var _this12;\n\n    _classCallCheck(this, BrazilianKO);\n\n    _this12 = _super7.call(this, fighters);\n    _this12.fightingSystemType = fightingSystemTypes.BRAZILIANKO;\n    _this12.binaryFightTree = new BinaryFightTree(_this12.fighters, false);\n\n    _this12.binaryFightTree.buildTree();\n\n    _this12.losersAgainstWinner = [];\n    return _this12;\n  }\n\n  return BrazilianKO;\n}(KO);\n\nfunction createFightingSystemFactory(fightingSystemType, fighters) {\n  switch (fightingSystemType) {\n    case fightingSystemTypes.TABLES:\n      return new Tables(fighters);\n\n    case fightingSystemTypes.DOGEATDOG:\n      return new DogEatDog(fighters);\n\n    case fightingSystemTypes.KO:\n      return new KO(fighters);\n\n    case fightingSystemTypes.DOUBLEKO:\n      return new DoubleKO(fighters);\n\n    case fightingSystemTypes.KOWITHTABLES:\n      return new KOWithTables(fighters);\n\n    case fightingSystemTypes.DOUBLEKOWITHTABLES:\n      return new DoubleKOWithTables(fighters);\n\n    case fightingSystemTypes.BRAZILIANKO:\n      return new BrazilianKO(fighters);\n\n    default:\n      return undefined;\n  }\n}\n\nfunction createBinaryFightTree_debug(fighters) {\n  return new BinaryFightTree(fighters);\n}\n/**\n * API:\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/FightingSystemModule.js?");

/***/ }),

/***/ "./resources/js/Modules/FormModule.js":
/*!********************************************!*\
  !*** ./resources/js/Modules/FormModule.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkConfirmation\": () => (/* binding */ checkConfirmation),\n/* harmony export */   \"checkTime\": () => (/* binding */ checkTime),\n/* harmony export */   \"checkForm\": () => (/* binding */ checkForm),\n/* harmony export */   \"checkInput\": () => (/* binding */ checkInput),\n/* harmony export */   \"setSubmitFunction\": () => (/* binding */ setSubmitFunction)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/* harmony import */ var _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MaterialInputsModule */ \"./resources/js/Modules/MaterialInputsModule.js\");\n/* harmony import */ var _SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SecondaryButtonModule */ \"./resources/js/Modules/SecondaryButtonModule.js\");\n/**\r\n * DEPENDENCIES\r\n */\n\n\n\n/**\r\n * This \"Module\" contains code responsible for checking forms and groups of inputs\r\n * @type {{}}\r\n */\n\nvar inputTypes = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.inputTypes;\nvar errorTypes = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.errorTypes;\n/**\r\n * This function relates two given inputs (containers) to each other in terms of equal input. It is recommended to only use this on two text inputs\r\n * @param inputContainer1 {HTMLElement}\r\n * @param inputContainer2 {HTMLElement}\r\n */\n\nfunction checkConfirmation(inputContainer1, inputContainer2) {\n  var input1 = _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.getInputObject(inputContainer1);\n  var input2 = _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.getInputObject(inputContainer2);\n  input1.inputContainer.addEventListener(\"input\", function () {\n    if (input2.hasUserInput()) {\n      checkEquality(input1, input2);\n    }\n  });\n  input2.inputContainer.addEventListener(\"input\", function () {\n    if (input1.hasUserInput()) {\n      checkEquality(input1, input2);\n    }\n  });\n}\n/**\r\n * This function checks two inputs that are related to each other on exact same user input\r\n * @param input1 {object}\r\n * @param input2 {object}\r\n */\n\n\nfunction checkEquality(input1, input2) {\n  var value1 = input1.getValue();\n  var value2 = input2.getValue();\n\n  if (value1 !== value2) {\n    input2.throwInputError(errorTypes.CONFIRMATION);\n  } else {\n    input2.revokeInputError(errorTypes.CONFIRMATION);\n  }\n}\n/**\r\n * This function relates two given input container to each other in terms of a time period. Therefore the given input containers must be of type date input or time input (container)\r\n * @param inputContainer1 {HTMLElement}\r\n * @param inputContainer2 {HTMLElement}\r\n */\n\n\nfunction checkTime(inputContainer1, inputContainer2) {\n  var input1 = _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.getInputObject(inputContainer1);\n  var input2 = _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.getInputObject(inputContainer2);\n\n  if (input1.inputType === input2.inputType && input1.inputType === (inputTypes.DATE || inputTypes.TIME)) {\n    input1.inputContainer.addEventListener(\"change\", function () {\n      if (input2.hasUserInput()) {\n        checkRelation(input1, input2);\n      }\n    });\n    input2.inputContainer.addEventListener(\"change\", function () {\n      if (input1.hasUserInput()) {\n        checkRelation(input1, input2);\n      }\n    });\n  }\n}\n/**\r\n * This function checks if two date or time inputs that are related refer to a real time period and possibly throws errors\r\n * @param input1 {object} The first input states the beginning of the time period\r\n * @param input2 {object} The second input marks the end of the time period and should therefore contain a date reference later than the one from the first input\r\n */\n\n\nfunction checkRelation(input1, input2) {\n  var value1 = input1.getValue();\n  var value2 = input2.getValue();\n\n  if (input1.inputType === inputTypes.DATE) {\n    if (_MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.compareDates(value1, value2)) {\n      input2.revokeInputError(errorTypes.DATE);\n    } else {\n      input2.throwInputError(errorTypes.DATE);\n    }\n  } else {\n    if (_MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.compareTimes(value1, value2)) {\n      input2.revokeInputError(errorTypes.TIME);\n    } else {\n      input2.throwInputError(errorTypes.TIME);\n    }\n  }\n}\n/**\r\n * This function checks a given form containing input elements (does not necessarily need to be a form element) if the inputs do not have any errors and that every required field is filled\r\n * @param form {HTMLElement}\r\n * @param throwErrors {boolean} When true this function will immediately throw required errors (if found) while checking. Default is false\r\n * @return {boolean}\r\n */\n\n\nfunction checkForm(form) {\n  var throwErrors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var check = true;\n  var allInputs = form.querySelectorAll(\".input-container\");\n  allInputs.forEach(function (inputContainer) {\n    if (check) {\n      check = checkInput(inputContainer, throwErrors);\n    }\n  });\n  return check;\n}\n/**\r\n * This function checks a single input element if it has user input when it is marked as \"required\" or if it has any other errors and returns true if everything is fine\r\n * @param inputContainer {HTMLElement} The custom container element of the actual input to be checked\r\n * @param throwErrors {boolean} If this is true then this function will immediately throw \"required\" errors while checking\r\n * @return {boolean}\r\n */\n\n\nfunction checkInput(inputContainer, throwErrors) {\n  var check = true;\n  var inputObject = _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.getInputObject(inputContainer);\n\n  if (inputObject.required && !inputObject.hasUserInput()) {\n    if (throwErrors) {\n      inputObject.throwInputError(errorTypes.REQUIRED);\n    }\n\n    check = false;\n  }\n\n  if (check && inputObject.incorrect) {\n    check = false;\n  }\n\n  return check;\n}\n/**\r\n * Check if there are form containers on the side\r\n */\n\n\nvar formContainers = [];\n\nvar FormContainer = function FormContainer(formContainer) {\n  var This = this;\n  this.formContainerElement = formContainer;\n  this.form = this.formContainerElement.querySelector(\"form\");\n  this.submitButton = this.formContainerElement.querySelector(\".secondary-button.submit-button\");\n  this.confirmationInputs = this.formContainerElement.querySelectorAll(\".confirm\");\n  this.submitFunction = undefined;\n  this.confirmationInputs.forEach(function (confirmationInput) {\n    var relatedId = confirmationInput.getAttribute(\"data-confirm\");\n    var baseInput = document.querySelector(\".\" + relatedId);\n    checkConfirmation(baseInput, confirmationInput);\n  });\n  _SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_2__.disableSecondaryButton(this.submitButton);\n\n  if (this.submitButton) {\n    this.submitButton.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n\n      if (checkForm(This.form, true)) {\n        if (This.submitFunction) {\n          This.submitFunction(This.form);\n        } else {\n          This.form.submit();\n        }\n      }\n    });\n  }\n\n  This.formContainerElement.addEventListener(\"input\", function () {\n    if (checkForm(This.form, false)) {\n      _SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_2__.enableSecondaryButton(This.submitButton);\n    } else {\n      _SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_2__.disableSecondaryButton(This.submitButton);\n    }\n  });\n\n  this.setSubmitFunction = function (submitFunction) {\n    This.submitFunction = submitFunction;\n  };\n};\n\nfunction setSubmitFunction(form, submitForm) {\n  if (form.classList.contains(\"form-container\")) {\n    formContainers.forEach(function (formContainer) {\n      if (formContainer.formContainerElement === form) {\n        formContainer.setSubmitFunction(submitForm);\n      }\n    });\n  }\n}\n\nvar formContainerElements = document.querySelectorAll(\".form-container\");\nformContainerElements.forEach(function (formContainer) {\n  formContainers.push(new FormContainer(formContainer));\n});\n/**\r\n * API:\r\n */\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/FormModule.js?");

/***/ }),

/***/ "./resources/js/Modules/GeneralModule.js":
/*!***********************************************!*\
  !*** ./resources/js/Modules/GeneralModule.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateElement\": () => (/* binding */ generateElement),\n/* harmony export */   \"checkDependencies\": () => (/* binding */ checkDependencies),\n/* harmony export */   \"createUniqueRandomIdentifier\": () => (/* binding */ createUniqueRandomIdentifier),\n/* harmony export */   \"getCookie\": () => (/* binding */ getCookie),\n/* harmony export */   \"setCookie\": () => (/* binding */ setCookie),\n/* harmony export */   \"deleteCookie\": () => (/* binding */ deleteCookie),\n/* harmony export */   \"isAdmin\": () => (/* binding */ isAdmin),\n/* harmony export */   \"calculateAge\": () => (/* binding */ calculateAge),\n/* harmony export */   \"generalVariables\": () => (/* binding */ generalVariables)\n/* harmony export */ });\n/**\n * DEPENDENCIES\n * NONE!\n */\n\n/**\n * This Module contains general code and globally available constants and variables\n */\n\n/*\n/---------------------------------------------------------------\n/   Universal constants and variables\n/---------------------------------------------------------------\n*/\n\n/**\n * This constant contains all available input types\n * @type {{DATE: string, CHECKBOX: string, TEXTAREA: string, PASSWORD: string, RADIO: string, TEXT: string, SWITCH: string, TIME: string, FILE: string, SELECT: string, RANGE: string}}\n */\nvar inputTypes = {\n  TEXT: \"text\",\n  PASSWORD: \"password\",\n  RADIO: \"radio\",\n  CHECKBOX: \"checkbox\",\n  SWITCH: \"switch\",\n  SELECT: \"select\",\n  DATE: \"date\",\n  TIME: \"time\",\n  TEXTAREA: \"textarea\",\n  FILE: \"file\",\n  RANGE: \"range\"\n};\n/**\n * This constant contains all available HTTP request methods\n * @type {{DELETE: string, POST: string, GET: string, PUT: string}}\n */\n\nvar requests = {\n  GET: \"GET\",\n  POST: \"POST\",\n  DELETE: \"DELETE\",\n  PUT: \"PUT\"\n};\n/**\n * This constant contains all available notification types\n * @type {{SUCCESS: string, ERROR: string, INFO: string, WARNING: string}}\n */\n\nvar notificationTypes = {\n  INFO: \"Info\",\n  SUCCESS: \"Success\",\n  WARNING: \"Warning\",\n  ERROR: \"Error\"\n};\n/**\n * This constant contains all available modal window types\n * @type {{DELETE: string, INFO: string, CONFIRM: string}}\n */\n\nvar modalTypes = {\n  DELETE: \"delete\",\n  INFO: \"info\",\n  CONFIRM: \"confirm\",\n  CUSTOM: \"custom\"\n};\n/**\n * This constant contains all available error types\n * @type {{DATE: string, CONFIRMATION: string, REQUIRED: string, CUSTOM: string, TIME: string, EMAIL: string}}\n */\n\nvar errorTypes = {\n  REQUIRED: \"required\",\n  EMAIL: \"email\",\n  PASSWORD: \"password\",\n  CONFIRMATION: \"confirm\",\n  TIME: \"time\",\n  DATE: \"date\",\n  CUSTOM: \"custom\"\n};\n/*\n/---------------------------------------------------------------\n/   Application specific constants and variables\n/---------------------------------------------------------------\n*/\n\n/**\n * This constant contains all available progress steps in a tournament\n * @type {{\"Wettkampf abgeschlossen\": number, \"Anmeldung geschlossen\": number, Wettkampftag: number, \"Anmeldung freigeschalten\": number, \"Wettkampf erstellt\": number}}\n */\n\nvar progressSteps = {\n  \"Wettkampf erstellt\": 0,\n  \"Anmeldung freigeschalten\": 1,\n  \"Anmeldung geschlossen\": 2,\n  \"Wettkampftag\": 3,\n  \"Wettkampf abgeschlossen\": 4\n};\n/**\n * This constant contains all different statuses of a tournament in chronological order (actually the plural of status is status (with a long spoken u), so the variable is called statuus on purpose)\n * @type {string[]}\n */\n\nvar tournamentStatuusOrder = [\"Wettkampf erstellt\", \"Anmeldung freigeschalten\", \"Anmeldung geschlossen\", \"Wettkampftag\", \"Wettkampf abgeschlossen\"];\n/**\n * This constant contains all the different manually alterable statuses of a tournament in chronological order (actually the plural of status is status (with a long spoken u), so the variable is called statuus on purpose)\n * @type {string[]}\n */\n\nvar tournamentSelectableStatuusOrder = [\"Anmeldung freigeschalten\", \"Anmeldung geschlossen\", \"Wettkampftag\", \"Wettkampf abgeschlossen\"];\n/**\n * This constant contains all the different statuses of a category in a tournament context in chronological order. A category can be \"in preparation\" (the category is being prepared for the tournament), \"ready\" (to be executed), \"active\" (currently executed), \"done\" (the category (or rather the fighting system) has been successfully finished) and \"terminated\" (the category is completely finished and winners have been determined)\n * @type {string[]}\n */\n\nvar categoryStatuusOrder = [\"In Vorbereitung\", \"Bereit\", \"Aktiv\", \"Durchgeführt\", \"Abgeschlossen\"];\n/**\n * This constant contains all the different statues of a category in a tournament context\n * @type {{}}\n */\n\nvar categoryStatuus = {\n  IN_PREPARATION: \"In Vorbereitung\",\n  READY: \"Bereit\",\n  ACTIVE: \"Aktiv\",\n  DONE: \"Durchgeführt\",\n  TERMINATED: \"Abgeschlossen\"\n};\n/**\n * This constant contains all the different graduations in karate in ascending order\n * @type {string[]}\n */\n\nvar graduationsOrder = [\"9. Kyu\", \"8. Kyu\", \"7. Kyu\", \"6. Kyu\", \"5. Kyu\", \"4. Kyu\", \"3. Kyu\", \"2. Kyu\", \"1. Kyu\", \"1. Dan\", \"2. Dan\", \"3. Dan\", \"4. Dan\", \"5. Dan\", \"6. Dan\"];\n/**\n * This constant contains all the different examination types that can be executed at a tournament\n * @type {string[]}\n */\n\nvar examinationTypes = {\n  KIHON: \"Kihon\",\n  KATA: \"Kata\",\n  KIHON_IPPON_KUMITE: \"Kihon Ippon Kumite\",\n  JIYU_IPPON_KUMITE: \"Jiyu Ippon Kumite\",\n  SHOBU_IPPON_KUMITE: \"Shobu Ippon Kumite\",\n  TEAM: \"Team\"\n};\n/**\n * This constant stores all the different regular categories (tournament,examinationType,graduation,age(-range),special examination type,sex (in this order!) -> determine -> category) (applies to \"Nachwuchsturnier\" and \"Tora-Pokal)\n * @type {Object} (complicated)\n */\n\nvar regularCategoryReference = {\n  \"Kata\": {\n    \"7-6.Kyu\": {\n      \"8-10\": {\n        \"m\": \"1\",\n        \"w\": \"2\"\n      },\n      \"11-12\": {\n        \"m\": \"10\",\n        \"w\": \"11\"\n      },\n      \"13-14\": {\n        \"m\": \"31\",\n        \"w\": \"32\"\n      }\n    },\n    \"5.Kyu-6.Dan\": {\n      \"8-10\": {\n        \"m\": \"3\",\n        \"w\": \"4\"\n      },\n      \"11-12\": {\n        \"m\": \"12\",\n        \"w\": \"13\"\n      },\n      \"13-14\": {\n        \"m\": \"19\",\n        \"w\": \"20\"\n      },\n      \"15-16\": {\n        \"m\": \"25\",\n        \"w\": \"26\"\n      }\n    }\n  },\n  \"Kumite\": {\n    \"7.Kyu\": {\n      \"8-10\": {\n        \"Kihon Ippon Kumite\": {\n          \"m\": \"5\",\n          \"w\": \"5\"\n        },\n        \"Jiyu Ippon Kumite\": {\n          \"m\": \"6\",\n          \"w\": \"7\"\n        },\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"8\",\n          \"w\": \"9\"\n        }\n      },\n      \"11-12\": {\n        \"Kihon Ippon Kumite\": {\n          \"m\": \"14\",\n          \"w\": \"14\"\n        },\n        \"Jiyu Ippon Kumite\": {\n          \"m\": \"15\",\n          \"w\": \"16\"\n        },\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"17\",\n          \"w\": \"18\"\n        }\n      }\n    },\n    \"6.Kyu\": {\n      \"8-10\": {\n        \"Kihon Ippon Kumite\": {\n          \"m\": \"5\",\n          \"w\": \"5\"\n        },\n        \"Jiyu Ippon Kumite\": {\n          \"m\": \"6\",\n          \"w\": \"7\"\n        },\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"8\",\n          \"w\": \"9\"\n        }\n      },\n      \"11-12\": {\n        \"Kihon Ippon Kumite\": {\n          \"m\": \"14\",\n          \"w\": \"14\"\n        },\n        \"Jiyu Ippon Kumite\": {\n          \"m\": \"15\",\n          \"w\": \"16\"\n        },\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"17\",\n          \"w\": \"18\"\n        }\n      },\n      \"13-14\": {\n        \"Jiyu Ippon Kumite\": {\n          \"m\": \"21\",\n          \"w\": \"22\"\n        },\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"23\",\n          \"w\": \"24\"\n        }\n      },\n      \"15-16\": {\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"27\",\n          \"w\": \"28\"\n        }\n      }\n    },\n    \"5.Kyu-4.Kyu\": {\n      \"8-10\": {\n        \"Jiyu Ippon Kumite\": {\n          \"m\": \"6\",\n          \"w\": \"7\"\n        },\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"8\",\n          \"w\": \"9\"\n        }\n      },\n      \"11-12\": {\n        \"Jiyu Ippon Kumite\": {\n          \"m\": \"15\",\n          \"w\": \"16\"\n        },\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"17\",\n          \"w\": \"18\"\n        }\n      },\n      \"13-14\": {\n        \"Jiyu Ippon Kumite\": {\n          \"m\": \"21\",\n          \"w\": \"22\"\n        },\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"23\",\n          \"w\": \"24\"\n        }\n      },\n      \"15-16\": {\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"27\",\n          \"w\": \"28\"\n        }\n      }\n    },\n    \"3.Kyu-6.Dan\": {\n      \"8-10\": {\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"8\",\n          \"w\": \"9\"\n        }\n      },\n      \"11-12\": {\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"17\",\n          \"w\": \"18\"\n        }\n      },\n      \"13-14\": {\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"23\",\n          \"w\": \"24\"\n        }\n      },\n      \"15-16\": {\n        \"Shobu Ippon Kumite\": {\n          \"m\": \"27\",\n          \"w\": \"28\"\n        }\n      }\n    }\n  },\n  \"Team\": {\n    \"8-11\": \"29\",\n    \"12-16\": \"30\"\n  }\n};\n/**\n * This constant stores all the different categories (tournament,examinationType,graduation,age(-range),(special examination type),sex (in this order!) -> determine -> category)\n * @type {Object} (complicated)\n */\n\nvar categoryReference = {\n  \"Nachwuchsturnier\": {\n    \"Kihon\": {\n      \"9.Kyu\": {\n        \"6-8\": {\n          \"w\": \"1\",\n          \"m\": \"2\"\n        },\n        \"9-10\": {\n          \"w\": \"3\",\n          \"m\": \"4\"\n        }\n      }\n    },\n    \"Kata\": {\n      \"8.Kyu\": {\n        \"6-8\": {\n          \"w\": \"5\",\n          \"m\": \"6\"\n        },\n        \"9-10\": {\n          \"w\": \"7\",\n          \"m\": \"8\"\n        },\n        \"11-12\": {\n          \"w\": \"9\",\n          \"m\": \"10\"\n        }\n      }\n    },\n    \"Kumite\": {\n      \"8.Kyu\": {\n        \"6-8\": {\n          \"w\": \"11\",\n          \"m\": \"12\"\n        },\n        \"9-10\": {\n          \"w\": \"13\",\n          \"m\": \"14\"\n        },\n        \"11-12\": {\n          \"w\": \"15\",\n          \"m\": \"16\"\n        }\n      }\n    }\n  },\n  \"Tora-Pokal\": regularCategoryReference,\n  \"Weihnachtsturnier\": regularCategoryReference\n};\nvar personTypes = {\n  FIGHTER: \"Starter\",\n  COACH: \"Coach\",\n  REFEREE: \"Kampfrichter\",\n  HELPER: \"Helfer\"\n};\nvar fightingSystemTypes = {\n  DOGEATDOG: \"Jeder-Gegen-Jeden\",\n  TABLES: \"Tafelsystem\",\n  DOUBLEKOWITHTABLES: \"Doppel-KO-System mit finalen Tafeln\",\n  DOUBLEKO: \"Doppel-KO-System\",\n  KO: \"KO-System\",\n  KOWITHTABLES: \"KO-System mit finalen Tafeln\",\n  BRAZILIANKO: \"Brasilianisches KO-System\"\n};\n/**\n * This constant holds a map which maps a (custom application) key (e.g. column (headers) to input types in conventional tables\n * @type {Map<string, any>}\n */\n\nvar keyToInput = new Map([[\"name\", inputTypes.TEXT], [\"vorname\", inputTypes.TEXT], [\"nachname\", inputTypes.TEXT], [\"alter\", inputTypes.DATE], [\"geschlecht\", inputTypes.RADIO], [\"graduierung\", inputTypes.SELECT], [\"kategorie\", inputTypes.SELECT], [\"verein\", inputTypes.SELECT], [\"mitglieder\", \"custom\"], [\"teams\", inputTypes.SWITCH], [\"kihon\", inputTypes.SWITCH], [\"wettkampf-vorlage\", inputTypes.SELECT], [\"wettkampf-status\", inputTypes.SELECT], [\"datum\", inputTypes.DATE], [\"geburtsdatum\", inputTypes.DATE], [\"uhrzeit\", inputTypes.TIME], [\"anmeldezeitraum start\", inputTypes.DATE], [\"anmeldezeitraum ende\", inputTypes.DATE], [\"ort\", inputTypes.TEXT], [\"wettkampf-name\", inputTypes.TEXT], [\"rolle\", inputTypes.SELECT], [\"mindestalter\", inputTypes.SELECT], [\"maximalalter\", inputTypes.SELECT], [\"mindest-graduierung\", inputTypes.SELECT], [\"maximal-graduierung\", inputTypes.SELECT]]);\n/**\n * This constant contains all available genders\n * @type {string[]}\n */\n\nvar sex = [\"m\", \"w\", \"d\"];\n/**\n * This constant contains the amount of rem a single minute represents in timing schedules throughout the application\n * @type {number}\n */\n\nvar ONE_MINUTE_LENGTH = 0.1;\nvar MAX_TEAM_MEMBERS = 4;\n/*\n/---------------------------------------------------------------\n/   Universally available functions\n/---------------------------------------------------------------\n*/\n\n/**\n * This function generates DOM elements\n * @param element {string} Determines the element\n * @param classNames {string[]} ClassNames that should be added to the element\n * @param value {string} Content of the element\n * @param attributes {object} An object containing of key-value-pairs (strings). The key determines which attribute should be set and the value determines the value of the attribute\n * @return {HTMLElement}\n */\n\nfunction generateElement(element) {\n  var classNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var attributes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  var el = document.createElement(element.toUpperCase());\n\n  if (classNames && classNames.constructor === Array) {\n    classNames.forEach(function (className) {\n      if (className !== \"\") {\n        el.classList.add(className);\n      }\n    });\n  }\n\n  if (value) {\n    el.innerHTML = value;\n  }\n\n  if (attributes) {\n    for (var attribute in attributes) {\n      if (attributes.hasOwnProperty(attribute)) {\n        el.setAttribute(attribute, attributes[attribute]);\n      }\n    }\n  }\n\n  return el;\n}\n/**\n * This function checks for required dependencies and if they are available\n * @param dependencies {string[]} The required dependencies\n */\n\n\nfunction checkDependencies(dependencies) {\n  dependencies.forEach(function (dependency) {\n    if (typeof App[dependency] === \"undefined\") {\n      console.warn(\"Missing \" + dependency + \" dependency\");\n    }\n  });\n}\n\nvar uniqueRandomIdentifiers = [];\n/**\n * This function creates a unique random identifier, saves it to an array and returns it\n * @param length {number}\n */\n\nfunction createUniqueRandomIdentifier() {\n  var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  function generateRandomString(length) {\n    var randomString = \"id-\";\n\n    for (var i = 0; i < length; i++) {\n      randomString += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n\n    return randomString;\n  }\n\n  var uniqueRandomIdentifier = generateRandomString(length);\n\n  if (uniqueRandomIdentifiers.includes(uniqueRandomIdentifier)) {\n    while (uniqueRandomIdentifiers.includes(uniqueRandomIdentifier)) {\n      uniqueRandomIdentifier = generateRandomString(length);\n    }\n  }\n\n  uniqueRandomIdentifiers.push(uniqueRandomIdentifier);\n  return uniqueRandomIdentifier;\n}\n/**\n * This function sets a cookie\n * @param key {string} The name of the cookie\n * @param value {string} The value of the cookie\n * @param expiration {number} Determines when this cookie should expire (in days)\n */\n\n\nfunction setCookie(key, value) {\n  var expiration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 365;\n  var date = new Date();\n  date.setTime(date.getTime() + expiration * 24 * 60 * 60 * 1000);\n  var expires = \"expires=\" + date.toUTCString();\n  document.cookie = key + \"=\" + value + \";\" + expires + \";path=/\";\n}\n\nfunction deleteCookie(key) {\n  setCookie(key, getCookie(key), -365);\n}\n/**\n * This function returns the value of a set cookie\n * @param key {string}\n */\n\n\nfunction getCookie(key) {\n  var name = key + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var cookies = decodedCookie.split(';');\n  var value = \"\";\n  cookies.forEach(function (cookie) {\n    while (cookie.charAt(0) === \" \") {\n      cookie = cookie.substring(1);\n    }\n\n    if (cookie.indexOf(key) === 0) {\n      value = cookie.substring(key.length, cookie.length);\n    }\n\n    value = value.replace(\"=\", \"\");\n  });\n  return value;\n}\n/**\n * This function checks if the user is an admin and returns true if it is the case (necessary for some modal window/dynamic contents) (checks for a set meta tag)\n */\n\n\nfunction isAdmin() {\n  return document.querySelector('meta[name=\"is-admin\"]').content == 1;\n}\n/**\n * This function calculates the age of a given date string in the format of dd.mm.yyyy\n * @param dateString\n * @returns {number}\n */\n\n\nfunction calculateAge(dateString) {\n  var thisYear = new Date();\n  var dateArray = dateString.split(\".\");\n  var birthDate = new Date(dateArray[2], dateArray[1] - 1, dateArray[0], 0, 0, 0, 0);\n  var age = thisYear.getFullYear() - birthDate.getFullYear();\n\n  if (thisYear < new Date(birthDate.setFullYear(thisYear.getFullYear()))) {\n    age = age - 1;\n  }\n\n  return age;\n}\n/**\n * This variable contains all the variables and constants that should be globally available\n * @type {{inputTypes: {DATE: string, CHECKBOX: string, TEXTAREA: string, PASSWORD: string, RADIO: string, TEXT: string, SWITCH: string, TIME: string, FILE: string, SELECT: string, RANGE: string}, tournaments: string[], examinationTypes: string[], sex: string[], enrolledClubs: [string, string, string, string, string], graduations: string[], requests: {DELETE: string, POST: string, GET: string, PUT: string}, modalTypes: {DELETE: string, INFO: string, CONFIRM: string}, excludedClubs: [string, string], categoryReference: Object, clubMails: {\"SV Tora 9\": string, \"SV Tora\": string, \"SV Tora 5\": string, \"SV Tora 6\": string, \"SV Tora 7\": string, \"SV Tora 8\": string, \"SV Tora 2\": string, \"SV Tora 3\": string, \"SV Tora 4\": string}, clubs: string[], tournamentStatuus: string[], notificationTypes: {SUCCESS: string, ERROR: string, INFO: string, WARNING: string}, errorTypes: {DATE: string, CONFIRMATION: string, REQUIRED: string, CUSTOM: string, TIME: string, EMAIL: string}, progressSteps: {\"Wettkampf abgeschlossen\": number, \"Anmeldung geschlossen\": number, Wettkampftag: number, \"Anmeldung freigeschalten\": number, \"Wettkampf erstellt\": number}, tournamentSelectableStatuus: string[], keyToInput: Map<string, *>}}\n */\n\n\nvar generalVariables = {\n  inputTypes: inputTypes,\n  requests: requests,\n  notificationTypes: notificationTypes,\n  modalTypes: modalTypes,\n  errorTypes: errorTypes,\n  graduationsOrder: graduationsOrder,\n  examinationTypes: examinationTypes,\n  categoryReference: categoryReference,\n  keyToInput: keyToInput,\n  sex: sex,\n  progressSteps: progressSteps,\n  tournamentStatuusOrder: tournamentStatuusOrder,\n  tournamentSelectableStatuusOrder: tournamentSelectableStatuusOrder,\n  categoryStatuusOrder: categoryStatuusOrder,\n  categoryStatuus: categoryStatuus,\n  personTypes: personTypes,\n  fightingSystemTypes: fightingSystemTypes,\n  ONE_MINUTE_LENGTH: ONE_MINUTE_LENGTH,\n  MAX_TEAM_MEMBERS: MAX_TEAM_MEMBERS\n};\n/**\n * API\n */\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/GeneralModule.js?");

/***/ }),

/***/ "./resources/js/Modules/HeaderModule.js":
/*!**********************************************!*\
  !*** ./resources/js/Modules/HeaderModule.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"closeHeader\": () => (/* binding */ closeHeader)\n/* harmony export */ });\n/* harmony import */ var _NavModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NavModule */ \"./resources/js/Modules/NavModule.js\");\n/**\r\n * DEPENDENCIES\r\n */\n\n/**\r\n * This Module contains code responsible for managing the application header on each page\r\n */\n\nvar headerObject = undefined;\n\nvar Header = function Header(headerElement) {\n  var This = this;\n  this.headerElement = headerElement;\n  this.userMenu = this.headerElement.querySelector(\"div.user-profile\");\n  this.navBtn = this.headerElement.querySelector(\"a.menu\");\n  this.userBtn = this.headerElement.querySelector(\"a.profile\");\n  /**\r\n   * This function handles clicks on the navigation button (mainly opening the navigation)\r\n   */\n\n  if (this.navBtn) {\n    this.navBtn.addEventListener(\"click\", function () {\n      (0,_NavModule__WEBPACK_IMPORTED_MODULE_0__.openNav)();\n      This.headerElement.classList.add(\"open-menu\");\n    });\n  }\n  /**\r\n   * This function handles clicks on the user profile button (mainly opening the user profile)\r\n   */\n\n\n  if (this.userBtn) {\n    this.userBtn.addEventListener(\"click\", function () {\n      This.userMenu.classList.toggle(\"open\");\n\n      if (This.userMenu.classList.contains(\"open\")) {\n        This.headerElement.classList.add(\"open-menu\");\n      } else {\n        This.headerElement.classList.remove(\"open-menu\");\n      }\n    });\n  }\n  /**\r\n   * This function handles the closing of header elements like the navigation and the user profile\r\n   */\n\n\n  this.closeHeader = function () {\n    this.userMenu.classList.remove(\"open\");\n    this.headerElement.classList.remove(\"open-menu\");\n  };\n  /**\r\n   * This function is the laravel specific way of securely logging out (laravel requires a post request to the /logout route, to securely log out the user)\r\n   */\n\n\n  if (this.userMenu) {\n    this.userMenu.querySelector(\"a.secondary-button.logout\").addEventListener(\"click\", function () {\n      document.querySelector(\"#logout-form\").submit();\n    });\n  }\n};\n\nvar headerElement = document.querySelector(\"header.header\");\n\nif (headerElement) {\n  headerObject = new Header(headerElement);\n}\n\nfunction closeHeader(target) {\n  if (target) {\n    var t = target;\n\n    if (t && t.nodeName !== \"HEADER\") {\n      while (t && t.nodeName !== \"HEADER\") {\n        t = t.parentNode;\n      }\n    }\n\n    if (!t || t.nodeName === \"BODY\") {\n      headerObject.closeHeader(target);\n    }\n  } else {\n    headerObject.closeHeader(target);\n  }\n}\n/**\r\n * API:\r\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/HeaderModule.js?");

/***/ }),

/***/ "./resources/js/Modules/LoaderModule.js":
/*!**********************************************!*\
  !*** ./resources/js/Modules/LoaderModule.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addBigLoader\": () => (/* binding */ addBigLoader),\n/* harmony export */   \"removeBigLoader\": () => (/* binding */ removeBigLoader),\n/* harmony export */   \"addSmallLoader\": () => (/* binding */ addSmallLoader),\n/* harmony export */   \"removeSmallLoader\": () => (/* binding */ removeSmallLoader)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/**\r\n * DEPENDENCIES\r\n */\n\n/**\r\n * This Module contains code responsible for managing loading animations\r\n */\n\nvar bigLoaderElement = undefined;\nvar smallLoaderElement = undefined;\n/**\r\n * This function creates a loader DOM element and returns it\r\n * @param bigLoader {boolean} States if the loader to be created should cover the whole page or not\r\n * @return {HTMLElement}\r\n */\n\nfunction createLoader(bigLoader) {\n  var container = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"loader-container\"]);\n\n  if (bigLoader) {\n    container.classList.add(\"big-loader-container\");\n  } else {\n    container.classList.add(\"small-loader-container\");\n  }\n\n  var loaderDiv = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"loader\"]);\n  var fighterDiv = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"fighter\"]);\n  var image = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"img\");\n  image.setAttribute(\"src\", \"../images/fighter-symbol-white.png\");\n  image.setAttribute(\"alt\", \"fighter\");\n  fighterDiv.appendChild(image);\n  loaderDiv.appendChild(fighterDiv);\n  container.appendChild(loaderDiv);\n  return container;\n}\n/**\r\n * This function adds a big loader element to the body of the website\r\n */\n\n\nfunction addBigLoader() {\n  var body = document.querySelector(\"body\");\n\n  if (!bigLoaderElement) {\n    bigLoaderElement = createLoader(true);\n  }\n\n  body.appendChild(bigLoaderElement);\n}\n/**\r\n * This function removes a big loader from a page\r\n */\n\n\nfunction removeBigLoader() {\n  var loader = document.querySelector(\"div.big-loader-container\");\n  loader.remove();\n}\n/**\r\n * This function adds a small loader to a given parent element\r\n * @param parent {HTMLElement} The element to which the loader should be appended (displays over the content of the parent element)\r\n */\n\n\nfunction addSmallLoader(parent) {\n  if (!smallLoaderElement) {\n    smallLoaderElement = createLoader(false);\n  }\n\n  parent.appendChild(smallLoaderElement);\n}\n/**\r\n * This function removes a small loader from a given parent element\r\n * @param parent {HTMLElement} The element from which the loader should be removed\r\n */\n\n\nfunction removeSmallLoader(parent) {\n  var loader = parent.querySelector(\"div.small-loader-container\");\n  loader.remove();\n}\n/**\r\n * API:\r\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/LoaderModule.js?");

/***/ }),

/***/ "./resources/js/Modules/MapModule.js":
/*!*******************************************!*\
  !*** ./resources/js/Modules/MapModule.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/**\r\n * DEPENDENCIES\r\n */\n\n/**\r\n * This Module contains code responsible for managing maps (sites where the user can scroll in all directions)\r\n */\nvar maps = [];\n\nvar Map = function Map(mapContainerElement) {\n  var This = this;\n  this.mapContainer = mapContainerElement;\n  this.mapElement = this.mapContainer.querySelector(\".map\");\n  this.mapControlElements = this.mapElement.querySelector(\".map-controls\") ? this.mapElement.querySelector(\".map-controls\") : undefined;\n  this.drag = false;\n  this.pos = {\n    top: 0,\n    left: 0,\n    x: 0,\n    y: 0\n  };\n\n  this.mouseDownHandler = function (e) {\n    This.mapElement.style.cursor = \"grabbing\";\n    This.mapElement.classList.add(\"shifting\");\n    This.pos = {\n      // The current scroll\n      left: This.mapContainer.scrollLeft,\n      top: This.mapContainer.scrollTop,\n      // Get the current mouse position\n      x: e.clientX,\n      y: e.clientY\n    };\n    document.addEventListener(\"mousemove\", This.mouseMoveHandler);\n    document.addEventListener(\"mouseup\", This.mouseUpHandler);\n  };\n\n  this.mouseMoveHandler = function (e) {\n    // How far the mouse has been moved\n    var dx = e.clientX - This.pos.x;\n    var dy = e.clientY - This.pos.y; // Scroll the element\n\n    This.mapContainer.scrollTop = This.pos.top - dy;\n    This.mapContainer.scrollLeft = This.pos.left - dx;\n  };\n\n  this.mouseUpHandler = function () {\n    This.mapElement.classList.remove(\"shifting\");\n    This.mapElement.style.cursor = \"grab\";\n    document.removeEventListener('mousemove', This.mouseMoveHandler);\n    document.removeEventListener('mouseup', This.mouseUpHandler);\n  };\n\n  this.mapElement.addEventListener(\"mousedown\", function (e) {\n    if (!This.drag) {\n      This.mouseDownHandler(e);\n    }\n  });\n\n  if (this.mapControlElements) {\n    this.mapControlElements.addEventListener(\"click\", function (e) {\n      var target = e.target;\n\n      while (!target.classList.contains(\"primary-button\") && !target.classList.contains(\"map-controls\")) {\n        target = target.parentNode;\n      }\n\n      if (target.classList.contains(\"increase\")) {\n        var fontSize = window.getComputedStyle(This.mapElement, null).getPropertyValue(\"font-size\");\n        fontSize = parseInt(fontSize.replace(\"px\", \"\"));\n\n        if (fontSize > 50) {\n          return;\n        }\n\n        fontSize += 5;\n        This.mapElement.style.fontSize = fontSize + \"px\";\n        return;\n      }\n\n      if (target.classList.contains(\"decrease\")) {\n        var _fontSize = window.getComputedStyle(This.mapElement, null).getPropertyValue(\"font-size\");\n\n        _fontSize = parseInt(_fontSize.replace(\"px\", \"\"));\n\n        if (_fontSize < 10) {\n          return;\n        }\n\n        _fontSize -= 5;\n        This.mapElement.style.fontSize = _fontSize + \"px\";\n        console.log(\"decrease!\");\n        return;\n      }\n\n      if (target.classList.contains(\"print\")) {\n        alert(\"Drucken!\");\n        return;\n      }\n    });\n  }\n};\n/**\r\n * This block initializes static html table actions elements\r\n */\n\n\nvar mapContainerElements = document.querySelectorAll(\".map-container\");\nmapContainerElements.forEach(function (m) {\n  maps.push(new Map(m));\n});\n/**\r\n * API:\r\n */\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/MapModule.js?");

/***/ }),

/***/ "./resources/js/Modules/MaterialInputsModule.js":
/*!******************************************************!*\
  !*** ./resources/js/Modules/MaterialInputsModule.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createInput\": () => (/* binding */ createInput),\n/* harmony export */   \"getInputObject\": () => (/* binding */ getInputObject),\n/* harmony export */   \"compareDates\": () => (/* binding */ compareDates),\n/* harmony export */   \"compareTimes\": () => (/* binding */ compareTimes),\n/* harmony export */   \"createQuickTextInput\": () => (/* binding */ createQuickTextInput)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ \"./resources/js/app.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * DEPENDENCIES\n */\n\n\n/**\n * This \"Module\" contains code responsible for the dynamic behaviour of all the different input elements\n * @type {{}}\n */\n\nvar inputTypes = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.inputTypes;\nvar errorTypes = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.errorTypes;\nvar inputs = [];\n/**\n * This \"class\" represents an error\n * @param errorType {errorTypes} The type of the error\n * @param errorMessage {string} The error message\n * @constructor\n */\n\nvar Error = function Error(errorType, errorMessage) {\n  var This = this;\n  this.errorType = errorType;\n  this.errorMessage = \"\";\n  this.errorElement = undefined;\n  var classes = [];\n\n  switch (This.errorType) {\n    case errorTypes.REQUIRED:\n      This.errorMessage = \"Dieses Feld muss ausgefüllt werden.\";\n      classes.push(\"requiredError\");\n      break;\n\n    case errorTypes.EMAIL:\n      This.errorMessage = \"Die E-Mail Adresse muss dieser Form entsprechen: beispiel@provider.de.\";\n      classes.push(\"emailError\");\n      break;\n\n    case errorTypes.PASSWORD:\n      This.errorMessage = \"Das Passwort muss mindestens 8 Zeichen lang sein, mindestens eine Zahl und einen Großbuchstaben sowie ein Sonderzeichen (#?!@$ %^&*-) enthalten.\";\n      break;\n\n    case errorTypes.CONFIRMATION:\n      This.errorMessage = \"Der Inhalt muss mit dem anderen Feld übereinstimmen.\";\n      classes.push(\"confirmError\");\n      break;\n\n    case errorTypes.TIME:\n      This.errorMessage = \"Die erste Zeit muss vor der zweiten Zeit liegen.\";\n      classes.push(\"timeError\");\n      break;\n\n    case errorTypes.DATE:\n      This.errorMessage = \"Das erste Datum muss vor dem zweiten Datum liegen.\";\n      classes.push(\"dateError\");\n      break;\n\n    case errorTypes.CUSTOM:\n      This.errorMessage = errorMessage;\n      classes.push(\"customError\");\n  }\n\n  var errorSpan = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"SPAN\", [\"input-error\"].concat(classes));\n  errorSpan.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"I\", [\"material-icons\"], \"error_outline\"));\n  errorSpan.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"SPAN\", [\"message\"], this.errorMessage));\n  this.errorElement = errorSpan;\n};\n/**\n * This class handles generic custom input behaviour and provides a universal interface for all types of (custom) input elements\n */\n\n\nvar Input = /*#__PURE__*/function () {\n  function Input(inputContainer) {\n    _classCallCheck(this, Input);\n\n    this.inputContainer = inputContainer;\n    this.inputType = undefined;\n    var classes = inputContainer.classList;\n\n    if (classes.contains(\"text-input-container\")) {\n      this.inputType = inputTypes.TEXT;\n    } else if (classes.contains(\"switch-container\")) {\n      this.inputType = inputTypes.SWITCH;\n    } else if (classes.contains(\"checkbox-group\")) {\n      this.inputType = inputTypes.CHECKBOX;\n    } else if (classes.contains(\"radio-group\")) {\n      this.inputType = inputTypes.RADIO;\n    } else if (classes.contains(\"select-input-container\")) {\n      this.inputType = inputTypes.SELECT;\n    } else if (classes.contains(\"date-input-container\")) {\n      this.inputType = inputTypes.DATE;\n    } else if (classes.contains(\"time-input-container\")) {\n      this.inputType = inputTypes.TIME;\n    } else if (classes.contains(\"file-input-container\")) {\n      this.inputType = inputTypes.FILE;\n    } else if (classes.contains(\"textarea\")) {\n      this.inputType = inputTypes.TEXTAREA;\n    } else if (classes.contains(\"range-input-container\")) {\n      this.inputType = inputTypes.RANGE;\n    } else {\n      this.inputType = undefined;\n    }\n\n    this.incorrect = false;\n    this.errors = [];\n    this.userInput = false;\n    this.name = undefined;\n    this.disabled = this.inputContainer.classList.contains(\"disabled\");\n    this.required = this.inputContainer.classList.contains(\"required\");\n    this.inputContainer.addEventListener(\"change\", this.handleChangeInput.bind(this));\n  }\n  /**\n   * This function is executed when the input changes\n   */\n\n\n  _createClass(Input, [{\n    key: \"handleChangeInput\",\n    value: function handleChangeInput(e) {\n      this.revokeInputError(errorTypes.CUSTOM);\n\n      if (this.required) {\n        if (this.hasUserInput()) {\n          this.revokeInputError(errorTypes.REQUIRED);\n        } else {\n          this.throwInputError(errorTypes.REQUIRED);\n        }\n      }\n    }\n    /**\n     * This function \"sets\" a new value on an input element (should be overridden by the specific class)\n     * @param newInput {string} The new input to be set\n     */\n\n  }, {\n    key: \"setValue\",\n    value: function setValue(newInput) {\n      console.log(\"Set new input on \" + this + \": \" + newInput);\n    }\n    /**\n     * This function \"gets\" the value of an input element (should be overridden by the specific class)\n     */\n\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      console.log(\"Return input of \" + this);\n    }\n    /**\n     * This function sets the required status of this input object\n     * @param required {boolean} Determines if this input should be required or not\n     */\n\n  }, {\n    key: \"setRequired\",\n    value: function setRequired(required) {\n      this.required = required;\n\n      if (required) {\n        this.inputContainer.classList.add(\"required\");\n      } else {\n        this.inputContainer.classList.remove(\"required\");\n      }\n    }\n    /**\n     * This function returns if this input element has user input or not\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"hasUserInput\",\n    value: function hasUserInput() {\n      return this.userInput;\n    }\n    /**\n     * This function returns if this input element has an error or not\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"hasError\",\n    value: function hasError() {\n      return this.incorrect;\n    }\n    /**\n     * This function returns if this input element is disabled\n     * @return {*}\n     */\n\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      return this.disabled;\n    }\n    /**\n     * This function disables this input element (no user interaction anymore)\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n      this.inputContainer.classList.add(\"disabled\");\n    }\n    /**\n     * This function enables this input element (user interaction possible)\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n      this.inputContainer.classList.remove(\"disabled\");\n    }\n    /**\n     * This function throws a(n) (visible) error at this input element\n     * @param errorType\n     * @param errorMessage\n     */\n\n  }, {\n    key: \"throwInputError\",\n    value: function throwInputError(errorType, errorMessage) {\n      var addError = true;\n      this.errors.forEach(function (error) {\n        if (error.errorType === errorType) {\n          addError = false;\n        }\n      });\n\n      if (addError) {\n        var error = undefined;\n\n        if (errorMessage) {\n          error = new Error(errorType, errorMessage);\n        } else {\n          error = new Error(errorType);\n        }\n\n        this.errors.push(error);\n\n        if (!this.incorrect) {\n          this.inputContainer.appendChild(error.errorElement);\n          this.incorrect = true;\n          this.inputContainer.classList.add(\"incorrect\");\n        }\n      }\n    }\n    /**\n     * This function revokes a(n) (visible) error of this input element\n     * @param errorType {errorTypes} The errortype that should be revoked\n     */\n\n  }, {\n    key: \"revokeInputError\",\n    value: function revokeInputError(errorType) {\n      var _this = this;\n\n      this.errors.forEach(function (error) {\n        if (error.errorType === errorType) {\n          _this.inputContainer.querySelector(\".input-error\").remove();\n\n          _this.errors[_this.errors.indexOf(error)] = undefined;\n        }\n      });\n      this.errors = this.errors.filter(Boolean);\n\n      if (this.errors.length === 0) {\n        this.incorrect = false;\n        this.inputContainer.classList.remove(\"incorrect\");\n      } else {\n        this.inputContainer.appendChild(this.errors[0].errorElement);\n      }\n    }\n    /**\n     * This function revokes all errors of this input element\n     */\n\n  }, {\n    key: \"revokeAllInputErrors\",\n    value: function revokeAllInputErrors() {\n      if (this.inputContainer.querySelector(\".error\")) {\n        this.inputContainer.querySelector(\".error\").remove();\n      }\n\n      this.errors = [];\n      this.errors = this.errors.filter(Boolean);\n      this.incorrect = false;\n      this.inputContainer.classList.remove(\"incorrect\");\n    }\n    /**\n     * This function returns the input object of a given input container\n     * @param inputContainer {HTMLElement} The respective input container element of which the object should be returned\n     * @return {*}\n     */\n\n  }], [{\n    key: \"getInputObject\",\n    value: function getInputObject(inputContainer) {\n      if (inputContainer.classList.contains(\"input-container\")) {\n        var inputObject = undefined;\n        inputs.forEach(function (input) {\n          if (input.inputContainer === inputContainer) {\n            inputObject = input;\n          }\n        });\n        return inputObject;\n      }\n    }\n    /**\n     *\n     *  This function creates input elements with all the individual mark-up and some individualization options for usage in e.g. modals\n     *\n     * @param inputType {string} Enum which determines the input to be created\n     * @param classNames {string[]} Contains classes to be applied to the container element (these classes also control input validation for text input fields. See concrete text input creation function for further details)\n     * @param inputId {string} Optional: Sets the id for the input (if none set then a random id is generated to make the labels work)\n     * @param name {string} Sets the name attribute on the input element for identification in general\n     * @param placeholder {string} Either sets the placeholder value for almost all input types or sets the text which accompanies the switch or range\n     * @param value {string || number} Sets either the value attribute of switches or the value of text inputs, textareas or range inputs\n     * @param checked {boolean} Optional: Determines if switch to be checked\n     * @param options {string[] || object[]} This should be an array of strings to determine the different options for the select or this is an array of objects with the properties \"text\" (string), \"value\" (string), \"checked\" (boolean) and optional \"disabled\" (boolean) for the different options of checkboxes and radio buttons\n     * @returns {object}\n     */\n\n  }, {\n    key: \"createInputFactory\",\n    value: function createInputFactory(inputType, classNames, inputId, name, placeholder, value, checked, options) {\n      if (!inputId) {\n        inputId = Math.random().toString(16).substr(2, 10);\n      }\n\n      if (typeof classNames === \"undefined\") {\n        classNames = [];\n      }\n\n      switch (inputType) {\n        case inputTypes.TEXT:\n        case inputTypes.PASSWORD:\n          return TextInput.createInput(classNames, inputId, name, placeholder, value);\n\n        case inputTypes.SWITCH:\n          return Switch.createInput(classNames, inputId, name, placeholder, value, checked);\n\n        case inputTypes.CHECKBOX:\n          return Checkboxes.createInput(classNames, name, options);\n\n        case inputTypes.RADIO:\n          return RadioButtons.createInput(classNames, name, options);\n\n        case inputTypes.SELECT:\n          return Select.createInput(classNames, placeholder, name, options);\n\n        case inputTypes.DATE:\n          return DateInput.createInput(classNames, inputId, name, placeholder);\n\n        case inputTypes.TIME:\n          return TimeInput.createInput(classNames, inputId, name, placeholder);\n\n        case inputTypes.FILE:\n          return FileInput.createInput(classNames, inputId, name);\n\n        case inputTypes.TEXTAREA:\n          return Textarea.createInput(classNames, inputId, name, placeholder, value);\n\n        case inputTypes.RANGE:\n          return RangeInput.createInput(classNames, inputId, name, placeholder, value);\n\n        default:\n          return undefined;\n      }\n    }\n  }]);\n\n  return Input;\n}();\n/**\n * This class handles custom select specific behaviour\n */\n\n\nvar Select = /*#__PURE__*/function (_Input) {\n  _inherits(Select, _Input);\n\n  var _super = _createSuper(Select);\n\n  function Select(inputContainer) {\n    var _this2;\n\n    _classCallCheck(this, Select);\n\n    _this2 = _super.call(this, inputContainer);\n    _this2.inputElement = inputContainer.querySelector(\"span.select-input\");\n    _this2.optionsElement = inputContainer.querySelector(\"div.options\");\n    _this2.placeholder = inputContainer.querySelector(\"span.placeholder\").innerText; // this property contains the text value of the selected option\n\n    _this2.selected = _this2.inputElement.innerHTML.trim(); // this property saves whether the user can click on the options that expand when clicking on the container element (this is necessary due to fade in and out animations)\n\n    _this2.selectable = false;\n    _this2.name = _this2.inputElement.getAttribute(\"data-name\");\n    _this2.options = [];\n\n    _this2.optionsElement.querySelectorAll(\".option\").forEach(function (op) {\n      _this2.options.push(op.innerText);\n    });\n\n    _this2.inputContainer.addEventListener(\"click\", _this2.handleClick.bind(_assertThisInitialized(_this2)));\n\n    _this2.inputContainer.addEventListener(\"changeSelect\", _this2.handleChangeInput.bind(_assertThisInitialized(_this2)));\n\n    return _this2;\n  }\n\n  _createClass(Select, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return this.selected;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(newValue) {\n      if (newValue && this.options.includes(newValue)) {\n        this.inputElement.innerHTML = newValue;\n        this.inputElement.classList.remove(\"placeholder\");\n        this.selected = newValue;\n        this.userInput = true;\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      if (this.isDisabled()) {\n        return;\n      }\n\n      var target = e.target;\n\n      while (target && !target.classList.contains(\"select-input-container\") && !target.classList.contains(\"option\")) {\n        target = target.parentNode;\n      }\n\n      if (target && target.classList.contains(\"select-input-container\")) {\n        if (this.optionsElement.classList.contains(\"show\")) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      } else if (target && target.classList.contains(\"option\")) {\n        if (this.selectable) {\n          this.selectOption(target.innerHTML);\n          this.hide();\n        }\n      } else {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.inputContainer.classList.add(\"open\");\n      this.optionsElement.classList.add(\"show\");\n      window.setTimeout(function () {\n        this.selectable = true;\n      }.bind(this), 500);\n      Select.closeAllSelectsExcept(this);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.selectable = false;\n      this.inputContainer.classList.remove(\"open\");\n      this.optionsElement.classList.remove(\"show\");\n    }\n  }, {\n    key: \"selectOption\",\n    value: function selectOption(selectedOption) {\n      this.inputElement.innerHTML = selectedOption;\n      this.inputElement.classList.remove(\"placeholder\");\n      this.selected = selectedOption;\n      this.userInput = true;\n      this.inputElement.dispatchEvent(new Event(\"change\", {\n        bubbles: true\n      }));\n      this.inputElement.dispatchEvent(new Event(\"input\", {\n        bubbles: true\n      }));\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions(newOptions) {\n      this.options = newOptions;\n      this.optionsElement.innerHTML = \"\";\n      var This = this;\n      newOptions.forEach(function (item) {\n        var option = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"DIV\", [\"option\"], item);\n        This.optionsElement.appendChild(option);\n      });\n    }\n  }], [{\n    key: \"closeAllSelectsExcept\",\n    value: function closeAllSelectsExcept(openSelect) {\n      inputs.forEach(function (input) {\n        if (input.inputType === inputTypes.SELECT) {\n          if (input !== openSelect) {\n            input.hide();\n          }\n        }\n      });\n    }\n    /**\n     *\n     *  This function creates a select element with all the individual mark-up and some individualization options for usage in e.g. modals\n     *\n     * @param classNames {string[]} Contains classes to be applied to the container element (these classes also control input validation for text input fields. See concrete text input creation function for further details)\n     * @param name {string} Sets the name attribute on the input element for identification in general\n     * @param placeholder {string} This is the original placeholder value\n     * @param options {string[] || object} This should be an array of strings to determine the different options for the select or this is an array of objects with the properties \"text\", \"value\", \"checked\" for the different options of checkboxes and radio buttons\n     * @returns {object}\n     */\n\n  }, {\n    key: \"createInput\",\n    value: function createInput(classNames, placeholder, name, options) {\n      var selectContainer = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"select-input-container\", \"input-container\"].concat(classNames));\n      var label = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"label\", [\"icon\"]);\n      var labelIcon = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\"], \"list\");\n      label.appendChild(labelIcon);\n      selectContainer.appendChild(label);\n\n      if (!placeholder) {\n        placeholder = name;\n      }\n\n      var selectSpan = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"select-input\", \"chosen\", \"placeholder\"], placeholder); // name attribute can only be set on input elements so for further identification purposes this custom select element gets a custom \"data-name\" attribute\n\n      if (name) {\n        selectSpan.setAttribute(\"data-name\", name);\n      }\n\n      selectContainer.appendChild(selectSpan);\n      selectContainer.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\"], \"expand_more\"));\n      var optionsContainer = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"options\"]);\n\n      if (options) {\n        options.forEach(function (option) {\n          var optionElement = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"option\"], option);\n          optionsContainer.appendChild(optionElement);\n        });\n      }\n\n      selectContainer.appendChild(optionsContainer);\n      var newSelect = new Select(selectContainer);\n      inputs.push(newSelect);\n      return newSelect;\n    }\n  }]);\n\n  return Select;\n}(Input);\n/**\n * This class handles date input specific behaviour\n */\n\n\nvar DateInput = /*#__PURE__*/function (_Input2) {\n  _inherits(DateInput, _Input2);\n\n  var _super2 = _createSuper(DateInput);\n\n  /*\n  * Format of the date in input element: dd.mm.yyyy\n  */\n  function DateInput(inputContainer) {\n    var _this3;\n\n    _classCallCheck(this, DateInput);\n\n    _this3 = _super2.call(this, inputContainer);\n    _this3.inputElement = inputContainer.querySelector(\"input\");\n    _this3.name = _this3.inputElement.getAttribute(\"name\");\n\n    if (DateInput.datePickerElement === undefined) {\n      DateInput.datePickerElement = DateInput.createDatePicker();\n      document.querySelector(\"body\").appendChild(DateInput.datePickerElement);\n    }\n\n    if (_this3.inputElement.value !== \"\") {\n      var date = _this3.inputElement.value;\n      _this3.day = parseInt(date.substr(0, 2));\n      _this3.month = parseInt(date.substr(3, 2)) - 1;\n      _this3.year = parseInt(date.substr(6));\n    } else {\n      _this3.day = new Date().getDate();\n      _this3.month = new Date().getMonth();\n      _this3.year = new Date().getFullYear();\n    }\n\n    _this3.previousMonthBtn = DateInput.datePickerElement.querySelector(\".date-header .previous-month\");\n    _this3.nextMonthBtn = DateInput.datePickerElement.querySelector(\".date-header .next-month\");\n    _this3.monthElement = DateInput.datePickerElement.querySelector(\".date-header .month\");\n    _this3.yearElement = DateInput.datePickerElement.querySelector(\".date-header .year\");\n\n    _this3.inputContainer.addEventListener(\"click\", _this3.handleDateInputClick.bind(_assertThisInitialized(_this3)));\n\n    _this3.datePickerEventLister = _this3.handleDatePickerClick.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n\n  _createClass(DateInput, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return this.inputElement.value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(newInput) {\n      this.inputElement.value = newInput;\n      this.day = parseInt(newInput.substr(0, 2));\n      this.month = parseInt(newInput.substr(3, 2)) - 1;\n      this.year = parseInt(newInput.substr(6));\n      this.inputElement.dispatchEvent(new Event(\"change\", {\n        bubbles: true\n      }));\n    }\n  }, {\n    key: \"handleChangeInput\",\n    value: function handleChangeInput() {\n      _get(_getPrototypeOf(DateInput.prototype), \"handleChangeInput\", this).call(this);\n\n      this.hasUserInput();\n    }\n  }, {\n    key: \"hasUserInput\",\n    value: function hasUserInput() {\n      if (this.inputElement.value) {\n        this.inputElement.classList.add(\"filled\");\n        return this.userInput = true;\n      } else {\n        this.inputElement.classList.remove(\"filled\");\n        return this.userInput = false;\n      }\n    }\n  }, {\n    key: \"handleDateInputClick\",\n    value: function handleDateInputClick(e) {\n      this.show();\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      DateInput.datePickerElement.classList.add(\"show\");\n      this.updateCalendar(this.month, this.year);\n      DateInput.datePickerElement.addEventListener(\"click\", this.datePickerEventLister);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      DateInput.datePickerElement.classList.remove(\"show\");\n      DateInput.datePickerElement.removeEventListener(\"click\", this.datePickerEventLister);\n    }\n  }, {\n    key: \"setYear\",\n    value: function setYear(year) {\n      this.year = parseInt(year);\n      this.yearElement.innerHTML = year;\n    }\n  }, {\n    key: \"setMonth\",\n    value: function setMonth(month) {\n      this.month = month;\n      this.monthElement.innerHTML = DateInput.months[month];\n    }\n  }, {\n    key: \"handleDatePickerClick\",\n    value: function handleDatePickerClick(e) {\n      var target = e.target; // choose picked date\n\n      if (target.classList.contains(\"pick\")) {\n        var day = this.day < 10 ? \"0\" + this.day : this.day; // since Javascript months start at 0 check if it is smaller than 9 instead of 10\n\n        var month = this.month < 9 ? \"0\" + (this.month + 1) : this.month + 1;\n        this.setValue(day + \".\" + month + \".\" + this.year);\n\n        if (!this.hasUserInput) {\n          this.userInput = true;\n        }\n\n        this.hide();\n        return;\n      } // cancel choosing a date\n\n\n      if (target.classList.contains(\"cancel\")) {\n        this.hide();\n        return;\n      }\n\n      if (target.classList.contains(\"selectable\")) {\n        var _day = target.innerText;\n        this.chooseDay(_day);\n        return;\n      } // show previous month\n\n\n      if (target.classList.contains(\"previous-month\") || target.parentNode.classList.contains(\"previous-month\")) {\n        if (this.month === 0) {\n          this.updateCalendar(11, this.year - 1);\n        } else {\n          this.updateCalendar(this.month - 1, this.year);\n        }\n\n        return;\n      } // show next month\n\n\n      if (target.classList.contains(\"next-month\") || target.parentNode.classList.contains(\"next-month\")) {\n        if (this.month === 11) {\n          this.updateCalendar(0, this.year + 1);\n        } else {\n          this.updateCalendar(this.month + 1, this.year);\n        }\n\n        return;\n      } // change year manually\n\n\n      if (target.classList.contains(\"year\")) {\n        var nextChild = DateInput.datePickerElement.querySelector(\"a.next-month\");\n        target.classList.add(\"no-display\");\n        createQuickTextInput(target.offsetWidth + 20, target.innerText, function (newYear) {\n          target.innerHTML = newYear;\n          target.classList.remove(\"no-display\");\n          this.updateCalendar(this.month, newYear);\n        }.bind(this), nextChild, function (value) {\n          return !isNaN(value) && !isNaN(parseInt(value));\n        });\n        return;\n      }\n    }\n  }, {\n    key: \"chooseDay\",\n    value: function chooseDay(day) {\n      if (!isNaN(parseInt(day))) {\n        if (DateInput.datePickerElement.querySelector(\".selected\")) {\n          DateInput.datePickerElement.querySelector(\".selected\").classList.remove(\"selected\");\n        }\n\n        var dayElement = DateInput.datePickerElement.querySelector(\".calender\").querySelector(\".day\" + day);\n        dayElement.classList.add(\"selected\");\n        this.day = day;\n      }\n    }\n  }, {\n    key: \"updateCalendar\",\n    value: function updateCalendar(month, year) {\n      this.setMonth(month);\n      this.setYear(year);\n      var numberDays = DateInput.daysInMonth(month, year);\n      var firstWeekday = new Date(year, month, 1).getDay() - 1;\n      var tBody = DateInput.datePickerElement.querySelector(\"table tbody\");\n      tBody.innerHTML = \"\";\n      var dayCounter = 1;\n\n      while (dayCounter <= numberDays) {\n        var row = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"TR\");\n\n        for (var i = 0; i < 7; i++) {\n          var td = void 0;\n\n          if (firstWeekday > 0) {\n            firstWeekday -= 1;\n            td = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"TD\");\n          } else {\n            if (dayCounter <= numberDays) {\n              if (dayCounter == this.day) {\n                td = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"TD\", [\"selectable\", \"selected\", \"day\" + dayCounter], dayCounter++);\n              } else {\n                td = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"TD\", [\"selectable\", \"day\" + dayCounter], dayCounter++);\n              }\n            } else {\n              td = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"TD\");\n            }\n          }\n\n          row.appendChild(td);\n        }\n\n        tBody.appendChild(row);\n      }\n    }\n    /**\n     * This function compares two dates and returns true if the first date is smaller (=earlier) than the second one\n     * @param date1 {string} Format: \"dd.mm.yyyy\"\n     * @param date2 {string} Format: \"dd.mm.yyyy\"\n     * @return {boolean}\n     */\n\n  }], [{\n    key: \"compareDates\",\n    value: function compareDates(date1, date2) {\n      var day1 = parseInt(date1.substring(0, date1.indexOf(\".\")));\n      var month1 = parseInt(date1.substring(date1.indexOf(\".\") + 1, date1.indexOf(\".\", date1.indexOf(\".\") + 1))) - 1;\n      var year1 = parseInt(date1.substring(date1.indexOf(\".\", date1.indexOf(\".\") + 1) + 1));\n      var day2 = parseInt(date2.substring(0, date2.indexOf(\".\")));\n      var month2 = parseInt(date2.substring(date2.indexOf(\".\") + 1, date2.indexOf(\".\", date2.indexOf(\".\") + 1))) - 1;\n      var year2 = parseInt(date2.substring(date2.indexOf(\".\", date2.indexOf(\".\") + 1) + 1));\n      var d1 = new Date().setFullYear(year1, month1, day1);\n      var d2 = new Date().setFullYear(year2, month2, day2);\n      return d1 < d2;\n    }\n  }, {\n    key: \"daysInMonth\",\n    value: function daysInMonth(month, year) {\n      // month has to be increased by one to be coherent with other javascript date indexes\n      return new Date(year, month + 1, 0).getDate();\n    }\n  }, {\n    key: \"createDatePicker\",\n    value: function createDatePicker() {\n      var datePickerContainer = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"datepicker-container\"]);\n      var datePicker = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"datepicker\"]);\n      var header = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"date-header\", \"clearfix\"]);\n      var previousMonth = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"a\", [\"previous-month\"]);\n      var leftIcon = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\"], \"arrow_back\");\n      previousMonth.appendChild(leftIcon);\n      header.appendChild(previousMonth);\n      var month = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"month\"]);\n      header.appendChild(month);\n      var year = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"year\"]);\n      header.appendChild(year);\n      var nextMonth = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"a\", [\"next-month\"]);\n      var rightIcon = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\"], \"arrow_forward\");\n      nextMonth.appendChild(rightIcon);\n      header.appendChild(nextMonth);\n      datePicker.appendChild(header);\n      var calender = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"calender\"]);\n      var table = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"table\");\n      var tHeader = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"thead\");\n      var headerRow = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"tr\");\n      DateInput.days.forEach(function (item) {\n        var td = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"th\", [], item);\n        headerRow.appendChild(td);\n      });\n      tHeader.appendChild(headerRow);\n      table.appendChild(tHeader);\n      var tBody = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"tbody\");\n      table.appendChild(tBody);\n      calender.appendChild(table);\n      datePicker.appendChild(calender);\n      var footer = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"footer\", \"clearfix\"]);\n      var cancelBtn = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"a\", [\"cancel\"], \"Abbrechen\");\n      footer.appendChild(cancelBtn);\n      var pickBtn = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"a\", [\"pick\"], \"Wählen\");\n      footer.appendChild(pickBtn);\n      datePicker.appendChild(footer);\n      datePickerContainer.appendChild(datePicker);\n      return datePickerContainer;\n    }\n    /**\n     *\n     *  This function creates a date input element with all the individual mark-up and some individualization options for usage in e.g. modals\n     *\n     * @param classNames {string[]} Contains classes to be applied to the container element (these classes also control input validation for text input fields. See concrete text input creation function for further details)\n     * @param inputId {string} Optional: Sets the id for the input (if none set then a random id is generated to make the labels work)\n     * @param name {string} Sets the name attribute on the input element for identification in general\n     * @param placeholder {string} Either sets the placeholder value for almost all input types or sets the text which accompanies the switch, checkbox or radio button\n     * @returns {object}\n     */\n\n  }, {\n    key: \"createInput\",\n    value: function createInput(classNames, inputId, name, placeholder) {\n      var inputContainer = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"date-input-container\", \"input-container\"].concat(classNames));\n      var icon = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"label\", [\"icon\"]);\n      icon.setAttribute(\"for\", inputId);\n      icon.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\"], \"today\"));\n      inputContainer.appendChild(icon);\n      var input = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"input\", [\"date-input\"]);\n      input.setAttribute(\"type\", \"text\");\n      input.setAttribute(\"id\", inputId);\n\n      if (name) {\n        input.setAttribute(\"name\", name);\n      }\n\n      inputContainer.appendChild(input);\n      var pLabel = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"label\", [\"text\"], placeholder);\n      pLabel.setAttribute(\"for\", inputId);\n      inputContainer.appendChild(pLabel);\n      inputContainer.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"underline\"]));\n      var newDateInput = new DateInput(inputContainer);\n      inputs.push(newDateInput);\n      return newDateInput;\n    }\n  }]);\n\n  return DateInput;\n}(Input);\n/**\n * This class handles time input specific behaviour\n */\n\n\n_defineProperty(DateInput, \"datePickerElement\", undefined);\n\n_defineProperty(DateInput, \"days\", [\"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\", \"So\"]);\n\n_defineProperty(DateInput, \"months\", [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"]);\n\nvar TimeInput = /*#__PURE__*/function (_Input3) {\n  _inherits(TimeInput, _Input3);\n\n  var _super3 = _createSuper(TimeInput);\n\n  /*\n  * Format of time in input element: hh:mm\n  */\n  function TimeInput(inputContainer) {\n    var _this4;\n\n    _classCallCheck(this, TimeInput);\n\n    _this4 = _super3.call(this, inputContainer);\n    _this4.inputElement = inputContainer.querySelector(\"input\");\n    _this4.name = _this4.inputElement.getAttribute(\"name\");\n\n    if (TimeInput.timePickerElement === undefined) {\n      TimeInput.timePickerElement = TimeInput.createTimePicker();\n      document.querySelector(\"body\").appendChild(TimeInput.timePickerElement);\n      TimeInput.timePickerElement.querySelector(\".clock\").addEventListener(\"mousemove\", _this4.handleMouseMove.bind(_assertThisInitialized(_this4)));\n      TimeInput.timePickerElement.querySelector(\".clock\").addEventListener(\"mouseleave\", _this4.handleMouseLeave.bind(_assertThisInitialized(_this4)));\n    }\n\n    _this4.hour = new Date().getHours();\n    _this4.minute = new Date().getMinutes();\n    _this4.hourElement = TimeInput.timePickerElement.querySelector(\".time-header span.chosenHour\");\n    _this4.minuteElement = TimeInput.timePickerElement.querySelector(\".time-header span.chosenMinute\");\n\n    _this4.inputElement.addEventListener(\"click\", _this4.handleTimeInputClick.bind(_assertThisInitialized(_this4)));\n\n    _this4.timePickerEventLister = _this4.handleTimePickerClick.bind(_assertThisInitialized(_this4));\n    return _this4;\n  }\n\n  _createClass(TimeInput, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return this.inputElement.value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(newInput) {\n      this.inputElement.value = newInput;\n      this.inputElement.dispatchEvent(new Event(\"change\", {\n        bubbles: true\n      }));\n    }\n  }, {\n    key: \"handleChangeInput\",\n    value: function handleChangeInput() {\n      _get(_getPrototypeOf(TimeInput.prototype), \"handleChangeInput\", this).call(this);\n\n      this.hasUserInput();\n    }\n  }, {\n    key: \"hasUserInput\",\n    value: function hasUserInput() {\n      if (this.inputElement.value) {\n        this.inputElement.classList.add(\"filled\");\n        return this.userInput = true;\n      } else {\n        this.inputElement.classList.remove(\"filled\");\n        return this.userInput = false;\n      }\n    }\n  }, {\n    key: \"handleTimeInputClick\",\n    value: function handleTimeInputClick(e) {\n      e.preventDefault();\n      this.show();\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      TimeInput.timePickerElement.classList.add(\"show\");\n      this.updateClock(this.hour, this.minute);\n      this.hourElement.classList.add(\"active\");\n      this.minuteElement.classList.remove(\"active\");\n      TimeInput.timePickerElement.addEventListener(\"click\", this.timePickerEventLister);\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(e) {\n      var target = e.target;\n\n      if (target.nodeName === \"SPAN\") {\n        if (!TimeInput.timePickerElement.querySelector(\".active .chosen\")) {\n          this.positionClockHand(target.innerHTML);\n        }\n      }\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(e) {\n      if (TimeInput.timePickerElement.querySelector(\".clock .active .chosen\")) {\n        var chosen = TimeInput.timePickerElement.querySelector(\".clock .chosen\");\n        this.positionClockHand(chosen.innerHTML);\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (TimeInput.timePickerElement.querySelector(\".clock .chosen\")) {\n        TimeInput.timePickerElement.querySelector(\".clock .chosen\").classList.remove(\"chosen\");\n      }\n\n      if (TimeInput.timePickerElement.querySelector(\".clock.chosen\")) {\n        TimeInput.timePickerElement.querySelector(\".clock.chosen\").classList.remove(\"chosen\");\n      }\n\n      TimeInput.timePickerElement.classList.remove(\"show\");\n      TimeInput.timePickerElement.removeEventListener(\"click\", this.timePickerEventLister);\n    }\n  }, {\n    key: \"handleTimePickerClick\",\n    value: function handleTimePickerClick(e) {\n      var target = e.target; // complicated\n\n      if (target.classList.contains(\"minute\") || target.classList.contains(\"hour\")) {\n        if (target.nodeName === \"SPAN\") {\n          if (TimeInput.timePickerElement.querySelector(\".clock .chosen\")) {\n            TimeInput.timePickerElement.querySelector(\".clock .chosen\").classList.remove(\"chosen\");\n          }\n\n          target.classList.add(\"chosen\");\n          this.positionClockHand(target.innerHTML);\n          TimeInput.timePickerElement.querySelector(\".clock\").classList.add(\"chosen\");\n\n          if (TimeInput.timePickerElement.querySelector(\".hours.active\")) {\n            this.setHour(target.innerHTML);\n            TimeInput.timePickerElement.querySelector(\".hours.active\").classList.remove(\"active\");\n            TimeInput.timePickerElement.querySelector(\".minutes\").classList.add(\"active\");\n            this.hourElement.classList.remove(\"active\");\n            this.minuteElement.classList.add(\"active\");\n          } else {\n            this.setMinute(target.innerHTML);\n          }\n        }\n\n        return;\n      } // pick chosen time\n\n\n      if (target.classList.contains(\"pick\")) {\n        if (TimeInput.timePickerElement.querySelector(\".minutes.active\")) {\n          TimeInput.timePickerElement.querySelector(\".minutes.active\").classList.remove(\"active\");\n          TimeInput.timePickerElement.querySelector(\".hours\").classList.add(\"active\");\n          this.setValue(this.hourElement.innerHTML.trim() + \":\" + this.minuteElement.innerHTML.trim());\n\n          if (!this.hasUserInput) {\n            this.userInput = true;\n          }\n\n          this.hide();\n        }\n\n        return;\n      } // cancel choosing a time\n\n\n      if (target.classList.contains(\"cancel\")) {\n        if (TimeInput.timePickerElement.querySelector(\".minutes.active\")) {\n          TimeInput.timePickerElement.querySelector(\".minutes.active\").classList.remove(\"active\");\n          TimeInput.timePickerElement.querySelector(\".hours\").classList.add(\"active\");\n        }\n\n        this.hide();\n        return;\n      }\n    }\n  }, {\n    key: \"setHour\",\n    value: function setHour(hour) {\n      this.hour = hour;\n\n      if (hour < 10) {\n        if (hour == \"00\") {\n          this.hourElement.innerHTML = \"00\";\n        } else {\n          this.hourElement.innerHTML = \"0\" + hour;\n        }\n      } else {\n        this.hourElement.innerHTML = hour;\n      }\n    }\n  }, {\n    key: \"setMinute\",\n    value: function setMinute(minute) {\n      this.minute = minute;\n\n      if (minute < 10) {\n        if (minute == \"00\") {\n          this.minuteElement.innerHTML = \"00\";\n        } else {\n          this.minuteElement.innerHTML = \"0\" + minute;\n        }\n      } else {\n        this.minuteElement.innerHTML = minute;\n      }\n    }\n  }, {\n    key: \"updateClock\",\n    value: function updateClock(hour, minute) {\n      this.setHour(hour);\n      this.setMinute(minute);\n    }\n  }, {\n    key: \"positionClockHand\",\n    value: function positionClockHand(position) {\n      var clockhand = TimeInput.timePickerElement.querySelector(\".active .clockhand\");\n      clockhand.classList.remove(\"short\");\n      var pos;\n\n      if (TimeInput.timePickerElement.querySelector(\".minutes.active\")) {\n        pos = Math.round((position / (12 * 5) + Number.EPSILON) * 100) / 100;\n      } else {\n        pos = Math.round((position / 12 + Number.EPSILON) * 100) / 100;\n      }\n\n      var degrees = 360 * pos;\n      clockhand.style.transform = \"translateX(-50%) rotate(\" + degrees + \"deg)\";\n\n      if (TimeInput.timePickerElement.querySelector(\".hours.active\")) {\n        if (pos > 1 || pos === 0) {\n          clockhand.classList.add(\"short\");\n        }\n      }\n    }\n    /**\n     * This function compares to given times and returns true if the first time is smaller (=earlier) than the second time\n     * @param time1 {string} Format: \"hh:mm\"\n     * @param time2 {string} Format: \"hh:mm\"\n     * @return {boolean}\n     */\n\n  }], [{\n    key: \"compareTimes\",\n    value: function compareTimes(time1, time2) {\n      var hour1 = parseInt(time1.substring(0, time1.indexOf(\":\")));\n      var minute1 = parseInt(time1.substr(time1.indexOf(\":\") + 1));\n      var hour2 = parseInt(time2.substring(0, time2.indexOf(\":\")));\n      var minute2 = parseInt(time2.substr(time2.indexOf(\":\") + 1));\n      var date1 = new Date().setHours(hour1, minute1);\n      var date2 = new Date().setHours(hour2, minute2);\n      return date1 < date2;\n    }\n  }, {\n    key: \"createTimePicker\",\n    value: function createTimePicker() {\n      var timePickerContainer = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"DIV\", [\"timepicker-container\"]);\n      var timePicker = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"DIV\", [\"timepicker\"]);\n      var header = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"DIV\", [\"time-header\"]);\n      var hourSpan = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"SPAN\", [\"chosenHour\"]);\n      header.appendChild(hourSpan);\n      var dividerSpan = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"SPAN\", [], \":\");\n      header.appendChild(dividerSpan);\n      var minuteSpan = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"SPAN\", [\"chosenMinute\"]);\n      header.appendChild(minuteSpan);\n      timePicker.appendChild(header);\n      var clock = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"DIV\", [\"clock\"]);\n      var hourClockFace = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"DIV\", [\"clockface\", \"hours\", \"active\"]);\n      var clockhand = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"DIV\", [\"clockhand\"]);\n      hourClockFace.appendChild(clockhand);\n\n      for (var i = 0; i < 24; i++) {\n        var value = i;\n        var classNames = [\"hour\", \"hour\"];\n\n        if (i === 0) {\n          value = \"00\";\n          classNames.push(\"small\");\n        }\n\n        if (i > 12) {\n          classNames.push(\"small\");\n        }\n\n        classNames[0] = classNames[0] + value;\n        var hourUnit = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"SPAN\", classNames, value);\n        hourClockFace.appendChild(hourUnit);\n      }\n\n      clock.appendChild(hourClockFace);\n      var minuteClockFace = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"DIV\", [\"clockface\", \"minutes\"]);\n      minuteClockFace.appendChild(clockhand.cloneNode(true));\n\n      for (var _i = 0; _i < 60; _i += 5) {\n        var _value = _i;\n\n        if (_i === 0) {\n          _value = \"00\";\n        }\n\n        var _classNames = [\"minute\" + _value, \"minute\"];\n        var minuteUnit = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"SPAN\", _classNames, _value);\n        minuteClockFace.appendChild(minuteUnit);\n      }\n\n      clock.appendChild(minuteClockFace);\n      timePicker.appendChild(clock);\n      var footer = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"DIV\", [\"footer\", \"clearfix\"]);\n      var cancelBtn = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"A\", [\"cancel\"], \"Abbrechen\");\n      footer.appendChild(cancelBtn);\n      var pickBtn = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"A\", [\"pick\"], \"Wählen\");\n      footer.appendChild(pickBtn);\n      timePicker.appendChild(footer);\n      timePickerContainer.appendChild(timePicker);\n      return timePickerContainer;\n    }\n    /**\n     *\n     *  This function creates a time input element with all the individual mark-up and some individualization options for usage in e.g. modals\n     *\n     * @param classNames {string[]} Contains classes to be applied to the container element (these classes also control input validation for text input fields. See concrete text input creation function for further details)\n     * @param inputId {string} Optional: Sets the id for the input (if none set then a random id is generated to make the labels work)\n     * @param name {string} Sets the name attribute on the input element for identification in general\n     * @param placeholder {string} Either sets the placeholder value for almost all input types or sets the text which accompanies the switch, checkbox or radio button[] || object} This should be an array of strings to determine the different options for the select or this is an array of objects with the properties \"text\", \"value\", \"checked\" for the different options of checkboxes and radio buttons\n     * @returns {object}\n     */\n\n  }, {\n    key: \"createInput\",\n    value: function createInput(classNames, inputId, name, placeholder) {\n      var inputContainer = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"time-input-container\", \"input-container\"].concat(classNames));\n      var icon = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"label\", [\"icon\"]);\n      icon.setAttribute(\"for\", inputId);\n      icon.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\"], \"schedule\"));\n      inputContainer.appendChild(icon);\n      var input = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"input\", [\"time-input\"]);\n      input.setAttribute(\"type\", \"text\");\n      input.setAttribute(\"id\", inputId);\n\n      if (name) {\n        input.setAttribute(\"name\", name);\n      }\n\n      inputContainer.appendChild(input);\n      var pLabel = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"label\", [\"text\"], placeholder);\n      pLabel.setAttribute(\"for\", inputId);\n      inputContainer.appendChild(pLabel);\n      inputContainer.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"underline\"]));\n      var newTimeInput = new TimeInput(inputContainer);\n      inputs.push(newTimeInput);\n      return newTimeInput;\n    }\n  }]);\n\n  return TimeInput;\n}(Input);\n/**\n * This class handles radio button input specific behaviour\n */\n\n\n_defineProperty(TimeInput, \"timePickerElement\", undefined);\n\nvar RadioButtons = /*#__PURE__*/function (_Input4) {\n  _inherits(RadioButtons, _Input4);\n\n  var _super4 = _createSuper(RadioButtons);\n\n  function RadioButtons(inputGroup) {\n    var _this5;\n\n    _classCallCheck(this, RadioButtons);\n\n    _this5 = _super4.call(this, inputGroup);\n    _this5.inputElements = inputGroup.querySelectorAll(\"input\");\n    _this5.name = _this5.inputElements[0].getAttribute(\"name\");\n    _this5.selected = undefined;\n    _this5.selectedOption = undefined;\n    return _this5;\n  }\n\n  _createClass(RadioButtons, [{\n    key: \"getValue\",\n    value: function getValue() {\n      var value = undefined;\n      this.inputElements.forEach(function (radio) {\n        if (radio.checked) {\n          value = radio.getAttribute(\"value\");\n        }\n      });\n      return value;\n    }\n  }, {\n    key: \"hasUserInput\",\n    value: function hasUserInput() {\n      if (this.getSelected()) {\n        return this.userInput = true;\n      } else {\n        return this.userInput = false;\n      }\n    }\n  }, {\n    key: \"getSelected\",\n    value: function getSelected() {\n      var _this6 = this;\n\n      this.inputElements.forEach(function (radio) {\n        if (radio.checked) {\n          _this6.selected = radio;\n          _this6.selectedOption = radio.getAttribute(\"value\");\n        }\n      });\n      return this.selected;\n    }\n    /**\n     *\n     *  This function creates a group of radio button input elements with all the individual mark-up and some individualization options for usage in e.g. modals\n     *\n     * @param classNames {string[]} Contains classes to be applied to the container element (these classes also control input validation for text input fields. See concrete text input creation function for further details)\n     * @param name {string} Sets the name attribute on the input element for identification in general\n     * @param options {object[]} This is an array of objects with the properties \"text\" (string), \"value\" (string), \"checked\" (boolean) and optional \"disabled\" (boolean) for the different options of checkboxes and radio buttons\n     * @returns {object}\n     */\n\n  }], [{\n    key: \"createInput\",\n    value: function createInput(classNames, name, options) {\n      var group = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"radio-group\", \"input-container\"].concat(classNames));\n      options.forEach(function (option) {\n        if (!option[\"value\"]) {\n          option[\"value\"] = option[\"text\"];\n        }\n\n        var label = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"label\", [\"radio-input-container\"]);\n        label.appendChild(document.createTextNode(option[\"text\"]));\n        var input = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"input\");\n        input.setAttribute(\"type\", \"radio\");\n        input.setAttribute(\"value\", option[\"value\"]);\n        input.setAttribute(\"name\", name);\n\n        if (option.hasOwnProperty(\"checked\") && option[\"checked\"]) {\n          input.setAttribute(\"checked\", \"checked\");\n        }\n\n        if (option.hasOwnProperty(\"disabled\") && option[\"disabled\"]) {\n          label.classList.add(\"disabled\");\n          input.setAttribute(\"disabled\", \"disabled\");\n        }\n\n        label.appendChild(input);\n        label.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"checkmark\"]));\n        group.appendChild(label);\n      });\n      var newRadioButtons = new RadioButtons(group);\n      inputs.push(newRadioButtons);\n      return newRadioButtons;\n    }\n  }]);\n\n  return RadioButtons;\n}(Input);\n/**\n * This class handles checkbox input specific behaviour\n */\n\n\nvar Checkboxes = /*#__PURE__*/function (_Input5) {\n  _inherits(Checkboxes, _Input5);\n\n  var _super5 = _createSuper(Checkboxes);\n\n  function Checkboxes(inputGroup) {\n    var _this7;\n\n    _classCallCheck(this, Checkboxes);\n\n    _this7 = _super5.call(this, inputGroup);\n    _this7.inputElements = inputGroup.querySelectorAll(\"input\");\n    _this7.name = _this7.inputElements[0].getAttribute(\"name\");\n    _this7.selected = [];\n    _this7.selectedOptions = [];\n    return _this7;\n  }\n\n  _createClass(Checkboxes, [{\n    key: \"getValue\",\n    value: function getValue() {\n      var values = [];\n      this.inputElements.forEach(function (checkbox) {\n        if (checkbox.checked) {\n          values.push(checkbox.getAttribute(\"value\"));\n        }\n      });\n      return values;\n    }\n  }, {\n    key: \"hasUserInput\",\n    value: function hasUserInput() {\n      this.getSelected();\n\n      if (this.selected.length >= 1) {\n        return this.userInput = true;\n      } else {\n        return this.userInput = false;\n      }\n    }\n  }, {\n    key: \"getSelected\",\n    value: function getSelected() {\n      var _this8 = this;\n\n      this.selected = [];\n      this.inputElements.forEach(function (checkbox) {\n        if (checkbox.checked) {\n          _this8.selected.push(checkbox);\n\n          _this8.selectedOptions.push(checkbox.getAttribute(\"value\"));\n        }\n      });\n      return this.selected;\n    }\n    /**\n     *\n     *  This function creates a group of checkbox input elements with all the individual mark-up and some individualization options for usage in e.g. modals\n     *\n     * @param classNames {string[]} Contains classes to be applied to the container element (these classes also control input validation for text input fields. See concrete text input creation function for further details)\n     * @param name {string} Sets the name attribute on the input element for identification in general\n     * @param options {object[]} This is an array of objects with the properties \"text\" (string), \"value\" (string), \"checked\" (boolean) and optional \"disabled\" (boolean) for the different options of checkboxes and radio buttons\n     * @returns {object}\n     */\n\n  }], [{\n    key: \"createInput\",\n    value: function createInput(classNames, name, options) {\n      var group = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"checkbox-group\", \"input-container\"].concat(classNames));\n      options.forEach(function (option) {\n        if (!option[\"value\"]) {\n          option[\"value\"] = option[\"text\"];\n        }\n\n        var label = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"label\", [\"checkbox-input-container\"]);\n        label.appendChild(document.createTextNode(option[\"text\"]));\n        var input = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"input\");\n        input.setAttribute(\"type\", \"checkbox\");\n        input.setAttribute(\"value\", option[\"value\"]);\n        input.setAttribute(\"name\", name);\n\n        if (option.hasOwnProperty(\"checked\") && option[\"checked\"]) {\n          input.setAttribute(\"checked\", \"checked\");\n        }\n\n        if (option.hasOwnProperty(\"disabled\") && option[\"disabled\"]) {\n          label.classList.add(\"disabled\");\n          input.setAttribute(\"disabled\", \"disabled\");\n        }\n\n        label.appendChild(input);\n        label.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"checkmark\"]));\n        group.appendChild(label);\n      });\n      var newCheckboxes = new Checkboxes(group);\n      inputs.push(newCheckboxes);\n      return newCheckboxes;\n    }\n  }]);\n\n  return Checkboxes;\n}(Input);\n/**\n * This class handles text input specific behaviour\n */\n\n\nvar TextInput = /*#__PURE__*/function (_Input6) {\n  _inherits(TextInput, _Input6);\n\n  var _super6 = _createSuper(TextInput);\n\n  function TextInput(inputContainer) {\n    var _this9;\n\n    _classCallCheck(this, TextInput);\n\n    _this9 = _super6.call(this, inputContainer);\n    _this9.inputElement = inputContainer.querySelector(\"input\");\n    _this9.name = _this9.inputElement.getAttribute(\"name\");\n    _this9.inputValidation = {};\n\n    _this9.updateInputValidation();\n\n    _this9.hasUserInput();\n\n    _this9.inputContainer.addEventListener(\"input\", _this9.handleChangeInput.bind(_assertThisInitialized(_this9)));\n\n    if (_this9.inputContainer.classList.contains(\"password\")) {\n      _this9.passwordLabel = _this9.inputContainer.querySelector(\".icon\");\n      _this9.passwordIcon = _this9.passwordLabel.querySelector(\"i\");\n\n      _this9.passwordLabel.addEventListener(\"click\", _this9.handlePasswordBehavior.bind(_assertThisInitialized(_this9)));\n    }\n\n    return _this9;\n  }\n\n  _createClass(TextInput, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return this.inputElement.value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(newInput) {\n      this.inputElement.value = newInput;\n      this.handleChangeInput();\n    }\n  }, {\n    key: \"updateInputValidation\",\n    value: function updateInputValidation() {\n      this.revokeAllInputErrors();\n      this.inputValidation = {};\n\n      if (this.inputContainer.classList.contains(\"text-input-container\")) {\n        // E-Mail text input field validation\n        if (this.inputContainer.classList.contains(\"mail\") || this.inputContainer.classList.contains(\"email\") || this.inputContainer.classList.contains(\"e-mail\")) {\n          this.inputValidation.mail = {};\n          this.inputValidation.mail.regex = /^(?:[\\w\\.\\-]{2,})(?:\\@)(?:[\\w\\.\\-]{2,})(?:\\.)(?:[\\w]{2,})$/;\n          this.inputValidation.mail.error = errorTypes.EMAIL;\n        }\n\n        if (this.inputContainer.classList.contains(\"password-check\")) {\n          this.inputValidation.password = {};\n          this.inputValidation.password.regex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/;\n          this.inputValidation.password.error = errorTypes.PASSWORD;\n        }\n      }\n    }\n  }, {\n    key: \"handleChangeInput\",\n    value: function handleChangeInput(e) {\n      if (typeof e === \"undefined\" || e.isTrusted) {\n        _get(_getPrototypeOf(TextInput.prototype), \"handleChangeInput\", this).call(this);\n\n        this.validateInput();\n        this.hasUserInput();\n      }\n    }\n  }, {\n    key: \"hasUserInput\",\n    value: function hasUserInput() {\n      if (this.inputElement.value) {\n        this.inputElement.classList.add(\"filled\");\n        this.userInput = true;\n      } else {\n        this.inputElement.classList.remove(\"filled\");\n        this.userInput = false;\n      }\n\n      return _get(_getPrototypeOf(TextInput.prototype), \"hasUserInput\", this).call(this);\n    }\n  }, {\n    key: \"validateInput\",\n    value: function validateInput() {\n      for (var property in this.inputValidation) {\n        if (this.inputValidation.hasOwnProperty(property)) {\n          if (this.inputValidation[property].regex.test(String(this.inputElement.value))) {\n            this.revokeInputError(this.inputValidation[property].error);\n          } else {\n            this.throwInputError(this.inputValidation[property].error);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handlePasswordBehavior\",\n    value: function handlePasswordBehavior() {\n      this.inputContainer.focus();\n\n      if (this.inputElement.type === \"password\") {\n        this.passwordIcon.innerHTML = \"lock_open\";\n        this.inputElement.type = \"text\";\n      } else {\n        this.passwordIcon.innerHTML = \"lock\";\n        this.inputElement.type = \"password\";\n      }\n    }\n    /**\n     *\n     *  This function creates a text input element with all the individual mark-up and some individualization options for usage in e.g. modals\n     *\n     * @param classNames {string[]} Contains classes to be applied to the container element (these classes also control input validation for text input fields. See concrete text input creation function for further details)\n     * @param inputId {string} Optional: Sets the id for the input (if none set then a random id is generated to make the labels work)\n     * @param name {string} Sets the name attribute on the input element for identification in general\n     * @param placeholder {string} Either sets the placeholder value for almost all input types or sets the text which accompanies the switch, checkbox or radio button\n     * @param value {string} Optional: Sets the value of this input field\n     * @returns {object}\n     */\n\n  }], [{\n    key: \"createInput\",\n    value: function createInput(classNames, inputId, name, placeholder, value) {\n      var inputContainer = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"text-input-container\", \"input-container\"].concat(classNames));\n      var icon = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"label\", [\"icon\"]);\n      icon.setAttribute(\"for\", inputId);\n\n      if (classNames.includes(\"email\") || classNames.includes(\"e-mail\") || classNames.includes(\"mail\")) {\n        icon.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\"], \"email\"));\n      } else if (classNames.includes(\"password\")) {\n        icon.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\"], \"lock\"));\n      } else {\n        icon.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\"], \"person\"));\n      }\n\n      inputContainer.appendChild(icon);\n      var input = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"input\", [\"text-input\"]);\n\n      if (classNames.includes(\"password\")) {\n        input.setAttribute(\"type\", \"password\");\n      } else {\n        input.setAttribute(\"type\", \"text\");\n      }\n\n      input.setAttribute(\"id\", inputId);\n\n      if (name) {\n        input.setAttribute(\"name\", name);\n      }\n\n      inputContainer.appendChild(input);\n      var pLabel = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"label\", [\"text\"], placeholder);\n      pLabel.setAttribute(\"for\", inputId);\n      inputContainer.appendChild(pLabel);\n      inputContainer.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"underline\"]));\n      var newTextInput = new TextInput(inputContainer);\n      inputs.push(newTextInput);\n\n      if (value) {\n        newTextInput.setValue(value);\n      }\n\n      return newTextInput;\n    }\n  }]);\n\n  return TextInput;\n}(Input);\n/**\n * This class handles checkbox input (switch) specific behaviour\n */\n\n\nvar Switch = /*#__PURE__*/function (_Input7) {\n  _inherits(Switch, _Input7);\n\n  var _super7 = _createSuper(Switch);\n\n  function Switch(inputContainer) {\n    var _this10;\n\n    _classCallCheck(this, Switch);\n\n    _this10 = _super7.call(this, inputContainer);\n    _this10.inputElement = inputContainer.querySelector(\"input\");\n    _this10.name = _this10.inputElement.getAttribute(\"name\"); // Switches cannot be required!\n\n    _this10.required = false;\n    return _this10;\n  }\n\n  _createClass(Switch, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return this.inputElement.checked;\n    }\n  }, {\n    key: \"turnOn\",\n    value: function turnOn() {\n      this.inputElement.checked = true;\n      this.handleChangeInput();\n    }\n  }, {\n    key: \"turnOff\",\n    value: function turnOff() {\n      this.inputElement.checked = false;\n      this.handleChangeInput();\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.inputElement.checked) {\n        this.turnOff();\n      } else {\n        this.turnOn();\n      }\n    }\n    /**\n     *\n     *  This function creates input elements with all the individual mark-up and some individualization options for usage in e.g. modals\n     *\n     * @param classNames {string[]} Contains classes to be applied to the container element (these classes also control input validation for text input fields. See concrete text input creation function for further details)\n     * @param inputId {string} Optional: Sets the id for the input (if none set then a random id is generated to make the labels work)\n     * @param name {string} Sets the name attribute on the input element for identification in general\n     * @param text {string} Is the accompanying descriptive text\n     * @param value {string} Sets the value attribute\n     * @param checked {boolean} Optional: Determines if switch to be checked\n     * @returns {object}\n     */\n\n  }], [{\n    key: \"createInput\",\n    value: function createInput(classNames, inputId, name, text, value, checked) {\n      if (!value && text !== undefined) {\n        value = text;\n      }\n\n      var switchContainer = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"label\", [\"switch-container\", \"input-container\"].concat(classNames));\n      switchContainer.setAttribute(\"for\", inputId);\n      var input = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"input\", [\"switch-input\"]);\n      input.setAttribute(\"type\", \"checkbox\");\n      input.setAttribute(\"id\", inputId);\n      input.setAttribute(\"value\", value);\n\n      if (name) {\n        input.setAttribute(\"name\", name);\n      }\n\n      if (checked) {\n        input.setAttribute(\"checked\", \"checked\");\n      }\n\n      switchContainer.appendChild(input);\n      switchContainer.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"switch\"]));\n\n      if (text !== undefined) {\n        switchContainer.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"text\"], text));\n      }\n\n      var newSwitch = new Switch(switchContainer);\n      inputs.push(newSwitch);\n      return newSwitch;\n    }\n  }]);\n\n  return Switch;\n}(Input);\n/**\n * This class handles file input specific behaviour\n */\n\n\nvar FileInput = /*#__PURE__*/function (_Input8) {\n  _inherits(FileInput, _Input8);\n\n  var _super8 = _createSuper(FileInput);\n\n  function FileInput(inputContainer) {\n    var _this11;\n\n    _classCallCheck(this, FileInput);\n\n    _this11 = _super8.call(this, inputContainer);\n    _this11.inputElement = inputContainer.querySelector(\"input\");\n    _this11.name = _this11.inputElement.getAttribute(\"name\");\n    _this11.fileNameSpan = inputContainer.querySelector(\"span.file-name\");\n    _this11.placeholder = _this11.fileNameSpan.innerText;\n    return _this11;\n  }\n\n  _createClass(FileInput, [{\n    key: \"handleChangeInput\",\n    value: function handleChangeInput() {\n      _get(_getPrototypeOf(FileInput.prototype), \"handleChangeInput\", this).call(this);\n\n      if (this.inputElement) {\n        var fileName = undefined;\n\n        if (this.inputElement.files && this.inputElement.files.length > 1) {\n          fileName = this.inputElement.files.length + \" Dateien ausgewählt\";\n        } else {\n          fileName = this.inputElement.value.split(\"\\\\\").pop();\n        }\n\n        if (fileName) {\n          this.fileNameSpan.innerHTML = fileName;\n        } else {\n          this.fileNameSpan.innerHTML = this.placeholder;\n        }\n      }\n\n      if (!this.hasUserInput()) {\n        this.userInput = true;\n      }\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.inputElement.value;\n    }\n    /**\n     *\n     *  This function creates input elements with all the individual mark-up and some individualization options for usage in e.g. modals\n     *\n     * @param classNames {string[]} Contains classes to be applied to the container element (these classes also control input validation for text input fields. See concrete text input creation function for further details)\n     * @param inputId {string} Optional: Sets the id for the input (if none set then a random id is generated to make the labels work)\n     * @param name {string} Sets the name attribute on the input element for identification in general\n     * @returns {object}\n     */\n\n  }], [{\n    key: \"createInput\",\n    value: function createInput(classNames, inputId, name) {\n      var fileContainer = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"label\", [\"file-input-container\", \"input-container\"].concat(classNames));\n      fileContainer.setAttribute(\"for\", inputId);\n      var input = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"input\", [\"file-input\"]);\n      input.setAttribute(\"type\", \"file\");\n      input.setAttribute(\"id\", inputId);\n\n      if (name) {\n        input.setAttribute(\"name\", name);\n      }\n\n      input.setAttribute(\"multiple\", \"multiple\");\n      fileContainer.appendChild(input);\n      fileContainer.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\"], \"publish\"));\n      fileContainer.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"file-name\"], \"Datei auswählen...\"));\n      var newFileInput = new FileInput(fileContainer);\n      inputs.push(newFileInput);\n      return newFileInput;\n    }\n  }]);\n\n  return FileInput;\n}(Input);\n/**\n * This class handles textarea specific behaviour\n */\n\n\nvar Textarea = /*#__PURE__*/function (_Input9) {\n  _inherits(Textarea, _Input9);\n\n  var _super9 = _createSuper(Textarea);\n\n  function Textarea(inputContainer) {\n    var _this12;\n\n    _classCallCheck(this, Textarea);\n\n    _this12 = _super9.call(this, inputContainer);\n    _this12.name = _this12.inputContainer.getAttribute(\"name\");\n    return _this12;\n  }\n\n  _createClass(Textarea, [{\n    key: \"hasUserInput\",\n    value: function hasUserInput() {\n      if (this.inputContainer.value) {\n        this.inputContainer.classList.add(\"filled\");\n        this.userInput = true;\n      } else {\n        this.inputContainer.classList.remove(\"filled\");\n        this.userInput = false;\n      }\n\n      return this.userInput;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.inputContainer.value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(newInput) {\n      this.inputContainer.value = newInput;\n      this.handleChangeInput();\n    }\n    /**\n     *\n     *  This function creates input elements with all the individual mark-up and some individualization options for usage in e.g. modals\n     *\n     * @param classNames {string[]} Contains classes to be applied to the container element (these classes also control input validation for text input fields. See concrete text input creation function for further details)\n     * @param inputId {string} Optional: Sets the id for the input (if none set then a random id is generated to make the labels work)\n     * @param name {string} Sets the name attribute on the input element for identification in general\n     * @param placeholder {string} Either sets the placeholder value for almost all input types or sets the text which accompanies the switch, checkbox or radio button\n     * @param value {string} Optional: Sets the value if this textarea\n     * @returns {object}\n     */\n\n  }], [{\n    key: \"createInput\",\n    value: function createInput(classNames, inputId, name, placeholder, value) {\n      var textArea = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"textarea\", [\"textarea\", \"input-container\"].concat(classNames));\n\n      if (inputId) {\n        textArea.id = inputId;\n      }\n\n      if (name) {\n        textArea.setAttribute(\"name\", name);\n      }\n\n      if (placeholder) {\n        textArea.setAttribute(\"placeholder\", placeholder);\n      }\n\n      var newTextarea = new Textarea(textArea);\n      inputs.push(newTextarea);\n\n      if (value) {\n        newTextarea.setValue(value);\n      }\n\n      return newTextarea;\n    }\n  }]);\n\n  return Textarea;\n}(Input);\n\nvar RangeInput = /*#__PURE__*/function (_Input10) {\n  _inherits(RangeInput, _Input10);\n\n  var _super10 = _createSuper(RangeInput);\n\n  function RangeInput(inputContainer) {\n    var _this13;\n\n    _classCallCheck(this, RangeInput);\n\n    _this13 = _super10.call(this, inputContainer);\n    _this13.name = _this13.inputContainer.getAttribute(\"name\");\n    _this13.input = _this13.inputContainer.querySelector(\"input\");\n    _this13.initialValue = _this13.input.value;\n    _this13.rangeValueSpan = _this13.inputContainer.querySelector(\"span.range-value\");\n\n    _this13.input.addEventListener(\"input\", _this13.handleChangeInput.bind(_assertThisInitialized(_this13)));\n\n    _this13.rangeValueSpan.innerHTML = _this13.getValue();\n    return _this13;\n  }\n\n  _createClass(RangeInput, [{\n    key: \"handleChangeInput\",\n    value: function handleChangeInput() {\n      _get(_getPrototypeOf(RangeInput.prototype), \"handleChangeInput\", this).call(this);\n\n      this.rangeValueSpan.innerHTML = this.getValue();\n    }\n  }, {\n    key: \"hasUserInput\",\n    value: function hasUserInput() {\n      return this.userInput = this.input.value !== this.initialValue;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.input.value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(newValue) {\n      if (newValue && newValue >= this.getMin() && newValue <= this.getMax()) {\n        this.input.value = newValue;\n        this.rangeValueSpan.innerHTML = newValue + \"\";\n      }\n    }\n  }, {\n    key: \"setMin\",\n    value: function setMin(min) {\n      this.input.min = min + \"\";\n    }\n  }, {\n    key: \"getMin\",\n    value: function getMin() {\n      return parseInt(this.input.min ? this.input.min : \"0\");\n    }\n  }, {\n    key: \"setMax\",\n    value: function setMax(max) {\n      this.input.max = max + \"\";\n    }\n  }, {\n    key: \"getMax\",\n    value: function getMax() {\n      return parseInt(this.input.max ? this.input.max : \"100\");\n    }\n  }, {\n    key: \"setStep\",\n    value: function setStep(step) {\n      if (step && step <= this.getMax() - this.getMin()) {\n        this.input.step = step + \"\";\n      }\n    }\n    /**\n     * This function creates a new range input object and returns it\n     * @param classes {string[]} The class names that should be added to the input-container\n     * @param id {string} The id to connect the label to the input element\n     * @param name {string} The value of the name attribute\n     * @param text {string} Sets the content of the label which accompanies the input\n     * @param initialValue {number} Sets the initial value of the input element\n     * @return {RangeInput}\n     */\n\n  }], [{\n    key: \"createInput\",\n    value: function createInput(classes, id, name, text, initialValue) {\n      var container = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"range-input-container\", \"input-container\"].concat(classes));\n      var label = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"label\", [\"range-label\"], text + \" \", {\n        \"for\": id\n      });\n      label.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"range-value\"], initialValue ? initialValue + \"\" : \"0\"));\n      container.appendChild(label);\n      container.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"input\", [\"range-input\"], undefined, {\n        \"id\": id,\n        \"type\": \"range\",\n        \"name\": name,\n        \"value\": initialValue\n      }));\n      var newRangeInput = new RangeInput(container);\n      inputs.push(newRangeInput);\n      return newRangeInput;\n    }\n  }]);\n\n  return RangeInput;\n}(Input);\n/**\n * This block initializes static input elements of a website\n */\n\n\nif (document.querySelector(\".input-container\")) {\n  var textInputs = document.querySelectorAll(\".text-input-container\");\n  var switches = document.querySelectorAll(\".switch-container\");\n  var radioButtons = document.querySelectorAll(\".radio-group\");\n  var checkboxes = document.querySelectorAll(\".checkbox-group\");\n  var selects = document.querySelectorAll(\".select-input-container\");\n  var dateInputs = document.querySelectorAll(\".date-input-container\");\n  var timeInputs = document.querySelectorAll(\".time-input-container\");\n  var fileInputs = document.querySelectorAll(\".file-input-container\");\n  var textareas = document.querySelectorAll(\".textarea\");\n  var rangeInputs = document.querySelectorAll(\".range-input-container\");\n  textInputs.forEach(function (tI) {\n    inputs.push(new TextInput(tI));\n  });\n  switches.forEach(function (sw) {\n    inputs.push(new Switch(sw));\n  });\n  radioButtons.forEach(function (r) {\n    inputs.push(new RadioButtons(r));\n  });\n  checkboxes.forEach(function (c) {\n    inputs.push(new Checkboxes(c));\n  });\n  selects.forEach(function (se) {\n    inputs.push(new Select(se));\n  });\n  dateInputs.forEach(function (dI) {\n    inputs.push(new DateInput(dI));\n  });\n  timeInputs.forEach(function (tI) {\n    inputs.push(new TimeInput(tI));\n  });\n  fileInputs.forEach(function (fI) {\n    inputs.push(new FileInput(fI));\n  });\n  textareas.forEach(function (t) {\n    inputs.push(new Textarea(t));\n  });\n  rangeInputs.forEach(function (r) {\n    inputs.push(new RangeInput(r));\n  });\n}\n\nvar removedQuickInput = true;\nvar globalQuickInput = undefined;\n/**\n * This function creates a single input element that can be used inline to quickly change data on the fly\n * @param width {Number} The width of the inline-block) element this input will quickly and briefly replace\n * @param value {string} The value that this input should have\n * @param callback {function} The function is called when this input element is exited and the value of this input element is given as a parameter\n * @param insertBefore {HTMLElement} The element before which the quick input should be inserted\n * @param inputValidation {function} This optional function checks the content of the quick input\n * @return {HTMLElement}\n */\n\nfunction createQuickTextInput(width, value, callback, insertBefore, inputValidation) {\n  removedQuickInput = false;\n  var quickInput = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"INPUT\", [\"quick-input\"]);\n  quickInput.value = value;\n  quickInput.style.width = width + 50 + \"px\";\n  quickInput.addEventListener(\"focusout\", function () {\n    terminateQuickInput(callback, inputValidation);\n  });\n  insertBefore.parentElement.insertBefore(quickInput, insertBefore);\n  quickInput.focus();\n  quickInput.addEventListener(\"keydown\", function (e) {\n    var keyCode = e.which || e.keyCode;\n\n    if (keyCode === 13) {\n      terminateQuickInput(callback, inputValidation);\n    }\n  });\n  globalQuickInput = quickInput;\n  return quickInput;\n}\n/**\n * This function terminates a \"quick\" input element (e.g. when the user unfocuses the input) and returns the value of it to the callback function\n * @param callback {function} The function that is called and given the value of this quick input after terminating it\n * @param inputValidation {function} This optional function checks the content of the quick input\n */\n\n\nfunction terminateQuickInput(callback, inputValidation) {\n  if (!removedQuickInput) {\n    var value = globalQuickInput.value.trim();\n\n    if (value === \"\") {\n      globalQuickInput.focus();\n      return;\n    }\n\n    if (inputValidation && typeof inputValidation == \"function\" && !inputValidation(value)) {\n      globalQuickInput.focus();\n      return;\n    }\n\n    removedQuickInput = true;\n    globalQuickInput.remove();\n    globalQuickInput = undefined;\n    callback(value);\n  }\n}\n/**\n * This function creates an input element and the responsible object and returns the object\n * @param inputType {string} The inputType that should be created\n * @param classNames {string[]} Contains classes to be applied to the container element (these classes also control input validation for text input fields. See concrete text input creation function for further details)\n * @param inputId {string} Optional: Sets the id for the input (if none set then a random id is generated to make the labels work)\n * @param name {string} Sets the name attribute on the input element for identification in general\n * @param placeholder {string} Either sets the placeholder value for almost all input types or sets the text which accompanies the switch or range\n * @param value {string} Sets either the value attribute of switches or the value of text inputs, textareas or range inputs\n * @param checked {boolean} Optional: Determines if switch to be checked\n * @param options {string[] || object[]} This should be an array of strings to determine the different options for the select or this is an array of objects with the properties \"text\" (string), \"value\" (string), \"checked\" (boolean) and optional \"disabled\" (boolean) for the different options of checkboxes and radio buttons\n * @return {TextInput|Switch|Checkboxes|RadioButtons|Select|DateInput|TimeInput|FileInput|Textarea|RangeInput}\n */\n\n\nfunction createInput(inputType, classNames, inputId, name, placeholder, value, checked, options) {\n  return Input.createInputFactory(inputType, classNames, inputId, name, placeholder, value, checked, options);\n}\n/**\n * This function returns the responsible input object to a given input container element\n * @param inputContainer {HTMLElement} The input container element of which the responsible object is required\n * @return {object}\n */\n\n\nfunction getInputObject(inputContainer) {\n  return Input.getInputObject(inputContainer);\n}\n/**\n * This function compares two given dates (in the format of: dd.mm.yyyy) and returns true if the first date is smaller (earlier) than the second date\n * @param date1 {string}\n * @param date2 {string}\n * @return {boolean}\n */\n\n\nfunction compareDates(date1, date2) {\n  return DateInput.compareDates(date1, date2);\n}\n/**\n * This function compares two given times (in the format of: hh:mm) and returns true if the first time is smaller (earlier) than the second time\n * @param time1 {string}\n * @param time2 {string}\n * @return {boolean}\n */\n\n\nfunction compareTimes(time1, time2) {\n  return TimeInput.compareTimes(time1, time2);\n}\n/**\n * API:\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/MaterialInputsModule.js?");

/***/ }),

/***/ "./resources/js/Modules/ModalModule.js":
/*!*********************************************!*\
  !*** ./resources/js/Modules/ModalModule.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deleteModal\": () => (/* binding */ deleteModal),\n/* harmony export */   \"confirmModal\": () => (/* binding */ confirmModal),\n/* harmony export */   \"infoModal\": () => (/* binding */ infoModal),\n/* harmony export */   \"customModal\": () => (/* binding */ customModal),\n/* harmony export */   \"appendOverlay\": () => (/* binding */ appendOverlay),\n/* harmony export */   \"removeOverlay\": () => (/* binding */ removeOverlay)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/* harmony import */ var _SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SecondaryButtonModule */ \"./resources/js/Modules/SecondaryButtonModule.js\");\n/* harmony import */ var _TiltModule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TiltModule */ \"./resources/js/Modules/TiltModule.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * DEPENDENCIES\n */\n\n\n\n/**\n * This Module contains code responsible for managing modal windows\n */\n\nvar modalTypes = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.modalTypes;\nvar body = document.querySelector(\"body\");\nvar main = document.querySelector(\"main\");\nvar modalWindows = [];\n/**\n * This custom event fires when a modal is opened\n * @type {CustomEvent<unknown>}\n */\n\nvar openModalEvent = new CustomEvent(\"openModal\", {\n  bubbles: true,\n  cancelable: true\n});\n/**\n * This custom event fires when a modal is closed\n * @type {CustomEvent<unknown>}\n */\n\nvar closeModalEvent = new CustomEvent(\"closeModal\", {\n  bubbles: true,\n  cancelable: true\n});\n\nvar ModalWindow = function ModalWindow(modalType, header, content, confirmationCallback, abortionCallback, confirmationCheck) {\n  var This = this;\n  this.modalType = modalType;\n  this.overlay = ModalWindow.createModalWindow(modalType, header, content);\n  this.modalWindowElement = this.overlay.querySelector(\"div.modal-window\");\n  this.mwHeader = this.modalWindowElement.querySelector(\".mw-header\");\n  this.confirmationCallbackButton = this.modalWindowElement.querySelector(\".secondary-button.confirmation-callback-button\");\n  this.abortionCallbackButton = this.modalWindowElement.querySelector(\".secondary-button.abortion-callback-button\");\n  this.closeButton = this.modalWindowElement.querySelector(\".primary-button.close-modal\");\n  this.closeButton.addEventListener(\"click\", function () {\n    if (This.modalType === modalTypes.INFO) {\n      This.confirm();\n    } else {\n      This.abort();\n    }\n  });\n\n  if (this.confirmationCallbackButton) {\n    this.confirmationCallbackButton.addEventListener(\"click\", function () {\n      This.confirm();\n    });\n  }\n\n  if (this.abortionCallbackButton) {\n    this.abortionCallbackButton.addEventListener(\"click\", function () {\n      This.abort();\n    });\n  }\n  /**\n   * This function closes a modal window\n   */\n\n\n  this.closeModal = function () {\n    if (This.mwHeader) {\n      This.mwHeader.style.removeProperty(\"height\");\n    }\n\n    This.modalWindowElement.dispatchEvent(closeModalEvent);\n    This.overlay.classList.remove(\"open\");\n\n    if (main) {\n      main.classList.remove(\"blur\");\n    }\n\n    window.setTimeout(function () {\n      This.overlay.remove();\n      removeModal(This);\n    }, 1000);\n  };\n  /**\n   * This function opens a modal window\n   */\n\n\n  this.showModal = function () {\n    if (main) {\n      main.classList.add(\"blur\");\n    }\n\n    body.appendChild(This.overlay);\n    This.modalWindowElement.dispatchEvent(openModalEvent); // the document needs this little time offset to apply animations\n\n    window.setTimeout(function () {\n      This.overlay.classList.add(\"open\");\n    }, 5); //after opening the modal window wait 1s to resize the header\n\n    window.setTimeout(function () {\n      This.resizeHeader();\n    }, 1000);\n  };\n\n  this.showModal();\n  /**\n   * This function resizes the header of a modal window\n   */\n\n  this.resizeHeader = function () {\n    var h2 = This.mwHeader.querySelector(\"h2\");\n    var headerHeight = h2.offsetHeight;\n    This.mwHeader.style.height = headerHeight + \"px\";\n  };\n\n  this.confirm = function () {\n    if (confirmationCheck && typeof confirmationCheck === \"function\") {\n      if (confirmationCheck()) {\n        This.closeModal();\n\n        if (confirmationCallback && typeof confirmationCallback === \"function\") {\n          confirmationCallback();\n        }\n      }\n    } else {\n      This.closeModal();\n\n      if (confirmationCallback && typeof confirmationCallback === \"function\") {\n        confirmationCallback();\n      }\n    }\n  };\n\n  this.abort = function () {\n    This.closeModal();\n\n    if (abortionCallback && typeof abortionCallback === \"function\") {\n      abortionCallback();\n    }\n  };\n};\n/**\n * This function creates a modal window element\n * @param modalType {string} Determines which modal window should be created\n * @param header {string} Sets the heading of the modal window\n * @param content {string || HTMLElement} Sets the content of the element which is either plain text or an HTML element for more complex usages\n */\n\n\nModalWindow.createModalWindow = function (modalType, header, content) {\n  var overlay = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"overlay\"]);\n  var baseModal;\n\n  switch (modalType) {\n    case modalTypes.DELETE:\n      baseModal = createBaseModal(overlay, header, content);\n      var deleteModalFooter = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"mw-footer\"]);\n      var abortDeletionBtn = (0,_SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_1__.createSecondaryButton)([\"abort\", \"abortion-callback-button\"], undefined, \"Abbrechen\");\n      deleteModalFooter.appendChild(abortDeletionBtn);\n      var deleteBtn = (0,_SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_1__.createSecondaryButton)([\"delete\", \"confirmation-callback-button\"], undefined, \"Löschen\");\n      deleteModalFooter.appendChild(deleteBtn);\n      baseModal.querySelector(\".mw-body\").appendChild(deleteModalFooter);\n      overlay.appendChild(baseModal);\n      break;\n\n    case modalTypes.CONFIRM:\n      baseModal = createBaseModal(overlay, header, content);\n      var confirmModalFooter = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"mw-footer\"]);\n      var abortConfirmationBtn = (0,_SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_1__.createSecondaryButton)([\"abort\", \"accent-1\", \"abortion-callback-button\"], undefined, \"Abbrechen\");\n      confirmModalFooter.appendChild(abortConfirmationBtn);\n      var confirmBtn = (0,_SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_1__.createSecondaryButton)([\"confirm\", \"confirmation-callback-button\"], undefined, \"OK\");\n      confirmModalFooter.appendChild(confirmBtn);\n      baseModal.querySelector(\".mw-body\").appendChild(confirmModalFooter);\n      overlay.appendChild(baseModal);\n      break;\n\n    case modalTypes.INFO:\n      baseModal = createBaseModal(overlay, header, content);\n      overlay.appendChild(baseModal);\n      var infoModalFooter = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"mw-footer\"]);\n      var infoModalBtn = (0,_SecondaryButtonModule__WEBPACK_IMPORTED_MODULE_1__.createSecondaryButton)([\"confirm\", \"confirmation-callback-button\"], undefined, \"OK\");\n      infoModalFooter.appendChild(infoModalBtn);\n      baseModal.querySelector(\".mw-body\").appendChild(infoModalFooter);\n      break;\n\n    case modalTypes.CUSTOM:\n      baseModal = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"modal-window\", \"custom-modal-window\"]);\n      overlay.appendChild(baseModal);\n      var closeBtn = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"a\", [\"primary-button\", \"close-modal\", \"close\", \"red\"]);\n      closeBtn.appendChild((0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"i\", [\"material-icons\"], \"close\"));\n      closeBtn.appendChild((0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"p\", [], \"Schließen\"));\n      baseModal.querySelector(\".mw-body\").appendChild(closeBtn);\n\n      if (content) {\n        baseModal.appendChild(content);\n      }\n\n      break;\n  }\n\n  return overlay;\n};\n/**\n * This event listener is registered to detect the resize of the window\n */\n\n\nwindow.addEventListener(\"resize\", function () {\n  modalWindows.forEach(function (modal) {\n    modal.resizeHeader();\n  });\n});\n/**\n * This function creates the base modal same for all types of modals (header, close button, content container)\n * @param overlay {HTMLElement} The overlay to which the modal window should be appended\n * @param header {string} The heading of the modal window\n * @param content {string || HTMLElement} Sets the content of the element which is either plain text or an HTML element for more complex usages\n * @return {HTMLElement}\n */\n\nfunction createBaseModal(overlay, header, content) {\n  var modal = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"modal-window\"]);\n  var closeBtn = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"a\", [\"primary-button\", \"close-modal\", \"close\", \"red\"]);\n  closeBtn.appendChild((0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"i\", [\"material-icons\"], \"close\"));\n  closeBtn.appendChild((0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"p\", [], \"Schließen\"));\n  modal.appendChild(closeBtn);\n  var modalHeader = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"mw-header\"]);\n  modalHeader.appendChild((0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"h2\", [], header));\n  modal.appendChild(modalHeader);\n  var modalBody = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"mw-body\"]);\n  var modalContent = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"mw-content\"]);\n\n  if (isElement(content)) {\n    modalContent.appendChild(content); // workaround to display single (or two) select(s) without scroll bars\n\n    if (content.classList.contains(\"select-input-container\")) {\n      modalContent.style.overflowY = \"unset\";\n    }\n  } else {\n    modalContent.appendChild((0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"p\", [], content));\n  }\n\n  modalBody.appendChild(modalContent);\n  modal.appendChild(modalBody);\n  return modal;\n} // see https://stackoverflow.com/questions/384286/how-do-you-check-if-a-javascript-object-is-a-dom-object for further information\n\n\nfunction isElement(o) {\n  return (typeof HTMLElement === \"undefined\" ? \"undefined\" : _typeof(HTMLElement)) === \"object\" ? o instanceof HTMLElement : o && _typeof(o) === \"object\" && true && o.nodeType === 1 && typeof o.nodeName === \"string\";\n}\n\nvar overlay = undefined;\n/**\n * This function appends a generic overlay to the body element\n */\n\nfunction appendOverlay() {\n  if (!overlay) {\n    overlay = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"just-overlay\"]);\n  }\n\n  body.appendChild(overlay);\n  window.setTimeout(function () {\n    overlay.classList.add(\"open\");\n  }, 5);\n}\n/**\n * This function removes a generic overlay from the body element\n */\n\n\nfunction removeOverlay() {\n  var overlay = document.querySelector(\".just-overlay\");\n  overlay.classList.remove(\"open\");\n  window.setTimeout(function () {\n    overlay.remove();\n  }, 1000);\n}\n/**\n * This function removes a modal from the modalWindows array\n */\n\n\nfunction removeModal(removeModal) {\n  modalWindows.splice(modalWindows.indexOf(removeModal), 1);\n  removeModal = undefined;\n}\n/**\n * This function creates and shows a delete modal window\n * @param header {string} Sets the heading of the modal window\n * @param content {string || HTMLElement} Sets the content of the element which is either plain text or an HTML element for more complex usages\n * @param deleteCallback {function} An optional function reference called when the modal window is \"successfully\" closed (e.g. delete modal was closed by clicking on \"delete\")\n * @param abortCallback {function} An optional function reference called when the modal window is \"unsuccessfully\" closed (e.g. delete modal was closed by clicking on \"cancel\")\n * @param confirmationCheck {function} An optional function reference called when the modal window is tried to be closed \"successfully\" and checks if the modal window is allowed to close \"successfully\" (e.g. check if all inputs are filled)\n */\n\n\nfunction deleteModal(header, content, deleteCallback, abortCallback, confirmationCheck) {\n  var newModal = new ModalWindow(modalTypes.DELETE, header, content, deleteCallback, abortCallback, confirmationCheck);\n  modalWindows.push(newModal);\n  return newModal;\n}\n/**\n * This function creates and show a confirmation modal window\n * @param header {string} Sets the heading of the modal window\n * @param content {string || HTMLElement} Sets the content of the element which is either plain text or an HTML element for more complex usages\n * @param confirmCallback {function} An optional function reference called when the modal window is \"successfully\" closed (e.g. delete modal was closed by clicking on \"delete\")\n * @param abortCallback {function} An optional function reference called when the modal window is \"unsuccessfully\" closed (e.g. delete modal was closed by clicking on \"cancel\")\n * @param confirmationCheck {function} An optional function reference called when the modal window is tried to be closed \"successfully\" and checks if the modal window is allowed to close \"successfully\" (e.g. check if all inputs are filled)\n */\n\n\nfunction confirmModal(header, content, confirmCallback, abortCallback, confirmationCheck) {\n  var newModal = new ModalWindow(modalTypes.CONFIRM, header, content, confirmCallback, abortCallback, confirmationCheck);\n  modalWindows.push(newModal);\n  return newModal;\n}\n/**\n * This function creates and shows an info modal window\n * @param header {string} Sets the heading of the modal window\n * @param content {string || HTMLElement} Sets the content of the element which is either plain text or an HTML element for more complex usages\n * @param callback {function} An optional function reference called when the modal window is \"successfully\" closed (the user clicked on \"OK\")\n */\n\n\nfunction infoModal(header, content, callback) {\n  var newModal = new ModalWindow(modalTypes.INFO, header, content, callback, undefined, undefined);\n  modalWindows.push(newModal);\n  return newModal;\n}\n/**\n * This function enables other Modules to create a custom modal window (this is basically just a big modal without any content yet except for a close button)\n * @param content {HTMLElement} The content that should be appended on this modal\n * @param abortCallback {function} An optional function reference called when the modal window is \"unsuccessfully\" closed (in this case the user clicked on the modal window close button)\n */\n\n\nfunction customModal(content, abortCallback) {\n  var newModal = new ModalWindow(modalTypes.CUSTOM, undefined, content, undefined, abortCallback, undefined);\n  modalWindows.push(newModal);\n  return newModal;\n}\n/**\n * API:\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/ModalModule.js?");

/***/ }),

/***/ "./resources/js/Modules/NavModule.js":
/*!*******************************************!*\
  !*** ./resources/js/Modules/NavModule.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"openNav\": () => (/* binding */ openNav)\n/* harmony export */ });\n/* harmony import */ var _HeaderModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HeaderModule */ \"./resources/js/Modules/HeaderModule.js\");\n/**\r\n * DEPENDENCIES\r\n */\n\n/**\r\n * This Module contains code responsible for managing the navigation element of the websites\r\n */\n\nvar navObject = undefined;\n\nvar Nav = function Nav(navElement) {\n  var This = this;\n  this.navElement = navElement;\n  this.closeBtn = this.navElement.querySelector(\".primary-button.close\");\n  this.navBgText = this.navElement.querySelector(\".bg-text\");\n  /**\r\n   * This function listens for clicks on the close button to close the navigation\r\n   */\n\n  this.closeBtn.addEventListener(\"click\", function () {\n    This.navElement.classList.remove(\"open\");\n    This.navElement.removeEventListener(\"mousemove\", This.showBgText);\n    (0,_HeaderModule__WEBPACK_IMPORTED_MODULE_0__.closeHeader)();\n  });\n  /**\r\n   * This function handles the display of the ambient background text\r\n   * @param e {Event} The event object\r\n   */\n\n  this.showBgText = function (e) {\n    var target = e.target;\n\n    while (target.nodeName !== \"A\" && target.nodeName !== \"BODY\") {\n      target = target.parentNode;\n    }\n\n    if (target.nodeName === \"BODY\") {\n      This.navBgText.innerHTML = \"\";\n      return;\n    }\n\n    var text = target.innerText.trim();\n\n    if (text.toLowerCase().indexOf(\"schließen\") === -1) {\n      This.navBgText.innerHTML = text;\n    } else {\n      This.navBgText.innerHTML = \"\";\n    }\n  };\n  /**\r\n   * This function opens the navigation\r\n   */\n\n\n  this.openNav = function () {\n    this.navElement.classList.add(\"open\");\n    this.navElement.addEventListener(\"mousemove\", this.showBgText);\n  };\n};\n\nfunction openNav() {\n  navObject.openNav();\n}\n\nvar navElement = document.querySelector(\"nav.nav\");\n\nif (navElement) {\n  navObject = new Nav(navElement);\n}\n/**\r\n * API:\r\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/NavModule.js?");

/***/ }),

/***/ "./resources/js/Modules/NotificationModule.js":
/*!****************************************************!*\
  !*** ./resources/js/Modules/NotificationModule.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createNotification\": () => (/* binding */ createNotification)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/**\n * DEPENDENCIES\n */\n\n/**\n * This Module contains code responsible for managing application specific primary buttons\n */\n\nvar body = document.querySelector(\"body\");\nvar message = false;\nvar notificationTypes = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.notificationTypes;\n/**\n * This function creates a notification\n * @param type {string} This indicates the type of the notification to be created\n * @param content {string} The actual content to be displayed inside the notification\n * @return {HTMLElement}\n */\n\nfunction notificationFactory(type, content) {\n  var notification = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"notification\"]);\n\n  switch (type) {\n    case notificationTypes.INFO:\n      notification.classList.add(\"info\");\n      notification.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\", \"symbol\"], \"info\"));\n      break;\n\n    case notificationTypes.SUCCESS:\n      notification.classList.add(\"success\");\n      notification.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\", \"symbol\"], \"done\"));\n      break;\n\n    case notificationTypes.WARNING:\n      notification.classList.add(\"warning\");\n      notification.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\", \"symbol\"], \"warning\"));\n      break;\n\n    case notificationTypes.ERROR:\n      notification.classList.add(\"error\");\n      notification.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\", \"symbol\"], \"error_outline\"));\n      break;\n  }\n\n  notification.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"p\", [\"message\", \"no-scrollbar\"], content));\n  notification.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"i\", [\"material-icons\", \"close\"], \"close\"));\n  notification.querySelector(\".close\").addEventListener(\"click\", function () {\n    removeNotification(notification);\n  });\n  notification.addEventListener(\"mouseenter\", function () {\n    notification.style.animation = \"none\";\n  });\n  return notification;\n}\n/**\n * This function creates either a new message or a new notification (depending on the site the user is currently on)\n * @param type {string} This indicates the type of the notification to be created\n * @param content {string} The actual content to be displayed inside the notification\n * @param timestamp {string} Each message has a timestamp (when it has been created)\n * @param sender {string} Each message has a sender (where it has originated from)\n */\n\n\nfunction createNotification(type, content, timestamp, sender) {\n  var newNotification = notificationFactory(type, content);\n\n  if (!message) {\n    appendNotification(newNotification);\n  } else {\n    appendMessage(newNotification, timestamp, sender);\n  }\n}\n/**\n * This function appends a notification to the body and manages the displaying animation (any \"old\" notification will be removed)\n * @param notification {HTMLElement} The notification to be appended\n */\n\n\nfunction appendNotification(notification) {\n  if (document.querySelector(\"div.notification\")) {\n    var oldNotification = document.querySelector(\"div.notification\");\n    removeNotification(oldNotification);\n    body.appendChild(notification);\n    window.setTimeout(function () {\n      notification.classList.add(\"visible\");\n    }, 2100);\n  } else {\n    body.appendChild(notification);\n    window.setTimeout(function () {\n      notification.classList.add(\"visible\");\n    }, 100);\n  } // automatically remove error and success notifications\n\n\n  if (notification.classList.contains(\"success\") || notification.classList.contains(\"error\")) {\n    window.setTimeout(function () {\n      removeNotification(notification);\n    }, 10000);\n  }\n}\n/**\n * This function handles the detachment of a given notification\n * @param notification {HTMLElement} The notification to be detached\n */\n\n\nfunction removeNotification(notification) {\n  notification.classList.remove(\"visible\");\n  window.setTimeout(function () {\n    notification.remove();\n  }, 2000);\n}\n/**\n * This block contains code responsible for managing behavior special to only the messages page (in regard of new notification (new notifications there get appended as messages))\n */\n\n\nif (document.querySelector(\"div.message-container\")) {\n  /**\n   * This function appends a notification to the message container (only necessary when new notification appears when user is currently on messages site)\n   * @param notification {HTMLElement} The notification to be appended (as a new message)\n   * @param timestamp {string} Contains the information when the notification has been created (Format: dd.mm.yyyy hh:mm (because no further frontend processing needed))\n   * @param sender {string} Contains the information where the notification has been created (source)\n   */\n  var _appendMessage = function _appendMessage(notification, timestamp, sender) {\n    var message = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\", [\"message\", \"new\", \"unread\"]);\n    message.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"p\", [\"time\"], timestamp));\n    message.appendChild(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"p\", [\"sender\"], sender));\n    message.appendChild(notification);\n    var scrollDown = false;\n\n    if (messageContainer.clientHeight + messageContainer.scrollTop >= messageContainer.scrollHeight) {\n      scrollDown = true;\n    }\n\n    messageContainer.appendChild(message);\n    window.setTimeout(function () {\n      message.classList.remove(\"new\");\n    }, 1);\n\n    if (scrollDown) {\n      messageContainer.scrollTop = messageContainer.scrollHeight;\n      window.setTimeout(function () {\n        message.classList.remove(\"unread\");\n      }, 5000);\n    } else {\n      messageContainer.addEventListener(\"scroll\", function () {\n        handleScroll(message);\n      });\n    }\n  };\n  /**\n   * This function handles the correct and user comfortable display of new messages (new messages have a specific style -> once the user read the message this style is removed)\n   * @param message {HTMLElement} The new message element which gets its \"unread\" styles removed once scrolled into visibility\n   */\n\n\n  var handleScroll = function handleScroll(message) {\n    var messageOffset = message.offsetTop + message.offsetHeight;\n\n    if (messageContainer.clientHeight + messageContainer.scrollTop >= messageOffset) {\n      window.setTimeout(function () {\n        message.classList.remove(\"unread\");\n      }, 3000);\n      messageContainer.removeEventListener(\"scroll\", handleScroll);\n    }\n  };\n\n  message = true;\n  var messageContainer = document.querySelector(\"div.message-container\");\n  messageContainer.scrollTop = messageContainer.scrollHeight;\n}\n/**\n * API:\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/NotificationModule.js?");

/***/ }),

/***/ "./resources/js/Modules/PersonModule.js":
/*!**********************************************!*\
  !*** ./resources/js/Modules/PersonModule.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPersonFactory\": () => (/* binding */ createPersonFactory),\n/* harmony export */   \"getPersonById\": () => (/* binding */ getPersonById)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * DEPENDENCIES\r\n */\n\n/**\r\n * This Module contains code responsible for managing all different kinds of persons\r\n */\n\nvar personTypes = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.personTypes;\nvar persons = [];\nvar fighters = [];\nvar coaches = [];\nvar referees = [];\nvar helpers = [];\n/**\r\n * This class represents a generic person and offers individual methods for handling them\r\n */\n\nvar Person = /*#__PURE__*/function () {\n  function Person(personType, id, firstName, lastName, club) {\n    _classCallCheck(this, Person);\n\n    this.type = personType;\n    this.id = id;\n    this.lastName = lastName;\n    this.firstName = firstName;\n    this.fullName = this.firstName + \" \" + this.lastName;\n    this.club = club;\n    persons.push(this);\n  }\n\n  _createClass(Person, [{\n    key: \"toJsonString\",\n    value: function toJsonString() {}\n  }]);\n\n  return Person;\n}();\n/**\r\n * This class represents a fighter\r\n */\n\n\nvar Fighter = /*#__PURE__*/function (_Person) {\n  _inherits(Fighter, _Person);\n\n  var _super = _createSuper(Fighter);\n\n  function Fighter(personType, firstName, lastName, club, birthdate, sex, graduation) {\n    var _this;\n\n    _classCallCheck(this, Fighter);\n\n    _this = _super.call(this, personType, firstName, lastName, club);\n    _this.birthdate = birthdate;\n    _this.age = 0;\n    _this.sex = sex;\n    _this.graduation = graduation;\n    fighters.push(_assertThisInitialized(_this));\n\n    _this.calculateAge();\n\n    return _this;\n  }\n\n  _createClass(Fighter, [{\n    key: \"calculateAge\",\n    value: function calculateAge() {\n      var day = parseInt(this.birthdate.substring(0, this.birthdate.indexOf(\".\")));\n      var month = parseInt(this.birthdate.substring(this.birthdate.indexOf(\".\") + 1, this.birthdate.indexOf(\".\", this.birthdate.indexOf(\".\") + 1))) - 1;\n      var year = parseInt(this.birthdate.substring(this.birthdate.indexOf(\".\", this.birthdate.indexOf(\".\") + 1) + 1));\n      var birthDate = new Date().setFullYear(year, month, day);\n      var monthDiff = Date.now() - birthDate;\n      var newDate = new Date(monthDiff);\n      var ageYear = newDate.getUTCFullYear();\n      this.age = Math.abs(ageYear - 1970);\n    }\n  }]);\n\n  return Fighter;\n}(Person);\n/**\r\n * This class represents a coach\r\n */\n\n\nvar Coach = /*#__PURE__*/function (_Person2) {\n  _inherits(Coach, _Person2);\n\n  var _super2 = _createSuper(Coach);\n\n  function Coach(personType, firstName, lastName, club) {\n    var _this2;\n\n    _classCallCheck(this, Coach);\n\n    _this2 = _super2.call(this, personType, firstName, lastName, club);\n    coaches.push(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  return Coach;\n}(Person);\n/**\r\n * This class represents a referee\r\n */\n\n\nvar Referee = /*#__PURE__*/function (_Person3) {\n  _inherits(Referee, _Person3);\n\n  var _super3 = _createSuper(Referee);\n\n  function Referee(personType, firstName, lastName, club) {\n    var _this3;\n\n    _classCallCheck(this, Referee);\n\n    _this3 = _super3.call(this, personType, firstName, lastName, club);\n    referees.push(_assertThisInitialized(_this3));\n    return _this3;\n  }\n\n  return Referee;\n}(Person);\n/**\r\n * This class represents a helper\r\n */\n\n\nvar Helper = /*#__PURE__*/function (_Person4) {\n  _inherits(Helper, _Person4);\n\n  var _super4 = _createSuper(Helper);\n\n  function Helper(personType, firstName, lastName, club) {\n    var _this4;\n\n    _classCallCheck(this, Helper);\n\n    _this4 = _super4.call(this, personType, firstName, lastName, club);\n    helpers.push(_assertThisInitialized(_this4));\n    return _this4;\n  }\n\n  return Helper;\n}(Person);\n\nfunction createPersonFactory(personType, id, firstName, lastName, club, birthdate, sex, graduation) {\n  switch (personType) {\n    case personTypes.FIGHTER:\n      return new Fighter(personType, id, firstName, lastName, club, birthdate, sex, graduation);\n\n    case personTypes.COACH:\n      return new Coach(personType, id, firstName, lastName, club);\n\n    case personTypes.REFEREE:\n      return new Referee(personType, id, firstName, lastName, club);\n\n    case personType.HELPER:\n      return new Helper(personType, id, firstName, lastName, club);\n\n    default:\n      return undefined;\n  }\n}\n\nfunction getPersonById(id) {\n  var wantedPerson = undefined;\n  persons.forEach(function (person) {\n    if (person.id === id) {\n      wantedPerson = person;\n    }\n  }); // TODO: If person not in browser yet call backend\n\n  return wantedPerson;\n}\n/**\r\n * API:\r\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/PersonModule.js?");

/***/ }),

/***/ "./resources/js/Modules/PrimaryButtonModule.js":
/*!*****************************************************!*\
  !*** ./resources/js/Modules/PrimaryButtonModule.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"enablePrimaryButton\": () => (/* binding */ enablePrimaryButton),\n/* harmony export */   \"disablePrimaryButton\": () => (/* binding */ disablePrimaryButton),\n/* harmony export */   \"createPrimaryButton\": () => (/* binding */ createPrimaryButton)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/* harmony import */ var _TiltModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TiltModule */ \"./resources/js/Modules/TiltModule.js\");\n/**\r\n * DEPENDENCIES\r\n */\n\n\n/**\r\n * This Module contains code responsible for managing application specific primary buttons\r\n */\n\nvar primaryButtons = [];\n/**\r\n * This \"class\" represents a displayed HTML primary button element and enables a detailed control over primary buttons\r\n * @param button {HTMLElement} The respective HTML button element this object represents\r\n * @constructor\r\n */\n\nvar PrimaryButton = function PrimaryButton(button) {\n  var This = this;\n  this.primaryButtonElement = button;\n  this.enabled = !this.primaryButtonElement.classList.contains(\"disabled\"); // enable the tilt effect on the primary button element\n\n  (0,_TiltModule__WEBPACK_IMPORTED_MODULE_1__.registerTiltElement)(this.primaryButtonElement);\n  /**\r\n   * This function disables a primary button (is not clickable anymore)\r\n   */\n\n  this.disablePrimaryButton = function () {\n    this.enabled = false;\n    this.primaryButtonElement.classList.add(\"disabled\");\n  };\n  /**\r\n   * This function enables a primary button (primary button can be clicked again)\r\n   */\n\n\n  this.enablePrimaryButton = function () {\n    this.enabled = true;\n    this.primaryButtonElement.classList.remove(\"disabled\");\n  };\n  /**\r\n   * This function manages click actions on the button. E.g. it prevents disabled buttons from being clicked.\r\n   */\n\n\n  this.primaryButtonElement.addEventListener(\"click\", function (e) {\n    if (!This.enabled) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  });\n};\n/**\r\n * This function creates a html element primary button with the application specific markup\r\n * @param classes {string[]} The classes which should be set on the anchor element\r\n * @param href {string} Optional - If given it sets the href attribute of the anchor element\r\n * @param iconName {string} This application mainly uses the Google Material Icons Font and this string determines which icon should be displayed\r\n * @param text {string} Sets the accompanying text of the primary button\r\n * @return {HTMLElement}\r\n */\n\n\nPrimaryButton.createPrimaryButton = function (classes, href, iconName, text) {\n  var button = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"a\", [\"primary-button\"].concat(classes));\n\n  if (href) {\n    button.setAttribute(\"href\", href);\n  }\n\n  button.appendChild((0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"i\", [\"material-icons\"], iconName));\n  button.appendChild((0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"p\", [], text));\n  primaryButtons.push(new PrimaryButton(button));\n  return button;\n};\n/**\r\n * This block initializes the static primary buttons on an application page\r\n */\n\n\nvar primaryButtonElements = document.querySelectorAll(\".primary-button\");\nprimaryButtonElements.forEach(function (primaryButton) {\n  primaryButtons.push(new PrimaryButton(primaryButton));\n});\n/**\r\n * This function enables a given primary button html element\r\n * @param element {HTMLElement} This given primary button html element will be enabled\r\n */\n\nfunction enablePrimaryButton(element) {\n  if (element.classList.contains(\"primary-button\")) {\n    primaryButtons.forEach(function (primaryButton) {\n      if (primaryButton.primaryButtonElement === element) {\n        primaryButton.enablePrimaryButton();\n      }\n    });\n  }\n}\n/**\r\n * This function disables a given primary button element\r\n * @param element {HTMLElement} This given primary button html element will be disabled\r\n */\n\n\nfunction disablePrimaryButton(element) {\n  if (element.classList.contains(\"primary-button\")) {\n    primaryButtons.forEach(function (primaryButton) {\n      if (primaryButton.primaryButtonElement === element) {\n        primaryButton.disablePrimaryButton();\n      }\n    });\n  }\n}\n/**\r\n * This api function creates and returns an application specific primary button html element\r\n * @param classes {string[]} The classes which should be set on the anchor element\r\n * @param href {string} Optional - If given it sets the href attribute of the anchor element\r\n * @param iconName {string} This application mainly uses the Google Material Icons Font and this string determines which icon should be displayed\r\n * @param text {string} Sets the accompanying text of the primary button\r\n * @return {HTMLElement}\r\n */\n\n\nfunction createPrimaryButton(classes, href, iconName, text) {\n  return PrimaryButton.createPrimaryButton(classes, href, iconName, text);\n}\n/**\r\n * API:\r\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/PrimaryButtonModule.js?");

/***/ }),

/***/ "./resources/js/Modules/SecondaryButtonModule.js":
/*!*******************************************************!*\
  !*** ./resources/js/Modules/SecondaryButtonModule.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"enableSecondaryButton\": () => (/* binding */ enableSecondaryButton),\n/* harmony export */   \"disableSecondaryButton\": () => (/* binding */ disableSecondaryButton),\n/* harmony export */   \"createSecondaryButton\": () => (/* binding */ createSecondaryButton)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/**\r\n * DEPENDENCIES\r\n */\n\n/**\r\n * This Module contains code responsible for managing application specific secondary buttons\r\n */\n\nvar secondaryButtons = [];\n/**\r\n * This \"class\" represents a displayed HTML secondary button element and enables a detailed control over secondary buttons\r\n * @param button {HTMLElement} The respective HTML button element this object represents\r\n * @constructor\r\n */\n\nvar SecondaryButton = function SecondaryButton(button) {\n  var This = this;\n  this.secondaryButtonElement = button;\n  this.enabled = !this.secondaryButtonElement.classList.contains(\"disabled\");\n  /**\r\n   * This function disables a secondary button element (is not clickable anymore)\r\n   */\n\n  this.disableSecondaryButton = function () {\n    this.enabled = false;\n    this.secondaryButtonElement.classList.add(\"disabled\");\n  };\n  /**\r\n   * This function enables a secondary button element (button can be clicked again)\r\n   */\n\n\n  this.enableSecondaryButton = function () {\n    this.enabled = true;\n    this.secondaryButtonElement.classList.remove(\"disabled\");\n  };\n  /**\r\n   * This function manages click actions on the button. E.g. it prevents disables buttons from being clicked.\r\n   */\n\n\n  this.secondaryButtonElement.addEventListener(\"click\", function (e) {\n    if (!This.enabled) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    } else {\n      This.secondaryButtonElement.classList.add(\"clicked\");\n      window.setTimeout(function () {\n        This.secondaryButtonElement.classList.remove(\"clicked\");\n      }, 100);\n    }\n  });\n};\n/**\r\n * This function creates a html element secondary button with the application specific markup\r\n * @param classes\r\n * @param href\r\n * @param text\r\n * @return {HTMLElement}\r\n */\n\n\nSecondaryButton.createSecondaryButton = function (classes, href, text) {\n  var button = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"a\", [\"secondary-button\"].concat(classes));\n\n  if (href) {\n    button.setAttribute(\"href\", href);\n  }\n\n  button.appendChild((0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"span\", [\"text\"], text));\n  return button;\n};\n/**\r\n * This block initializes the static secondary buttons on an application page\r\n */\n\n\nvar secondaryButtonElements = document.querySelectorAll(\".secondary-button\");\nsecondaryButtonElements.forEach(function (secondaryButtonElement) {\n  secondaryButtons.push(new SecondaryButton(secondaryButtonElement));\n});\n/**\r\n * This function enables a given secondary button html element\r\n * @param element {HTMLElement} This given secondary button html element will be enabled\r\n */\n\nfunction enableSecondaryButton(element) {\n  if (element.classList.contains(\"secondary-button\")) {\n    secondaryButtons.forEach(function (secondaryButton) {\n      if (secondaryButton.secondaryButtonElement === element) {\n        secondaryButton.enableSecondaryButton();\n      }\n    });\n  }\n}\n/**\r\n * This function disables a given secondary button element\r\n * @param element {HTMLElement} This given secondary button html element will be disabled\r\n */\n\n\nfunction disableSecondaryButton(element) {\n  if (element.classList.contains(\"secondary-button\")) {\n    secondaryButtons.forEach(function (secondaryButton) {\n      if (secondaryButton.secondaryButtonElement === element) {\n        secondaryButton.disableSecondaryButton();\n      }\n    });\n  }\n}\n/**\r\n * This function creates and returns an application specific secondary button html element\r\n * @param classes {string[]} The classes which should be set on the anchor element\r\n * @param href {string} Optional - If given it sets the href attribute of the anchor element\r\n * @param text {string} Sets the displayed text of the secondary button\r\n * @return {HTMLElement}\r\n */\n\n\nfunction createSecondaryButton(classes, href, text) {\n  return SecondaryButton.createSecondaryButton(classes, href, text);\n}\n/**\r\n * API:\r\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/SecondaryButtonModule.js?");

/***/ }),

/***/ "./resources/js/Modules/SendRequestModule.js":
/*!***************************************************!*\
  !*** ./resources/js/Modules/SendRequestModule.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sendRequest\": () => (/* binding */ sendRequest),\n/* harmony export */   \"getData\": () => (/* binding */ getData)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/* harmony import */ var _NotificationModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NotificationModule */ \"./resources/js/Modules/NotificationModule.js\");\n/* harmony import */ var _LoaderModule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LoaderModule */ \"./resources/js/Modules/LoaderModule.js\");\n/**\n * DEPENDENCIES\n */\n\n\n\n/**\n * This Module contains code responsible for managing HTTP requests (mainly to connect to the backend)\n */\n\nvar requests = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.requests;\n/**\n * This function simply sends a GET request to the specified url and returns the retrieved data\n * @param url\n * @param callback\n */\n\nfunction getData(url, callback) {\n  fetch(url).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    handleJsonResponse(data, callback);\n  });\n}\n/**\n * This function sends a HTTP Request to the desired url\n * @param method {string} The desired method to use for the request\n * @param url {string} The destination the request should be sent to\n * @param callback {function} A function reference to call when the request returns a response\n * @param content {object} The content of the request (body)\n * @param loader {boolean} Determines if a loader animation should be used on the whole page\n */\n\n\nfunction sendRequest(method, url, callback, content) {\n  var loader = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  switch (method) {\n    case _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.requests.GET:\n      getRequest(url, callback, loader);\n      break;\n\n    case _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.requests.POST:\n    case _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.requests.DELETE:\n    case _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.requests.PUT:\n      postRequest(method, url, callback, content, loader);\n      break;\n  }\n}\n\nfunction getRequest(url, callback, loader) {\n  if (loader) {\n    (0,_LoaderModule__WEBPACK_IMPORTED_MODULE_2__.addBigLoader)();\n  }\n\n  fetch(url).then(function (response) {\n    if (loader) {\n      (0,_LoaderModule__WEBPACK_IMPORTED_MODULE_2__.removeBigLoader)();\n    }\n\n    return response.json();\n  }).then(function (json) {\n    handleJsonResponse(json, callback);\n  });\n}\n\nfunction postRequest(method, url, callback, content, loader) {\n  var csrfToken = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\");\n\n  if (loader) {\n    (0,_LoaderModule__WEBPACK_IMPORTED_MODULE_2__.addBigLoader)();\n  }\n\n  fetch(url, {\n    method: method,\n    body: JSON.stringify(content),\n    headers: {\n      \"content-type\": \"application/json; charset=UTF-8\",\n      \"X-CSRF-TOKEN\": csrfToken\n    }\n  }).then(function (response) {\n    if (loader) {\n      (0,_LoaderModule__WEBPACK_IMPORTED_MODULE_2__.removeBigLoader)();\n    }\n\n    return response.json();\n  }).then(function (json) {\n    handleJsonResponse(json, callback);\n  });\n}\n\nfunction handleJsonResponse(json, callback) {\n  //TODO: remove console.log!\n  console.log(json);\n  var error = false;\n\n  if (typeof json[\"type\"] !== \"undefined\") {\n    switch (json[\"type\"]) {\n      case \"error\":\n        error = true;\n        (0,_NotificationModule__WEBPACK_IMPORTED_MODULE_1__.createNotification)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.notificationTypes.ERROR, json[\"message\"], json[\"timestamp\"], json[\"sender\"]);\n        break;\n\n      case \"success\":\n        (0,_NotificationModule__WEBPACK_IMPORTED_MODULE_1__.createNotification)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.notificationTypes.SUCCESS, json[\"message\"], json[\"timestamp\"], json[\"sender\"]);\n        break;\n    }\n  }\n\n  if (typeof json[\"redirectUrl\"] !== \"undefined\") {\n    window.location.href = json[\"redirectUrl\"];\n  }\n\n  if (!error && callback && typeof callback == \"function\") {\n    callback(json);\n  }\n}\n/**\n * API:\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/SendRequestModule.js?");

/***/ }),

/***/ "./resources/js/Modules/TableActionsModule.js":
/*!****************************************************!*\
  !*** ./resources/js/Modules/TableActionsModule.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/* harmony import */ var _TableModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TableModule */ \"./resources/js/Modules/TableModule.js\");\n/* harmony import */ var _AdministrationModule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AdministrationModule */ \"./resources/js/Modules/AdministrationModule.js\");\n/* harmony import */ var _ModalModule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ModalModule */ \"./resources/js/Modules/ModalModule.js\");\n/* harmony import */ var _SendRequestModule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SendRequestModule */ \"./resources/js/Modules/SendRequestModule.js\");\n/**\n * DEPENDENCIES\n */\n\n\n\n\n\n/**\n * This Module contains code responsible for managing actions related to tables as e.g. adding an element/entity to a table\n */\n\nvar tableActionsContainers = [];\n/**\n * This \"class\" represents a table actions container object\n * @param tableActionsContainer {HTMLElement} The respective html element this object represents\n * @constructor\n */\n\nvar TableActionsContainer = function TableActionsContainer(tableActionsContainer) {\n  var This = this;\n  this.tableIdentificator = undefined;\n  this.connectedTableElement = undefined;\n  this.connectedTableObject = undefined;\n\n  if (tableActionsContainer.getAttribute(\"data-table\")) {\n    this.tableIdentificator = tableActionsContainer.getAttribute(\"data-table\");\n    this.connectedTableElement = document.getElementById(this.tableIdentificator);\n    this.connectedTableObject = (0,_TableModule__WEBPACK_IMPORTED_MODULE_1__.getTableObject)(this.connectedTableElement);\n  } else if (tableActionsContainer.getAttribute(\"data-admin-table\")) {\n    this.tableIdentificator = tableActionsContainer.getAttribute(\"data-admin-table\");\n    this.connectedTableElement = document.getElementById(this.tableIdentificator);\n    this.connectedTableObject = (0,_AdministrationModule__WEBPACK_IMPORTED_MODULE_2__.getAdminTableObject)(this.connectedTableElement);\n  }\n\n  this.tableActionsContainerElement = tableActionsContainer;\n  this.addEntityButton = tableActionsContainer.querySelector(\".primary-button.add-entity\");\n  this.printButton = tableActionsContainer.querySelector(\".primary-button.print\") ? tableActionsContainer.querySelector(\".primary-button.print\") : undefined;\n  /**\n   * This functions listens for clicks on the add entity button and triggers the modal window that requires the necessary input from the user and then adds the newly configured element to the table\n   */\n\n  this.addEntityButton.addEventListener(\"click\", function (e) {\n    e.preventDefault();\n    var url = This.addEntityButton.getAttribute(\"href\");\n    (0,_SendRequestModule__WEBPACK_IMPORTED_MODULE_4__.sendRequest)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.requests.GET, url + \"/create\", function (data) {\n      var entity = This.addEntityButton.querySelector(\"p\").innerText.split(\" \")[0];\n      This.connectedTableObject.addingEntity(data, entity, url);\n    }, undefined, true);\n  });\n\n  if (this.printButton) {\n    this.printButton.addEventListener(\"click\", function () {\n      (0,_ModalModule__WEBPACK_IMPORTED_MODULE_3__.infoModal)(\"Drucken!\", \"Ich drucke die Tabelle jetzt aus! (Vielleicht...)\", undefined);\n    });\n  }\n};\n/**\n * This block initializes static html table actions elements\n */\n\n\nvar tableActionsContainerElements = document.querySelectorAll(\"div.table-actions\");\ntableActionsContainerElements.forEach(function (tAC) {\n  tableActionsContainers.push(new TableActionsContainer(tAC));\n});\n/**\n * API:\n */\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/TableActionsModule.js?");

/***/ }),

/***/ "./resources/js/Modules/TableFilterModule.js":
/*!***************************************************!*\
  !*** ./resources/js/Modules/TableFilterModule.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/* harmony import */ var _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MaterialInputsModule */ \"./resources/js/Modules/MaterialInputsModule.js\");\n/* harmony import */ var _ModalModule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModalModule */ \"./resources/js/Modules/ModalModule.js\");\n/* harmony import */ var _FormModule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FormModule */ \"./resources/js/Modules/FormModule.js\");\n/* harmony import */ var _TagModule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TagModule */ \"./resources/js/Modules/TagModule.js\");\n/* harmony import */ var _TableModule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TableModule */ \"./resources/js/Modules/TableModule.js\");\n/**\n * DEPENDENCIES\n */\n\n\n\n\n\n\n/**\n * This Module contains code responsible for managing the filtering of tables\n */\n\nvar tableFilterContainers = [];\n/**\n * This \"class\" represents a filter object\n * @param key {string} The key of the filter (which column to filter for)\n * @param value {string} The value of the filter (which values to filter the column for)\n * @param table {object} The table the filter affects\n * @param filterContainerObject {object} The responsible filter container object\n * @constructor\n */\n\nvar Filter = function Filter(key, value, table, filterContainerObject) {\n  var This = this; // determines which column to search for values\n\n  this.key = key; // filter for this specific value in the key column;\n\n  this.value = value;\n  this.filterTable = table;\n  this.filterElement = undefined;\n  this.filterContainerObject = filterContainerObject;\n  this.filterContainerElement = filterContainerObject.tableFilterContainerElement;\n  this.chosenFilterContainerElement = this.filterContainerElement.querySelector(\"div.chosen-filters\");\n  /**\n   * This function creates and appends a filter tag element\n   */\n\n  this.createFilterElement = function () {\n    var filter = (0,_TagModule__WEBPACK_IMPORTED_MODULE_4__.createTag)([\"filter\"], This.key, This.value);\n    this.chosenFilterContainerElement.appendChild(filter);\n    this.filterElement = filter;\n  };\n\n  this.createFilterElement();\n  /**\n   * This function listens for click events on the filter element to either delete it or change its value\n   */\n\n  this.filterElement.addEventListener(\"click\", function (e) {\n    var target = e.target;\n\n    while (target && !target.classList.contains(\"filter\") && !target.classList.contains(\"delete\")) {\n      target = target.parentNode;\n    } // Change the clicked filter\n\n\n    if (target.classList.contains(\"filter\")) {\n      var filterKey = This.filterElement.querySelector(\".tag-key\").innerText;\n      var possibleFilterValues = This.filterTable.allFilters[filterKey];\n      var placeHolder = This.filterElement.querySelector(\".tag-value\").innerText;\n      var select = (0,_MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.createInput)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.inputTypes.SELECT, [\"filter-value\"], undefined, \"filter-value\", placeHolder, undefined, undefined, possibleFilterValues);\n      _ModalModule__WEBPACK_IMPORTED_MODULE_2__.confirmModal(\"Filter \" + filterKey + \" updaten\", select.inputContainer, function () {\n        var newValue = select.getValue();\n        This.updateFilter(newValue);\n      }, undefined, undefined);\n      return;\n    } // Delete the clicked filter\n\n\n    if (target.classList.contains(\"delete\")) {\n      This.filterContainerObject.removeFilter(This, This.filterElement);\n    }\n  });\n  /**\n   * This function updates the chosen new filter value\n   * @param newValue String: the new value to filter for\n   */\n\n  this.updateFilter = function (newValue) {\n    This.value = newValue;\n    This.filterElement.querySelector(\".tag-value\").innerHTML = newValue;\n    This.filterContainerObject.updateAppliedFilters();\n  };\n};\n/**\n * This \"class\" represents a table filter container object\n * @param tableFilterContainer {HTMLElement} The respective html element this object represents\n * @constructor\n */\n\n\nvar TableFilterContainer = function TableFilterContainer(tableFilterContainer) {\n  var This = this;\n  this.tableIdentificator = tableFilterContainer.getAttribute(\"data-table\");\n  this.connectedTableElement = document.getElementById(this.tableIdentificator);\n  this.connectedTableObject = (0,_TableModule__WEBPACK_IMPORTED_MODULE_5__.getTableObject)(this.connectedTableElement);\n  this.tableFilterContainerElement = tableFilterContainer;\n  this.addFilterButton = tableFilterContainer.querySelector(\".secondary-button.add-filter\"); // Creates filter object -> the columns of the table represent the filter (keys) and the whole of the values represent the possible filter values\n\n  this.allFilters = this.connectedTableObject.allFilters; // Creates filter object -> available filter (key) is property of this object and all available values for this key are collected in an array of this property\n\n  this.possibleFilters = this.connectedTableObject.possibleFilters; // Same like possible filters but only includes applied filters\n\n  this.appliedFilters = this.connectedTableObject.appliedFilters; // All the currently applied filters collected in an array\n\n  this.activeFilterObjects = this.connectedTableObject.activeFilterObjects;\n  /**\n   * This functions listens for clicks on the add filter button and triggers the modal window that requires the user to choose a desired filter\n   */\n\n  this.addFilterButton.addEventListener(\"click\", function () {\n    var keys = Object.keys(This.connectedTableObject.possibleFilters);\n    var keySelect = (0,_MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.createInput)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.inputTypes.SELECT, [\"filter-column\", \"required\"], undefined, \"filter-column\", \"Spalte\", undefined, undefined, keys);\n    var valueSelect = (0,_MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.createInput)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.inputTypes.SELECT, [\"filter-value\", \"required\"], undefined, \"filter-value\", \"Wert\", undefined, undefined, undefined);\n    valueSelect.disable();\n    var container = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"div\");\n    container.appendChild(keySelect.inputContainer);\n    container.appendChild(valueSelect.inputContainer);\n    keySelect.inputContainer.addEventListener(\"change\", function () {\n      This.updateFilterValueSelect(keySelect.getValue(), valueSelect);\n    });\n    _ModalModule__WEBPACK_IMPORTED_MODULE_2__.confirmModal(\"Neuen Filter wählen\", container, function () {\n      This.handleChosenFilter(keySelect, valueSelect);\n    }, undefined, function () {\n      return (0,_FormModule__WEBPACK_IMPORTED_MODULE_3__.checkForm)(container, true);\n    });\n  });\n  /**\n   * This function enables the second select input element when choosing a new filter (choose the filter value for the filter key)\n   */\n\n  this.updateFilterValueSelect = function (filterKey, valueSelect) {\n    valueSelect.enable();\n    var possibleFilterValues = This.possibleFilters[filterKey];\n    valueSelect.updateOptions(possibleFilterValues);\n  };\n  /**\n   * This function adds a new filter to the table and filters it accordingly\n   * @param keySelect\n   * @param valueSelect\n   */\n\n\n  this.handleChosenFilter = function (keySelect, valueSelect) {\n    var filterKey = keySelect.getValue();\n    var filterValue = valueSelect.getValue();\n    This.activeFilterObjects.push(new Filter(filterKey, filterValue, This.connectedTableObject, This));\n    This.updateAppliedFilters();\n  };\n  /**\n   * This function updates the currently applied filters (after adding a new filter e.g.)\n   */\n\n\n  this.updateAppliedFilters = function () {\n    Object.keys(This.appliedFilters).forEach(function (property) {\n      delete This.appliedFilters[property];\n    });\n    This.activeFilterObjects.forEach(function (filter) {\n      if (filter.key in This.appliedFilters) {\n        if (!This.appliedFilters[filter.key].includes(filter.value)) {\n          This.appliedFilters[filter.key].push(filter.value);\n        }\n      } else {\n        This.appliedFilters[filter.key] = [filter.value];\n      }\n    });\n    This.connectedTableObject.updateVisibleRows();\n    this.possibleFilters = this.connectedTableObject.possibleFilters;\n    this.appliedFilters = this.connectedTableObject.appliedFilters;\n  };\n  /**\n   * This function removes a filter from the connected table\n   * @param filter {object} The filter to be removed\n   * @param filterElement {HTMLElement} The respective html filter element\n   */\n\n\n  this.removeFilter = function (filter, filterElement) {\n    filterElement.remove();\n\n    if (This.activeFilterObjects.includes(filter)) {\n      This.activeFilterObjects.splice(This.activeFilterObjects.indexOf(filter), 1);\n    }\n\n    filter = undefined;\n    This.updateAppliedFilters();\n  };\n};\n/**\n * This block initializes static html table filter elements\n */\n\n\nvar tableFilterContainerElements = document.querySelectorAll(\"div.filter-container\");\ntableFilterContainerElements.forEach(function (tFC) {\n  tableFilterContainers.push(new TableFilterContainer(tFC));\n});\n/**\n * This block checks if there are filter set via cookies and applies them\n */\n\nvar filterCookie;\n\nif (filterCookie = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.getCookie(\"tableFilters\")) {\n  var filterJSON = JSON.parse(filterCookie);\n\n  for (var key in filterJSON) {\n    if (filterJSON.hasOwnProperty(key)) {\n      var value = filterJSON[key];\n      tableFilterContainers[0].activeFilterObjects.push(new Filter(key, value, tableFilterContainers[0].connectedTableObject, tableFilterContainers[0]));\n      tableFilterContainers[0].updateAppliedFilters();\n    }\n  }\n\n  _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.deleteCookie(\"tableFilters\");\n}\n/**\n * API:\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/TableFilterModule.js?");

/***/ }),

/***/ "./resources/js/Modules/TableModule.js":
/*!*********************************************!*\
  !*** ./resources/js/Modules/TableModule.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getTableObject\": () => (/* binding */ getTableObject)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/* harmony import */ var _PrimaryButtonModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PrimaryButtonModule */ \"./resources/js/Modules/PrimaryButtonModule.js\");\n/* harmony import */ var _ModalModule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModalModule */ \"./resources/js/Modules/ModalModule.js\");\n/* harmony import */ var _FormModule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FormModule */ \"./resources/js/Modules/FormModule.js\");\n/* harmony import */ var _TranslationModule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TranslationModule */ \"./resources/js/Modules/TranslationModule.js\");\n/* harmony import */ var _SendRequestModule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SendRequestModule */ \"./resources/js/Modules/SendRequestModule.js\");\n/* harmony import */ var _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./MaterialInputsModule */ \"./resources/js/Modules/MaterialInputsModule.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../app */ \"./resources/js/app.js\");\n/**\n * DEPENDENCIES\n */\n\n\n\n\n\n\n\n\n/**\n * This Module contains code responsible for managing application specific tables\n */\n\nvar tables = [];\n/**\n * This \"class\" represents a table object\n * @param table {HTMLElement} The respective html element this object represents\n * @constructor\n */\n\nvar Table = function Table(table) {\n  var _this2 = this;\n\n  var rowCounter = 0;\n  /**\n   * This inner \"class\" represents a table row as an object for accurate control\n   * @param tr {HTMLElement} The respective row of the table\n   * @param tableObject {object} The table object responsible for this row and row object\n   * @constructor\n   */\n\n  var Row = function Row(tr, tableObject) {\n    var This = this;\n    this.tr = tr;\n    this.table = tableObject;\n\n    if (rowCounter % 2) {\n      This.tr.classList.add(\"even\");\n    } else {\n      This.tr.classList.add(\"odd\");\n    }\n\n    rowCounter++;\n    this.tds = this.tr.querySelectorAll(\"td\");\n    this.visible = true;\n    /**\n     * This object contains the values of the row in the pattern: \"column-name\": \"row-value\"\n     * @type {{}}\n     */\n\n    this.values = {};\n    /**\n     * This function reads all the values (td elements) into the values property\n     */\n\n    this.initializeValues = function () {\n      var _this = this;\n\n      This.tds.forEach(function (td) {\n        var value = td.innerHTML.trim();\n        var key = td.getAttribute(\"data-column\");\n\n        if (key && key.toLowerCase() !== \"aktionen\" && key.toLowerCase() !== \"nr.\") {\n          _this.values[key] = value;\n\n          if (key in tableObject.allFilters) {\n            if (!tableObject.allFilters[key].includes(value)) {\n              tableObject.allFilters[key].push(value);\n            }\n          } else {\n            tableObject.allFilters[key] = [value];\n          }\n        }\n      });\n    };\n\n    this.initializeValues();\n    /**\n     * This function updates a value of this object and also the html equivalent\n     * @param key {string} The key (column(-name)) that should be updated\n     * @param value {string} The new value\n     */\n\n    this.updateValue = function (key, value) {\n      if (this.values.hasOwnProperty(key)) {\n        this.values[key] = value;\n        This.tds.forEach(function (td) {\n          if (td.getAttribute(\"data-column\") === key) {\n            td.innerHTML = value;\n          }\n        });\n      }\n    };\n    /**\n     * This function hides the respective tr element from displaying (when it does not fit the current filter e.g.)\n     */\n\n\n    this.hide = function () {\n      if (This.visible) {\n        This.visible = false;\n        This.tr.classList.add(\"no-display\");\n      }\n    };\n    /**\n     * This function shows an earlier hidden tr element (when it fits the current filter again)\n     */\n\n\n    this.show = function () {\n      if (!This.visible) {\n        This.visible = true;\n        This.tr.classList.remove(\"no-display\");\n      }\n    };\n    /**\n     * This function creates a new row element and returns it\n     * @param values {object} The values of the td elements of the new row\n     * @param dataColumns {string[]} The name of the data-column attribute in the correct order\n     * @param count {Number} The number of the row (for continuous numbering)\n     * @return {HTMLElement|undefined}\n     */\n\n\n    Row.createRow = function (values, dataColumns, count) {\n      if (Object.getOwnPropertyNames(values).length !== dataColumns.length - 1) {\n        return undefined;\n      }\n\n      var row = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"tr\", []); //first td\n\n      var nrTd = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"td\", [], count);\n      nrTd.setAttribute(\"data-column\", \"Nr.\");\n      row.appendChild(nrTd); //all values\n\n      var counter = 1;\n\n      for (var i in values) {\n        if (values.hasOwnProperty(i)) {\n          var key = dataColumns[counter++];\n\n          if (values.hasOwnProperty(key)) {\n            var td = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"td\", [], values[key]);\n            td.setAttribute(\"data-column\", key);\n            row.appendChild(td);\n          }\n        }\n      } //last td\n\n\n      var actionTd = GeneralModule.generateElementApi(\"td\", []);\n      var editBtn = (0,_PrimaryButtonModule__WEBPACK_IMPORTED_MODULE_1__.createPrimaryButton)([\"edit\"], undefined, \"create\", \"Bearbeiten\");\n      actionTd.appendChild(editBtn);\n      var deleteBtn = (0,_PrimaryButtonModule__WEBPACK_IMPORTED_MODULE_1__.createPrimaryButton)([\"delete\"], undefined, \"delete\", \"Löschen\");\n      actionTd.appendChild(deleteBtn);\n      actionTd.setAttribute(\"data-column\", \"Aktionen\");\n      row.appendChild(actionTd);\n      return row;\n    };\n  };\n\n  var This = this;\n  this.tableElement = table;\n  this.tableHeader = table.querySelector(\"thead\");\n  this.tableBody = table.querySelector(\"tbody\");\n  this.tableFooter = table.querySelector(\"tfoot\") ? table.querySelector(\"tfoot\") : undefined; // collect the headings of every column\n\n  this.dataColumns = [];\n  var ths = this.tableHeader.querySelectorAll(\"th\");\n  ths.forEach(function (th) {\n    if (th.querySelector(\"span.column-heading\")) {\n      var dataColumn = th.querySelector(\"span.column-heading\").innerText;\n\n      _this2.dataColumns.push(dataColumn);\n    }\n  }); // collection of tr elements of table body\n\n  this.trs = this.tableBody.querySelectorAll(\"tr\"); // array for the row objects\n\n  this.rows = []; // Creates filter object -> the columns of the table represent the filter (keys) and the whole of the values represent the possible filter values\n\n  this.allFilters = {}; // Creates filter object -> available filter (key) is property of this object and all available values for this key are collected in an array of this property\n\n  this.possibleFilters = {}; // Same like possible filters but only includes applied filters\n\n  this.appliedFilters = {};\n  this.possibleFilters = this.allFilters; // All the currently applied filters collected in an array\n\n  this.activeFilterObjects = []; // Contains all the selected row objects\n\n  this.selectedRows = []; // Contains the maximum amount of selectable entries\n\n  this.selectLimit = parseInt(This.tableElement.getAttribute(\"data-select-limit\")); // Iterate over all available rows in table body and read them into objects\n\n  this.trs.forEach(function (tr) {\n    _this2.rows.push(new Row(tr, This));\n  });\n  /**\n   * This function listens for clicks on the table element to initiate any actions (editing rows, deleting rows, etc.)\n   */\n\n  this.tableElement.addEventListener(\"click\", function (e) {\n    var target = e.target;\n\n    while (target.nodeName !== \"BODY\" && !target.classList.contains(\"sort\") && !target.classList.contains(\"edit\") && !target.classList.contains(\"delete\") && !target.classList.contains(\"select-row\")) {\n      target = target.parentElement;\n    }\n\n    if (target.nodeName === \"BODY\") {\n      return;\n    } // Sort the table\n\n\n    if (target.classList.contains(\"sort\")) {\n      var _ths = This.tableHeader.querySelectorAll(\"th\");\n\n      var ascending = true;\n\n      if (target.classList.contains(\"ascending\")) {\n        ascending = false;\n        target.classList.remove(\"ascending\");\n        target.classList.add(\"descending\");\n      } else {\n        target.classList.remove(\"descending\");\n        target.classList.add(\"ascending\");\n      }\n\n      var t = target;\n\n      while (t && t.nodeName !== \"TH\") {\n        t = t.parentNode;\n      }\n\n      var columnIndex = 0;\n      var counter = 0;\n\n      _ths.forEach(function (th) {\n        var sort = th.querySelector(\"a.sort\");\n\n        if (sort && sort !== target) {\n          sort.classList.remove(\"ascending\", \"descending\");\n        }\n\n        if (t === th) {\n          columnIndex = counter;\n        }\n\n        counter++;\n      });\n\n      This.sortTable(columnIndex, ascending);\n      This.recolorRows();\n      return;\n    } // Determine which row has been clicked on\n\n\n    var clickedRow = target;\n\n    while (clickedRow.nodeName !== \"TR\") {\n      clickedRow = clickedRow.parentElement;\n    } // Edit a table row\n\n\n    if (target.classList.contains(\"edit\")) {\n      e.preventDefault();\n      var rowObject = This.getRowObject(clickedRow);\n      (0,_SendRequestModule__WEBPACK_IMPORTED_MODULE_5__.getData)(target.getAttribute(\"href\") + \"/edit\", function (data) {\n        This.editRow(rowObject, data);\n      });\n      return;\n    } // Delete a table row\n\n\n    if (target.classList.contains(\"delete\")) {\n      e.preventDefault();\n\n      var _rowObject = This.getRowObject(clickedRow);\n\n      This.deleteRow(clickedRow, _rowObject);\n      return;\n    } // Select a table row\n\n\n    if (target.classList.contains(\"select-row\")) {\n      // Somehow this is necessary as without this this handler will react to two click events\n      e.preventDefault();\n\n      var _rowObject2 = This.getRowObject(clickedRow);\n\n      This.handleSelection(_rowObject2);\n      return;\n    }\n  });\n\n  this.handleSelection = function (rowObject) {\n    var checkBox = rowObject.tr.querySelector(\".checkbox-input-container.select-row input\");\n\n    if (checkBox.checked) {\n      checkBox.checked = false;\n      rowObject.tr.classList.remove(\"selected\");\n\n      if (This.selectedRows.includes(rowObject)) {\n        This.selectedRows.splice(This.selectedRows.indexOf(rowObject), 1);\n      }\n    } else {\n      // check if it is allowed to add more items\n      if (This.selectedRows.length === This.selectLimit) {\n        _ModalModule__WEBPACK_IMPORTED_MODULE_2__.infoModal(\"Maximale Anzahl\", \"Die maximale Anzahl an auswählbaren Einträgen beträgt \" + This.selectLimit + \". Das kann sich zum Beispiel auf die maximale Anzahl an Teammitgliedern beziehen.\");\n        return;\n      } else {\n        checkBox.checked = true;\n        rowObject.tr.classList.add(\"selected\");\n\n        if (!This.selectedRows.includes(rowObject)) {\n          This.selectedRows.push(rowObject);\n        }\n      }\n    }\n\n    checkBox.dispatchEvent(new Event(\"change\", {\n      bubbles: true,\n      cancelable: true\n    }));\n  };\n  /**\n   * This function initializes the addition of a new entity/element to the table. This sets up a modal window that asks the user for the required input and calls the addEntity method afterwards\n   */\n\n\n  this.addingEntity = function (inputData, entity, url) {\n    var container = _TranslationModule__WEBPACK_IMPORTED_MODULE_4__.translateObjectToInputs(inputData, true);\n    var ModalWindow = _ModalModule__WEBPACK_IMPORTED_MODULE_2__.confirmModal(entity + \" erstellen\", container, undefined, undefined, function () {\n      if (!(0,_FormModule__WEBPACK_IMPORTED_MODULE_3__.checkForm)(container, true)) {\n        return false;\n      } else {\n        var data = _TranslationModule__WEBPACK_IMPORTED_MODULE_4__.translateInputsToObject(container);\n        (0,_SendRequestModule__WEBPACK_IMPORTED_MODULE_5__.sendRequest)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.requests.POST, url, function () {\n          ModalWindow.closeModal();\n          This.addEntity();\n        }, data, true);\n      }\n    });\n  };\n  /**\n   * This function adds a new element as a row element to the table\n   * @param userInputObject {object} The object containing the translated user input from the input elements regarding the creation of a new element\n   */\n\n\n  this.addEntity = function () {\n    window.setTimeout(function () {\n      window.location.reload(true);\n    }, 5000);\n  }.bind(this);\n  /**\n   * This function returns the responsible row object for a given tr element\n   * @param tr {HTMLElement} The respective tr element\n   * @return {*}\n   */\n\n\n  this.getRowObject = function (tr) {\n    var r = undefined;\n    This.rows.forEach(function (row) {\n      if (row.tr === tr) {\n        r = row;\n      }\n    });\n    return r;\n  };\n  /**\n   * This function deletes a row from the table\n   * @param tr {HTMLElement} The respective tr element\n   * @param rowObject {object} The responsible row object\n   */\n\n\n  this.deleteRow = function (tr, rowObject) {\n    var url = tr.querySelector(\"a.primary-button.delete\").getAttribute(\"href\");\n    var object = _TranslationModule__WEBPACK_IMPORTED_MODULE_4__.translateToJson(Object.getOwnPropertyNames(rowObject.values), rowObject.values);\n    var ModalWindow = _ModalModule__WEBPACK_IMPORTED_MODULE_2__.deleteModal(\"Eintrag löschen?\", \"Willst du den Eintrag Nr. <span class='highlighted-span'>\" + tr.querySelector(\"td\").innerText + \"</span> wirklich löschen?\", function () {\n      (0,_SendRequestModule__WEBPACK_IMPORTED_MODULE_5__.sendRequest)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.requests.DELETE, url, function () {\n        This.rows.splice(This.rows.indexOf(rowObject), 1);\n        tr.remove();\n        This.recolorRows();\n        This.renumberRows();\n      }, object, true);\n    }, undefined, undefined);\n  };\n  /**\n   * This function renumbers the rows of this table (after deleting a table row)\n   */\n\n\n  this.renumberRows = function () {\n    var counter = 1;\n    This.rows.forEach(function (row) {\n      row.updateValue(\"Nr.\", counter++ + \"\");\n    });\n  };\n  /**\n   * This function initializes the editing of a given (/chosen) table row\n   * @param row {object} The desired updated table row object\n   * @param data {object} Contains the data from the backend concerning the entity to be edited\n   */\n\n\n  this.editRow = function (row, data) {\n    var url = row.tr.querySelector(\"a.primary-button.edit\").getAttribute(\"href\");\n    var container = _TranslationModule__WEBPACK_IMPORTED_MODULE_4__.translateObjectToInputs(data, true);\n    var ModalWindow = _ModalModule__WEBPACK_IMPORTED_MODULE_2__.confirmModal(\"Eintrag bearbeiten\", container, undefined, undefined, function () {\n      if (!(0,_FormModule__WEBPACK_IMPORTED_MODULE_3__.checkForm)(container, true)) {\n        return false;\n      } else {\n        var _data = _TranslationModule__WEBPACK_IMPORTED_MODULE_4__.translateInputsToObject(container);\n\n        (0,_SendRequestModule__WEBPACK_IMPORTED_MODULE_5__.sendRequest)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.requests.PUT, url, function () {\n          ModalWindow.closeModal();\n          This.updateRow(row, _data);\n        }, _data, true);\n      }\n    });\n  };\n  /**\n   * This function updates a row with given user input\n   * @param row {object} The row object that should be updated\n   * @param data {object} The new data for the row. Each key should correspond to an existing table column heading\n   */\n\n\n  this.updateRow = function (row, data) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key)) {\n        if (key === \"Geburtsdatum\") {\n          key = \"Alter\";\n          data[key] = String((0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.calculateAge)(data[\"Geburtsdatum\"]));\n        }\n\n        row.updateValue(key, data[key]);\n      }\n    }\n  };\n  /**\n   * This function sorts the table according to a given column\n   * @param column {Number} The index of the column to sorted accordingly to\n   * @param ascending {boolean} Indicates if the table should be sorted in ascending (if true) or descending order\n   */\n\n\n  this.sortTable = function (column, ascending) {\n    var rows, switching, i, x, y, shouldSwitch;\n    switching = true;\n\n    while (switching) {\n      switching = false;\n      rows = This.tableBody.querySelectorAll(\"tr\");\n\n      for (i = 0; i < rows.length - 1; i++) {\n        shouldSwitch = false;\n        x = rows[i].getElementsByTagName(\"TD\")[column].innerHTML;\n        y = rows[i + 1].getElementsByTagName(\"TD\")[column].innerHTML;\n\n        if (!isNaN(Number(x))) {\n          x = Number(x);\n          y = Number(y);\n        } else {\n          x = x.toLowerCase();\n          y = y.toLowerCase();\n        }\n\n        if (ascending) {\n          if (x > y) {\n            //ascending\n            shouldSwitch = true;\n            break;\n          }\n        } else {\n          if (x < y) {\n            //descending\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n\n      if (shouldSwitch) {\n        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n      }\n    }\n  };\n  /**\n   * This function updates the visible rows of this table (after adding a new filter e.g.)\n   */\n\n\n  this.updateVisibleRows = function () {\n    This.rows.forEach(function (row) {\n      row.show();\n\n      for (var key in This.appliedFilters) {\n        if (This.appliedFilters.hasOwnProperty(key)) {\n          if (row.values.hasOwnProperty(key) && !This.appliedFilters[key].includes(row.values[key])) {\n            row.hide();\n          }\n        }\n      }\n    });\n    this.recolorRows();\n    this.updatePossibleFilters();\n  };\n  /**\n   * This function updates the possible filters that a user can choose from then on\n   */\n\n\n  this.updatePossibleFilters = function () {\n    This.possibleFilters = {};\n    This.rows.forEach(function (row) {\n      // Iterate only over the visible rows\n      if (row.visible) {\n        // Then iterate over every key (column / td) of row\n        for (var key in row.values) {\n          if (row.values.hasOwnProperty(key)) {\n            if (key in This.possibleFilters) {\n              if (!This.possibleFilters[key].includes(row.values[key])) {\n                This.possibleFilters[key].push(row.values[key]);\n              }\n            } else {\n              This.possibleFilters[key] = [row.values[key]];\n            }\n          }\n        }\n      }\n    });\n  };\n  /**\n   * This function manages the coloring of the rows\n   */\n\n\n  this.recolorRows = function () {\n    var rows = This.tableBody.querySelectorAll(\"tr\");\n    rowCounter = 0;\n    rows.forEach(function (row) {\n      if (!row.classList.contains(\"no-display\")) {\n        row.classList.remove(\"even\", \"odd\");\n\n        if (rowCounter % 2) {\n          row.classList.add(\"even\");\n        } else {\n          row.classList.add(\"odd\");\n        }\n\n        rowCounter++;\n      }\n    });\n  };\n};\n/**\n * This block initializes static html table elements\n */\n\n\nvar tableElements = document.querySelectorAll(\"table.table\");\ntableElements.forEach(function (t) {\n  tables.push(new Table(t));\n});\n/**\n * This function returns the responsible table object for a given html table element\n * @param tableElement {HTMLElement} The table element for which the object is wanted\n * @return {*}\n */\n\nfunction getTableObject(tableElement) {\n  if (tableElement.classList.contains(\"table\")) {\n    var tableObject = undefined;\n    tables.forEach(function (table) {\n      if (table.tableElement === tableElement) {\n        tableObject = table;\n      }\n    });\n    return tableObject;\n  }\n}\n/**\n * API:\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/TableModule.js?");

/***/ }),

/***/ "./resources/js/Modules/TagModule.js":
/*!*******************************************!*\
  !*** ./resources/js/Modules/TagModule.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTag\": () => (/* binding */ createTag)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/**\r\n * DEPENDENCIES\r\n */\n\n/**\r\n * This Module contains code responsible for managing tags (a tag is a html element)\r\n */\n\n/**\r\n * This function creates a tag and returns it\r\n * @param classes {string[]} The classes that should be added to the tag element\r\n * @param key {string} The key of the tag element\r\n * @param value {string} The optional value of the tag element\r\n * @return {HTMLElement}\r\n */\n\nfunction createTag(classes, key, value) {\n  var tag = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"span\", [\"tag\"].concat(classes));\n  var tagDetails = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"span\", [\"tag-details\"]);\n  var tagKey = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"span\", [\"tag-key\"], key);\n  tagDetails.appendChild(tagKey);\n\n  if (value) {\n    tagDetails.appendChild(document.createTextNode(\":\"));\n    var tagValue = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"span\", [\"tag-value\"], value);\n    tagDetails.appendChild(tagValue);\n  }\n\n  tag.appendChild(tagDetails);\n  var deleteBtn = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"a\", [\"delete\"]);\n  var deleteIcon = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"i\", [\"material-icons\"], \"close\");\n  deleteBtn.appendChild(deleteIcon);\n  tag.appendChild(deleteBtn);\n  return tag;\n}\n/**\r\n * API:\r\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/TagModule.js?");

/***/ }),

/***/ "./resources/js/Modules/TheaterModule.js":
/*!***********************************************!*\
  !*** ./resources/js/Modules/TheaterModule.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"theaterOptions\": () => (/* binding */ theaterOptions),\n/* harmony export */   \"theater\": () => (/* binding */ theater)\n/* harmony export */ });\n/* harmony import */ var theaterjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! theaterjs */ \"./node_modules/theaterjs/index-exposed.js\");\n/* harmony import */ var theaterjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(theaterjs__WEBPACK_IMPORTED_MODULE_0__);\n/**\r\n * DEPENDENCIES\r\n */\n\n/**\r\n * This Module contains code responsible for managing a typing-like animation and its properties\r\n */\n\nvar theaterOptions = {\n  locale: \"de\",\n  minSpeed: {\n    erase: 10,\n    type: 40\n  },\n  maxSpeed: {\n    erase: 80,\n    type: 100\n  }\n};\nvar theater = theaterjs__WEBPACK_IMPORTED_MODULE_0___default()(theaterOptions);\nvar previousActorElement = undefined;\ntheater.on(\"type:start, erase:start\", function () {\n  var currentActorElement = theater.getCurrentActor().$element;\n\n  if (!currentActorElement.classList.contains(\"is-typing\")) {\n    currentActorElement.classList.add(\"is-typing\");\n\n    if (typeof previousActorElement !== \"undefined\") {\n      previousActorElement.classList.remove(\"is-typing\");\n    }\n\n    previousActorElement = currentActorElement;\n  }\n}).on(\"type:end, erase:end\", function () {\n  // and then remove it when he's done\n  var actor = theater.getCurrentActor();\n});\n/**\r\n * API:\r\n */\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/TheaterModule.js?");

/***/ }),

/***/ "./resources/js/Modules/TiltModule.js":
/*!********************************************!*\
  !*** ./resources/js/Modules/TiltModule.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"registerTiltElement\": () => (/* binding */ registerTiltElement)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery-exposed.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/**\r\n * DEPENDENCIES\r\n */\n\n/**\r\n * This Module contains code responsible for tilting elements\r\n */\n\nvar generalTiltOptions = {\n  maxTilt: 15,\n  scale: 1.15\n};\nvar tiltElements = document.querySelectorAll(\".tilt\");\ntiltElements.forEach(function (tiltElement) {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(tiltElement).tilt(generalTiltOptions);\n});\n/**\r\n * This functions enables other modules to register tilt elements so that these get the tilt effect\r\n * @param element\r\n */\n\nfunction registerTiltElement(element) {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).tilt(generalTiltOptions);\n}\n/**\r\n * API:\r\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/TiltModule.js?");

/***/ }),

/***/ "./resources/js/Modules/TimeScheduleModule.js":
/*!****************************************************!*\
  !*** ./resources/js/Modules/TimeScheduleModule.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"changeDuration\": () => (/* binding */ changeDuration),\n/* harmony export */   \"enableTimeIndicator\": () => (/* binding */ enableTimeIndicator),\n/* harmony export */   \"disableTimeIndicator\": () => (/* binding */ disableTimeIndicator),\n/* harmony export */   \"getProgress\": () => (/* binding */ getProgress),\n/* harmony export */   \"updateProgress\": () => (/* binding */ updateProgress)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/* harmony import */ var _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MaterialInputsModule */ \"./resources/js/Modules/MaterialInputsModule.js\");\n/* harmony import */ var _ModalModule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModalModule */ \"./resources/js/Modules/ModalModule.js\");\n/**\r\n * DEPENDENCIES\r\n */\n\n\n\n/**\r\n * This Module contains code responsible for managing time schedules\r\n */\n// length in em for coherent depiction in frontend\n\nvar ONE_MINUTE_LENGTH_IN_EM = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.ONE_MINUTE_LENGTH;\nvar MAX_LENGTH_IN_HOURS = 15;\nvar progressEvent = new CustomEvent(\"timeScheduleProgress\", {\n  bubbles: true,\n  cancelable: true\n});\nvar timeSchedules = [];\n/**\r\n * This \"class\" represents a displayed HTML time schedule element and enables a detailed control over it\r\n * @param timeSchedule {HTMLElement} The respective HTML time schedule element this object represents\r\n * @constructor\r\n */\n\nvar TimeSchedule = function TimeSchedule(timeSchedule) {\n  /*********************************************************************\r\n   *          Properties                                               *\r\n   ********************************************************************/\n  var This = this;\n  this.timeScheduleElement = timeSchedule;\n  this.unqiueIdentifier = this.timeScheduleElement.getAttribute(\"id\");\n  this.timeScaleElement = timeSchedule.querySelector(\"div.time-scale\");\n  this.locationColumnElements = timeSchedule.querySelectorAll(\"div.locations div.fight-place\");\n  this.currentTimeIndicator = undefined;\n  this.numberLocations = this.locationColumnElements.length; // since start time and end time (on the time scale!) have separate spans, increasing the total amount of spans by 1, we need to deduct a span to get the correct amount of hours displayed on the time scale\n\n  this.lengthInHours = (this.timeScaleElement.querySelectorAll(\"span.time\").length - 1) / 4;\n  this.startTime = this.timeScaleElement.querySelector(\"span.start\").innerText; // TODO: get expected end time from backend via unique Identifier\n\n  this.expectedEndTime = undefined;\n  this.minuteInterval = undefined;\n  this.progress = 0;\n  /*********************************************************************\r\n   *          Functions                                                *\r\n   ********************************************************************/\n\n  this.enableTimeIndicator = function () {\n    if (!This.currentTimeIndicator) {\n      This.currentTimeIndicator = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"hr\", [\"current-time-indicator\"]);\n      This.timeScheduleElement.appendChild(This.currentTimeIndicator);\n    } // calculate start time in minutes\n\n\n    var currentDate = new Date(); // TODO: reactivate\n    //let currentTimeInMinutes = currentDate.getHours() * 60 + currentDate.getMinutes();\n\n    var currentTimeInMinutes = 900;\n    var startTimeInMinutes = 0;\n    var parts = This.startTime.split(\":\");\n    startTimeInMinutes += parseInt(parts[0]) * 60;\n    startTimeInMinutes += parseInt(parts[1]); // TODO: get expected end time from backend\n\n    var expectedEndInMinutes = undefined; // calculate max end time in minutes\n\n    var maxEndTimeRelative = This.lengthInHours * 60;\n    var currentTimeInMinutesRelative = currentTimeInMinutes - startTimeInMinutes;\n    This.minuteInterval = window.setInterval(adjustCurrentTimeIndicator, 60000);\n\n    function adjustCurrentTimeIndicator() {\n      currentTimeInMinutesRelative++;\n\n      if (currentTimeInMinutesRelative <= maxEndTimeRelative) {\n        var topOffset = currentTimeInMinutesRelative * ONE_MINUTE_LENGTH_IN_EM; // Top offset can't be smaller than 0\n\n        topOffset = topOffset < 0 ? 0 : topOffset;\n        This.currentTimeIndicator.style.top = topOffset + \"em\";\n        This.locationColumnElements.forEach(function (column) {\n          markTimeBlocksAsDone(column, currentTimeInMinutesRelative);\n        });\n        updateProgress();\n      } else {\n        clearInterval(This.minuteInterval);\n      }\n    }\n\n    function updateProgress() {\n      var progress = currentTimeInMinutesRelative / maxEndTimeRelative;\n      This.progress = Math.round(progress * 100) / 100;\n      This.timeScheduleElement.dispatchEvent(progressEvent);\n    }\n  };\n  /**\r\n   *  This function disables a prior enabled time indicator\r\n   * @param remove {boolean} This parameter determines if the time indicator element should also be removed (from displaying)\r\n   */\n\n\n  this.disableTimeIndicator = function () {\n    var remove = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (This.minuteInterval) {\n      clearInterval(This.minuteInterval);\n\n      if (remove) {\n        This.currentTimeIndicator.remove();\n      }\n    }\n  };\n  /**\r\n   * This function sets the height of the time schedule container (after e.g. changing the duration of the tournament)\r\n   * @param countHours {number} This variable determines how high the container should be and can also contain fractions of hours\r\n   */\n\n\n  this.setHeightOfTimeContainer = function (countHours) {\n    // TODO: calculation of height and width of elements should be done in backend\n    var heightOf1Hour = ONE_MINUTE_LENGTH_IN_EM * 60; // the height is calculated in this way: 5em are needed for the headings of the locations and any paddings and margins in the container and each hour needs the equalling length of one minute times 60 of space\n\n    This.timeScheduleElement.style.height = 5 + heightOf1Hour * countHours + \"em\";\n    This.setHeightOfVisualAids();\n  };\n\n  this.setHeightOfVisualAids = function () {\n    var heightOf1Hour = ONE_MINUTE_LENGTH_IN_EM * 60;\n    This.locationColumnElements.forEach(function (column) {\n      column.style.backgroundSize = \"100% \" + heightOf1Hour + \"em\";\n    });\n  };\n  /**\r\n   * This function sets the width of the time schedule container according to the number of location\r\n   * @param countLocations\r\n   */\n\n\n  this.setWidthOfTimeContainer = function (countLocations) {\n    // the width is calculated in this way: 6em are needed for the time scale on the left, 2em are needed as a little space on the right end of the time container and each of the fight place containers needs 12em of space\n    This.timeScheduleElement.style.width = 6 + 2 + 12 * countLocations + \"em\";\n  };\n  /**\r\n   * This function asks the user to change the length of the time schedule in the well defined limits\r\n   */\n\n\n  this.changeDuration = function () {\n    var calculatedMinValue = This.calculateMinDurationValue();\n    var minValue = calculatedMinValue !== 0 ? calculatedMinValue : 1;\n    var rangeInput = (0,_MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.createInput)(_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.inputTypes.RANGE, [], undefined, \"total-duration\", \"Länge des Wettkampfes (in Stunden):\", This.lengthInHours ? This.lengthInHours : 1, undefined, undefined);\n    rangeInput.setMin(minValue);\n    rangeInput.setMax(MAX_LENGTH_IN_HOURS);\n    rangeInput.setStep(0.25);\n    (0,_ModalModule__WEBPACK_IMPORTED_MODULE_2__.confirmModal)(\"Länge des Wettkampfes\", rangeInput.inputContainer, function () {\n      var chosenDuration = rangeInput.getValue();\n      var hours = parseInt(This.startTime.substring(0, This.startTime.indexOf(\":\")));\n      var minutes = parseInt(This.startTime.substring(This.startTime.indexOf(\":\") + 1));\n      This.timeScaleElement.innerHTML = \"\";\n      var startTimeSpan = createTimeScaleSpan(hours, minutes, true);\n      This.timeScaleElement.appendChild(startTimeSpan);\n      var numberQuarterHours = chosenDuration * 4;\n\n      for (var i = 0; i < numberQuarterHours; i++) {\n        minutes += 15;\n\n        if (minutes === 60) {\n          minutes = 0;\n          hours += 1;\n        }\n\n        if (hours === 24) {\n          hours = 0;\n        }\n\n        var span = createTimeScaleSpan(hours, minutes);\n        This.timeScaleElement.appendChild(span);\n      }\n\n      This.setHeightOfTimeContainer(chosenDuration);\n    });\n  };\n\n  this.calculateMinDurationValue = function () {\n    var longestDuration = this.calculateExpectedEndTime(); // calculate the number of quarter hours needed\n\n    var minValueInQuarterHours = Math.ceil(longestDuration / 15); // convert to hours\n\n    var minValueInHours = minValueInQuarterHours / 4; // add another quarter hour as \"padding\"\n\n    minValueInHours += 0.25;\n    return minValueInHours;\n  };\n\n  this.calculateExpectedEndTime = function () {\n    var maxValue = 0;\n    This.locationColumnElements.forEach(function (column) {\n      var totalTimeForThisLocation = calculateDurationOfLocation(column);\n\n      if (totalTimeForThisLocation > maxValue) {\n        maxValue = totalTimeForThisLocation;\n      }\n    });\n    return maxValue;\n  };\n  /**\r\n   * This function updates properties (after a manual call) that could potentially have changed\r\n   */\n\n\n  this.updateProperties = function () {\n    this.locationColumnElements = timeSchedule.querySelectorAll(\"div.locations div.fight-place\");\n    this.numberLocations = this.locationColumnElements.length;\n    this.setWidthOfTimeContainer(This.numberLocations);\n  };\n  /**\r\n   * This function initializes the time schedule element in order to ensure a correct display in frontend\r\n   */\n\n\n  this.initialization = function () {\n    this.setHeightOfTimeContainer(this.lengthInHours);\n    this.setWidthOfTimeContainer(this.numberLocations);\n    this.expectedEndTime = this.calculateExpectedEndTime();\n  };\n\n  this.initialization();\n};\n\nfunction calculateDurationOfLocation(column) {\n  if (column.classList.contains(\"location-column\")) {\n    var totalTime = 0;\n    var timeBlocks = column.querySelectorAll(\"div.time-block\");\n    timeBlocks.forEach(function (timeBlock) {\n      var singleDuration = parseInt(timeBlock.querySelector(\"span.duration\").innerText);\n      totalTime += singleDuration;\n    });\n    return totalTime;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * This function marks time blocks that have been already passed as \"done\" (the categories e.g. have already been finished)\r\n * @param column {HTMLElement} The location column element in which the time block should be marked\r\n * @param currentTime {number} The current time in minutes\r\n */\n\n\nfunction markTimeBlocksAsDone(column, currentTime) {\n  var timeBlocks = column.querySelectorAll(\"div.time-block\");\n  var cumulativeCategoriesTime = 0;\n  timeBlocks.forEach(function (timeBlock) {\n    var duration = parseInt(timeBlock.querySelector(\"span.duration\").innerText);\n    cumulativeCategoriesTime += duration;\n\n    if (cumulativeCategoriesTime < currentTime) {\n      timeBlock.classList.add(\"done\");\n    }\n  });\n}\n/**\r\n * This function creates a span element representing a time on the time scale\r\n * @param hours {number}\r\n * @param minutes {number}\r\n * @param start {boolean} Contains if the span to be generated is the first span\r\n */\n\n\nfunction createTimeScaleSpan(hours, minutes) {\n  var start = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var span = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"time\"]);\n  var emphasizeSpan = undefined; // convert number values to strings\n\n  var textMinutes = minutes + \"\";\n  var textHours = hours + \"\";\n\n  if (minutes === 0) {\n    textMinutes = \"00\";\n  }\n\n  if (hours === 0) {\n    textHours = \"00\";\n  }\n\n  if (start) {\n    emphasizeSpan = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"emphasize\"], textHours + \":\" + textMinutes);\n    span.classList.add(\"start\");\n  }\n\n  if (minutes === 0) {\n    if (!emphasizeSpan) {\n      emphasizeSpan = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement(\"span\", [\"emphasize\"], textHours + \":\" + textMinutes);\n    }\n\n    span.classList.add(\"whole\");\n  }\n\n  if (emphasizeSpan) {\n    span.appendChild(emphasizeSpan);\n  } else {\n    span.innerHTML = textHours + \":\" + textMinutes;\n  }\n\n  return span;\n}\n/**\r\n * This block initializes the static time schedules on an application page\r\n */\n\n\nvar timeScheduleElements = document.querySelectorAll(\".time-schedule-container\");\ntimeScheduleElements.forEach(function (timeSchedule) {\n  timeSchedules.push(new TimeSchedule(timeSchedule));\n});\n/**\r\n * This function enables other modules to change the total duration of a time schedule\r\n * @param timeScheduleElement {HTMLElement} The time schedule element that should be changed in duration\r\n */\n\nfunction changeDuration(timeScheduleElement) {\n  if (timeScheduleElement.classList.contains(\"time-schedule-container\")) {\n    timeSchedules.forEach(function (tS) {\n      if (tS.timeScheduleElement === timeScheduleElement) {\n        tS.changeDuration();\n      }\n    });\n  }\n}\n/**\r\n * This function enables other modules to enable the time indicator of a time schedule\r\n * @param timeScheduleElement {HTMLElement} The time schedule element that should have a time indicator\r\n */\n\n\nfunction enableTimeIndicator(timeScheduleElement) {\n  if (timeScheduleElement.classList.contains(\"time-schedule-container\")) {\n    timeSchedules.forEach(function (tS) {\n      if (tS.timeScheduleElement === timeScheduleElement) {\n        tS.enableTimeIndicator();\n      }\n    });\n  }\n}\n/**\r\n * This function enables other modules to enable the time indicator of a time schedule\r\n * @param timeScheduleElement {HTMLElement} The time schedule element that should have a time indicator\r\n * @param remove {boolean} This parameter determines if the corresponding html time indicator element should be removed\r\n */\n\n\nfunction disableTimeIndicator(timeScheduleElement, remove) {\n  if (timeScheduleElement.classList.contains(\"time-schedule-container\")) {\n    timeSchedules.forEach(function (tS) {\n      if (tS.timeScheduleElement === timeScheduleElement) {\n        tS.disableTimeIndicator(remove);\n      }\n    });\n  }\n}\n/**\r\n * This api function returns the progress of a given time schedule element\r\n * @param timeScheduleElement {HTMLElement} The time schedule element of which the progress is requested\r\n * @return {number}\r\n */\n\n\nfunction getProgress(timeScheduleElement) {\n  var progress = 0;\n\n  if (timeScheduleElement.classList.contains(\"time-schedule-container\")) {\n    timeSchedules.forEach(function (tS) {\n      if (tS.timeScheduleElement === timeScheduleElement) {\n        progress = tS.progress;\n      }\n    });\n  }\n\n  return progress;\n}\n/**\r\n * This function updates properties of a time schedule object that could potentially have changed\r\n * @param timeScheduleElement {HTMLElement} The time schedule element of which the progress is requested\r\n */\n\n\nfunction updateProgress(timeScheduleElement) {\n  if (timeScheduleElement.classList.contains(\"time-schedule-container\")) {\n    timeSchedules.forEach(function (tS) {\n      if (tS.timeScheduleElement === timeScheduleElement) {\n        tS.updateProperties();\n      }\n    });\n  }\n}\n/**\r\n * API:\r\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/TimeScheduleModule.js?");

/***/ }),

/***/ "./resources/js/Modules/TooltipModule.js":
/*!***********************************************!*\
  !*** ./resources/js/Modules/TooltipModule.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTooltip\": () => (/* binding */ createTooltip)\n/* harmony export */ });\n/* harmony import */ var tippy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tippy.js */ \"./node_modules/tippy.js/dist/tippy.esm.js\");\n/**\n * DEPENDENCIES\n */\n\n/**\n * This Module contains code responsible for managing tooltips\n */\n\n/**\n * This function creates a tooltip for a given element (element selector)\n * @param triggerElementQuerySelector {string} The element query selector to identify the parent of the tooltip\n * @param content {string} The content of the tooltip\n */\n\nfunction createTooltip(triggerElementQuerySelector, content) {\n  (0,tippy_js__WEBPACK_IMPORTED_MODULE_0__.default)(triggerElementQuerySelector, {\n    content: content,\n    offset: [0, 20],\n    arrow: tippy_js__WEBPACK_IMPORTED_MODULE_0__.roundArrow,\n    theme: \"svtora\"\n  });\n}\n/**\n * API:\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/TooltipModule.js?");

/***/ }),

/***/ "./resources/js/Modules/TranslationModule.js":
/*!***************************************************!*\
  !*** ./resources/js/Modules/TranslationModule.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"translateObjectToInputs\": () => (/* binding */ translateObjectToInputs),\n/* harmony export */   \"translateInputsToObject\": () => (/* binding */ translateInputsToObject),\n/* harmony export */   \"translateToJson\": () => (/* binding */ translateToJson)\n/* harmony export */ });\n/* harmony import */ var _GeneralModule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeneralModule */ \"./resources/js/Modules/GeneralModule.js\");\n/* harmony import */ var _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MaterialInputsModule */ \"./resources/js/Modules/MaterialInputsModule.js\");\n/**\n * DEPENDENCIES\n */\n\n\n/**\n * This \"Module\" contains code responsible for creating inputs from objects or translating inputs to objects\n * @type {{}}\n */\n\nvar inputTypes = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.inputTypes;\n/**\n * This variable holds a map which maps keys (e.g. column (headers) to input types in conventional tables (!)\n * @type {Map<string, any>}\n */\n\nvar keyToInput = _GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generalVariables.keyToInput;\n/**\n * This function generates an input element (or multiple in case of checkboxes and radio buttons) out of a given object\n * @param object {object} The property \"key\" of the given object contains the value of the name attribute for further identification purposes. The \"value\" property can either be undefined (in case the input element should not contain any content yet) or it contains a string which should already be inserted into the input element or it is an array of objects (in case of checkBoxes or radioButtons or Selects). These objects have two properties: \"value\" is a string containing the value and \"selected\" is a boolean determining whether this option should be preselected.\n * @param required {boolean} States if the generated input should be required\n * @return {HTMLElement}\n */\n\nfunction translateKeyToInput(object, required) {\n  var key = object[\"key\"];\n  var value = object[\"value\"];\n  var requiredClass = \"\";\n\n  if (required) {\n    requiredClass = \"required\";\n  }\n\n  var container = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\");\n  var inputObject = undefined;\n  var heading = undefined;\n\n  if (keyToInput.has(key.toLowerCase())) {\n    var inputType = keyToInput.get(key.toLowerCase());\n\n    switch (inputType) {\n      case inputTypes.TEXT:\n        inputObject = _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.createInput(inputType, [requiredClass], undefined, key, key, undefined, undefined, undefined);\n\n        if (value) {\n          inputObject.setValue(value);\n        }\n\n        container.appendChild(inputObject.inputContainer);\n        break;\n\n      case inputTypes.RADIO:\n      case inputTypes.CHECKBOX:\n        heading = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"h3\", [\"input-heading\"], key);\n        inputObject = _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.createInput(inputType, [requiredClass], undefined, key, undefined, undefined, undefined, value);\n        container.appendChild(heading);\n        container.appendChild(inputObject.inputContainer);\n        break;\n\n      case inputTypes.DATE:\n        inputObject = _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.createInput(inputType, [requiredClass], undefined, key, key, undefined, undefined, undefined);\n\n        if (value) {\n          inputObject.setValue(value);\n        }\n\n        container.appendChild(inputObject.inputContainer);\n        break;\n\n      case inputTypes.TIME:\n        inputObject = _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.createInput(inputType, [requiredClass], undefined, key, key, undefined, undefined, undefined);\n\n        if (value) {\n          inputObject.setValue(value);\n        }\n\n        container.appendChild(inputObject.inputContainer);\n        break;\n\n      case inputTypes.SELECT:\n        heading = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"h3\", [\"input-heading\"], key);\n        var options = [];\n        var selected = undefined;\n        value.forEach(function (item) {\n          options.push(item[\"value\"]);\n\n          if (item[\"checked\"]) {\n            selected = item[\"value\"];\n          }\n        });\n        inputObject = _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.createInput(inputType, [requiredClass], undefined, key, key, undefined, undefined, options);\n\n        if (selected) {\n          inputObject.setValue(selected + \"\");\n        }\n\n        container.appendChild(heading);\n        container.appendChild(inputObject.inputContainer);\n        break;\n\n      case inputTypes.SWITCH:\n        inputObject = _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.createInput(inputType, [requiredClass], undefined, key, key, key, value, undefined);\n        container.appendChild(inputObject.inputContainer);\n    }\n  } else {\n    console.log(\"This key: \" + key + \" is not known!\");\n  }\n\n  return container;\n}\n/**\n * This functions creates a container element containing input elements according to the given object.\n * @param object {object} The property name is the key and determines the value of the name attribute. Each property (key) has either just a string value or is an array of objects (in case of checkBoxes or radioButtons or Selects). These objects have two properties: \"value\" is a string containing the value and \"checked\" is a boolean determining whether this option should be preselected.\n * @param required {boolean} States if all the inputs to be generated should be required\n * @return {HTMLElement}\n */\n\n\nfunction translateObjectToInputs(object, required) {\n  var container = (0,_GeneralModule__WEBPACK_IMPORTED_MODULE_0__.generateElement)(\"div\", [\"container\"]);\n\n  for (var key in object) {\n    if (object.hasOwnProperty(key)) {\n      var value = object[key];\n      var subContainer = translateKeyToInput({\n        \"key\": key,\n        \"value\": value\n      }, required);\n\n      if (subContainer) {\n        container.appendChild(subContainer);\n      }\n    }\n  }\n\n  return container;\n}\n/**\n * This functions translates the user input of a given input element into an object structure like: \"nameAttribute\" : \"userInput\"\n * @param inputContainer {HTMLElement}\n * @return {{value: String, key: string}}\n */\n\n\nfunction translateInputToObject(inputContainer) {\n  var inputObject = _MaterialInputsModule__WEBPACK_IMPORTED_MODULE_1__.getInputObject(inputContainer);\n  var key = inputObject.name;\n  var value = inputObject.getValue();\n  return {\n    \"key\": key,\n    \"value\": value\n  };\n}\n/**\n * This function creates an object with the name attribute of the input elements as the key and the user input as the value (grouped checkboxes create string arrays!)\n * @param container {HTMLElement} Should contain input elements\n * @return {{}}\n */\n\n\nfunction translateInputsToObject(container) {\n  var userInputObject = {};\n  var inputContainers = undefined;\n\n  if (container.classList.contains(\"input-container\")) {\n    inputContainers = [container];\n  } else {\n    inputContainers = container.querySelectorAll(\".input-container\");\n  }\n\n  inputContainers.forEach(function (iC) {\n    var translation = translateInputToObject(iC);\n    userInputObject[translation[\"key\"]] = translation[\"value\"];\n  });\n  return userInputObject;\n}\n/**\n * This function translates given keys and values into a json object\n * @param keys {string[]} Contains the different table column headers (data-columns)\n * @param values {object} Optional - contains possible set values\n */\n\n\nfunction translateToJson(keys, values) {\n  var json = {};\n  keys.forEach(function (key) {\n    json[key] = values[key];\n  });\n  return json;\n}\n/**\n * API:\n */\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/Modules/TranslationModule.js?");

/***/ }),

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GeneralModule\": () => (/* reexport module object */ _Modules_GeneralModule_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   \"SendRequestModule\": () => (/* reexport module object */ _Modules_SendRequestModule_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   \"LoaderModule\": () => (/* reexport module object */ _Modules_LoaderModule_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   \"PersonModule\": () => (/* reexport module object */ _Modules_PersonModule_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   \"MaterialInputsModule\": () => (/* reexport module object */ _Modules_MaterialInputsModule_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   \"TranslationModule\": () => (/* reexport module object */ _Modules_TranslationModule_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   \"FormModule\": () => (/* reexport module object */ _Modules_FormModule_js__WEBPACK_IMPORTED_MODULE_7__),\n/* harmony export */   \"TiltModule\": () => (/* reexport module object */ _Modules_TiltModule_js__WEBPACK_IMPORTED_MODULE_8__),\n/* harmony export */   \"PrimaryButtonModule\": () => (/* reexport module object */ _Modules_PrimaryButtonModule_js__WEBPACK_IMPORTED_MODULE_9__),\n/* harmony export */   \"SecondaryButtonModule\": () => (/* reexport module object */ _Modules_SecondaryButtonModule_js__WEBPACK_IMPORTED_MODULE_10__),\n/* harmony export */   \"ModalModule\": () => (/* reexport module object */ _Modules_ModalModule_js__WEBPACK_IMPORTED_MODULE_11__),\n/* harmony export */   \"FightingSystemModule\": () => (/* reexport module object */ _Modules_FightingSystemModule_js__WEBPACK_IMPORTED_MODULE_12__),\n/* harmony export */   \"CategoryModule\": () => (/* reexport module object */ _Modules_CategoryModule_js__WEBPACK_IMPORTED_MODULE_13__),\n/* harmony export */   \"TooltipModule\": () => (/* reexport module object */ _Modules_TooltipModule_js__WEBPACK_IMPORTED_MODULE_14__),\n/* harmony export */   \"TheaterModule\": () => (/* reexport module object */ _Modules_TheaterModule_js__WEBPACK_IMPORTED_MODULE_15__),\n/* harmony export */   \"NavModule\": () => (/* reexport module object */ _Modules_NavModule_js__WEBPACK_IMPORTED_MODULE_16__),\n/* harmony export */   \"HeaderModule\": () => (/* reexport module object */ _Modules_HeaderModule_js__WEBPACK_IMPORTED_MODULE_17__),\n/* harmony export */   \"TagModule\": () => (/* reexport module object */ _Modules_TagModule_js__WEBPACK_IMPORTED_MODULE_18__),\n/* harmony export */   \"TableModule\": () => (/* reexport module object */ _Modules_TableModule_js__WEBPACK_IMPORTED_MODULE_19__),\n/* harmony export */   \"TableActionsModule\": () => (/* reexport module object */ _Modules_TableActionsModule_js__WEBPACK_IMPORTED_MODULE_20__),\n/* harmony export */   \"TableFilterModule\": () => (/* reexport module object */ _Modules_TableFilterModule_js__WEBPACK_IMPORTED_MODULE_21__),\n/* harmony export */   \"NotificationModule\": () => (/* reexport module object */ _Modules_NotificationModule_js__WEBPACK_IMPORTED_MODULE_22__),\n/* harmony export */   \"ContextMenuModule\": () => (/* reexport module object */ _Modules_ContextMenuModule_js__WEBPACK_IMPORTED_MODULE_23__),\n/* harmony export */   \"AccordionModule\": () => (/* reexport module object */ _Modules_AccordionModule_js__WEBPACK_IMPORTED_MODULE_24__),\n/* harmony export */   \"CarouselModule\": () => (/* reexport module object */ _Modules_CarouselModule_js__WEBPACK_IMPORTED_MODULE_25__),\n/* harmony export */   \"AdministrationModule\": () => (/* reexport module object */ _Modules_AdministrationModule_js__WEBPACK_IMPORTED_MODULE_26__),\n/* harmony export */   \"MapModule\": () => (/* reexport module object */ _Modules_MapModule_js__WEBPACK_IMPORTED_MODULE_27__),\n/* harmony export */   \"TimeScheduleModule\": () => (/* reexport module object */ _Modules_TimeScheduleModule_js__WEBPACK_IMPORTED_MODULE_28__)\n/* harmony export */ });\n/* harmony import */ var tilt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tilt.js */ \"./node_modules/tilt.js/src/tilt.jquery.js\");\n/* harmony import */ var tilt_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tilt_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Modules_GeneralModule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Modules/GeneralModule.js */ \"./resources/js/Modules/GeneralModule.js\");\n/* harmony import */ var _Modules_SendRequestModule_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Modules/SendRequestModule.js */ \"./resources/js/Modules/SendRequestModule.js\");\n/* harmony import */ var _Modules_LoaderModule_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Modules/LoaderModule.js */ \"./resources/js/Modules/LoaderModule.js\");\n/* harmony import */ var _Modules_PersonModule_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Modules/PersonModule.js */ \"./resources/js/Modules/PersonModule.js\");\n/* harmony import */ var _Modules_MaterialInputsModule_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Modules/MaterialInputsModule.js */ \"./resources/js/Modules/MaterialInputsModule.js\");\n/* harmony import */ var _Modules_TranslationModule_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Modules/TranslationModule.js */ \"./resources/js/Modules/TranslationModule.js\");\n/* harmony import */ var _Modules_FormModule_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Modules/FormModule.js */ \"./resources/js/Modules/FormModule.js\");\n/* harmony import */ var _Modules_TiltModule_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Modules/TiltModule.js */ \"./resources/js/Modules/TiltModule.js\");\n/* harmony import */ var _Modules_PrimaryButtonModule_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Modules/PrimaryButtonModule.js */ \"./resources/js/Modules/PrimaryButtonModule.js\");\n/* harmony import */ var _Modules_SecondaryButtonModule_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Modules/SecondaryButtonModule.js */ \"./resources/js/Modules/SecondaryButtonModule.js\");\n/* harmony import */ var _Modules_ModalModule_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Modules/ModalModule.js */ \"./resources/js/Modules/ModalModule.js\");\n/* harmony import */ var _Modules_FightingSystemModule_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Modules/FightingSystemModule.js */ \"./resources/js/Modules/FightingSystemModule.js\");\n/* harmony import */ var _Modules_CategoryModule_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Modules/CategoryModule.js */ \"./resources/js/Modules/CategoryModule.js\");\n/* harmony import */ var _Modules_TooltipModule_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Modules/TooltipModule.js */ \"./resources/js/Modules/TooltipModule.js\");\n/* harmony import */ var _Modules_TheaterModule_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Modules/TheaterModule.js */ \"./resources/js/Modules/TheaterModule.js\");\n/* harmony import */ var _Modules_NavModule_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Modules/NavModule.js */ \"./resources/js/Modules/NavModule.js\");\n/* harmony import */ var _Modules_HeaderModule_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Modules/HeaderModule.js */ \"./resources/js/Modules/HeaderModule.js\");\n/* harmony import */ var _Modules_TagModule_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./Modules/TagModule.js */ \"./resources/js/Modules/TagModule.js\");\n/* harmony import */ var _Modules_TableModule_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Modules/TableModule.js */ \"./resources/js/Modules/TableModule.js\");\n/* harmony import */ var _Modules_TableActionsModule_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./Modules/TableActionsModule.js */ \"./resources/js/Modules/TableActionsModule.js\");\n/* harmony import */ var _Modules_TableFilterModule_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./Modules/TableFilterModule.js */ \"./resources/js/Modules/TableFilterModule.js\");\n/* harmony import */ var _Modules_NotificationModule_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./Modules/NotificationModule.js */ \"./resources/js/Modules/NotificationModule.js\");\n/* harmony import */ var _Modules_ContextMenuModule_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./Modules/ContextMenuModule.js */ \"./resources/js/Modules/ContextMenuModule.js\");\n/* harmony import */ var _Modules_AccordionModule_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./Modules/AccordionModule.js */ \"./resources/js/Modules/AccordionModule.js\");\n/* harmony import */ var _Modules_CarouselModule_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./Modules/CarouselModule.js */ \"./resources/js/Modules/CarouselModule.js\");\n/* harmony import */ var _Modules_AdministrationModule_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./Modules/AdministrationModule.js */ \"./resources/js/Modules/AdministrationModule.js\");\n/* harmony import */ var _Modules_MapModule_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./Modules/MapModule.js */ \"./resources/js/Modules/MapModule.js\");\n/* harmony import */ var _Modules_TimeScheduleModule_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./Modules/TimeScheduleModule.js */ \"./resources/js/Modules/TimeScheduleModule.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://App/./resources/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					result = fn();
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"app": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			for(moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) var result = runtime(__webpack_require__);
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkApp"] = self["webpackChunkApp"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendor"], () => (__webpack_require__("./resources/js/app.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});